{"version":3,"sources":["webpack:///./src/pages/talks.js","webpack:///./src/components/page-header.js","webpack:///./src/components/page-footer.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js","webpack:///./src/utils/format-date.js","webpack:///./src/utils/find-speakers-for-talk.js","webpack:///./src/utils/get-upcoming-event.js"],"names":["_ref","data","talks","edges","map","edge","node","allSpeakers","speakers","today","Date","upcomingEvent","Object","_utils_get_upcoming_event__WEBPACK_IMPORTED_MODULE_6__","a","allEvents","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","talk","speakersOfTalk","_utils_find_speakers_for_talk__WEBPACK_IMPORTED_MODULE_7__","speakersString","ramda__WEBPACK_IMPORTED_MODULE_5__","g","speaker","frontmatter","name","style","date","backgroundColor","key","id","className","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","fields","slug","title","dateTime","_utils_format_date__WEBPACK_IMPORTED_MODULE_4__","query","page_header_LinkItem","children","react_default","reactstrap_es","f","tag","props","gatsby_link_default","assign","activeClassName","page_header","PageHeader","_this","_React$Component","call","this","toggle","setState","prevState","collapsed","state","render","h","color","light","expand","d","i","j","onClick","c","isOpen","navbar","e","t","Component","page_footer","gatsby_browser_entry","v","b","sidebar","alt","src","href","index_es","icon","free_brands_svg_icons_index_es","rel","free_solid_svg_icons_index_es","__webpack_exports__","StaticQuery","Fragment","Helmet_default","site","siteMetadata","meta","content","description","marginTop","k","md","_1698205358","moment__WEBPACK_IMPORTED_MODULE_0___default","locale","format","245","n","ramda__WEBPACK_IMPORTED_MODULE_0__","extractDate","extractor","sortedEvents","ramda__WEBPACK_IMPORTED_MODULE_1__","length","todayMoment","moment_moment__WEBPACK_IMPORTED_MODULE_0___default","datesAfter","event","isBefore"],"mappings":"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","file":"component---src-pages-talks-js-5d7083489beb8e35ee98.js","sourcesContent":["import React from \"react\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport formatDate from \"../utils/format-date\"\n\nimport * as R from \"ramda\"\n\nimport getUpcomingEvent from \"../utils/get-upcoming-event\"\nimport findSpeakersForTalk from \"../utils/find-speakers-for-talk\"\n\nconst TalksPage = ({ data }) => {\n  const talks = data.talks.edges.map(edge => edge.node)\n\n  const allSpeakers = data.speakers.edges.map(edge => edge.node)\n\n  const today = new Date()\n\n  const upcomingEvent = getUpcomingEvent({ allEvents: talks, today })\n\n  return (\n    <Layout>\n      <h2>Alle Vortragsthemen</h2>\n\n      <ul>\n        {talks.map(talk => {\n\n          const speakersOfTalk = findSpeakersForTalk({ allSpeakers, talk })\n\n          const speakersString = R.join(\", \")(speakersOfTalk.map(speaker => speaker.frontmatter.name))\n\n          const isNextTalk = upcomingEvent && talk.frontmatter.date === upcomingEvent.frontmatter.date\n\n          const style = isNextTalk ? { backgroundColor: \"rgb(231, 231, 231)\" } : undefined\n\n          return (\n            <li key={talk.id} style={style}>\n              <span className=\"lead\">\n                <Link to={talk.fields.slug}>{talk.frontmatter.title}</Link>\n              </span>\n              {\" | \"}\n              <time dateTime={talk.frontmatter.date}>{formatDate(talk.frontmatter.date)}</time>\n              <p>von {speakersString}</p>\n            </li>\n          )\n        })}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default TalksPage\n\nexport const query = graphql`\n  query {\n    talks: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { sourceName: { eq: \"talks\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            tags\n            speaker\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    speakers: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"speakers\" } } }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Link from \"gatsby-link\"\n\nimport { Container, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Collapse } from \"reactstrap\"\n\nconst LinkItem = ({ to, children }) => {\n  return (\n    <NavItem>\n      <NavLink\n        className=\"link-item\"\n        tag={props => {\n          return (\n            <Link {...props} to={to} activeClassName=\"active\">\n              {children}\n            </Link>\n          )\n        }}\n      />\n    </NavItem>\n  )\n}\n\nclass PageHeader extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      collapsed: false,\n    }\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapsed: !prevState.collapsed }))\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light expand=\"sm\">\n        <Container>\n          <NavbarBrand to=\"/\" tag={props => <Link {...props} />}>\n            Java User Group Görlitz\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n\n          <Collapse isOpen={this.state.collapsed} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <LinkItem to=\"/\">Aktuell</LinkItem>\n              <LinkItem to=\"/talks\">Vorträge</LinkItem>\n              <LinkItem to=\"/unterstuetzer\">Unterstützer</LinkItem>\n              <LinkItem to=\"/about\">About</LinkItem>\n              <LinkItem to=\"/mitmachen\">Mitmachen</LinkItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default PageHeader\n","import React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst PageFooter = () => (\n  <footer className=\"container footer\">\n    <p>\n      &copy; Manuel Mauky 2018 | <Link to=\"/impressum\">Impressum</Link> |{\" \"}\n      <Link to=\"/datenschutz\">Datenschutz</Link>\n    </p>\n  </footer>\n)\n\nexport default PageFooter\n","import React from \"react\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport { faTwitter, faFacebook, faGooglePlus, faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { faEnvelope, faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\"\n\n\nconst Sidebar = () => (\n  <div className=\"sidebar\">\n      <img alt=\"Logo der JUG Görlitz\" src=\"/images/logo.png\" className=\"img-responsive\" />\n    <h3>\n      Wir sind Mitglied im\n      <br />\n      <a href=\"http://www.ijug.eu/\">iJUG Verband</a>\n    </h3>\n\n    <h3>Andere Medien</h3>\n    <ul className=\"list-unstyled\">\n      <li>\n        <a href=\"https://twitter.com/jug_gr\">\n          <FontAwesomeIcon icon={faTwitter} /> Twitter\n        </a>\n      </li>\n      <li>\n        <a href=\"https://www.facebook.com/juggr\">\n          <FontAwesomeIcon icon={faFacebook} /> Facebook\n        </a>\n      </li>\n      <li>\n        <a href=\"https://plus.google.com/+Jug-grDe\" rel=\"publisher\">\n          <FontAwesomeIcon icon={faGooglePlus} /> Google+\n        </a>\n      </li>\n      <li>\n        <a href=\"https://groups.google.com/d/forum/juggr\">\n          <FontAwesomeIcon icon={faEnvelope} /> Mailing-List\n        </a>\n      </li>\n      <li>\n        <a href=\"https://github.com/juggr\">\n          <FontAwesomeIcon icon={faGithub} /> Github\n        </a>\n      </li>\n      <li>\n        <a href=\"https://calendar.google.com/calendar/embed?src=gtgjid1tkrv0pl7o1hsqr3d8d8%40group.calendar.google.com&ctz=Europe/Berlin\">\n          <FontAwesomeIcon icon={faCalendarAlt} /> Kalender\n        </a>\n        <a href=\"https://www.google.com/calendar/ical/gtgjid1tkrv0pl7o1hsqr3d8d8%40group.calendar.google.com/public/basic.ics\">\n          (ICAL)\n        </a>\n      </li>\n    </ul>\n\n    <br />\n\n    <a href=\"https://jax.de/\">\n      <img alt=\"Banner für die WJAX 2018\" className=\"img-responsive\" src=\"/images/jax_banner.png\" />\n    </a>\n\n    <br />\n\n    <p>Unterstützt durch:</p>\n    <a href=\"https://www.sogehtsoftware.de\">\n      <img alt=\"Logo von Saxonia Systems AG\" className=\"img-responsive\" src=\"/images/saxonia_logo.png\" />\n    </a>\n\n    <br />\n    <br />\n\n    <a href=\"https://mitp.de/\">\n      <img alt=\"Logo des mitp Verlags\" className=\"img-responsive\" src=\"/images/mitp_logo.jpeg\" />\n    </a>\n  </div>\n)\n\nexport default Sidebar\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport {Container, Row, Col} from \"reactstrap\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport \"../styles/style.css\"\n\nimport PageHeader from \"./page-header\"\nimport PageFooter from \"./page-footer\"\nimport Sidebar from \"./sidebar\"\n\nconst Layout = ({ children, data }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              { name: \"description\", content: data.site.siteMetadata.description },\n              {\n                name: \"keywords\",\n                content: \"java, usergroup, görlitz, programmierung\",\n              },\n            ]}\n          />\n\n          <PageHeader />\n          <Container style={{\n            marginTop: \"1em\"\n          }}>\n            <Row>\n              <Col md=\"9\">\n                {children}\n              </Col>\n\n              <Col md=\"3\">\n                  <Sidebar/>\n              </Col>\n            </Row>\n          </Container>\n\n          <PageFooter />\n        </>\n      )}\n    />\n  )\n}\n\n\nexport default Layout\n","import moment from \"moment\"\n\nimport \"moment/locale/de\"\n\nmoment.locale(\"de\")\n\nconst formatDate = date => moment(date).format(\"LL\")\n\nexport default formatDate","import * as R from \"ramda\"\n\n/**\n * For each talk we cannot directly query the speaker info (especially the name) but only the speakerSlugs (not the full slug but the important\n * speaker-identifier with which we can create the slug)\n * we have to query all speakers in a separate query. Then we need to extract from this allSpeakers-list\n * only those speaker info objects that belong to a given talk. This is what this method is doing.\n *\n * @param allSpeakers an array of all speaker objects\n * @param talk a talk object\n */\nconst findSpeakersForTalk = ({ allSpeakers, talk }) => {\n  return R.innerJoin(\n    (speaker, slug) => speaker.fields.slug === `/speakers/${slug}/`,\n    allSpeakers,\n    talk.frontmatter.speaker\n  )\n}\n\nexport default findSpeakersForTalk","import moment from \"moment/moment\"\nimport * as R from \"ramda\"\n\n/**\n * This function is used to determine the next upcoming event based on a list of events and the current date.\n * This is used to mark the next event in the list of all events and to determine which talk to show on the front page.\n *\n * If there is no event in the list the is in the future of today, then the last event is used.\n *\n *\n * @param allEvents a list of events\n * @param extractDate an optional function to extract the date from the event objects.\n * If no function is provided then a property \"frontmatter.date\" is used based on the markdown standard\n * @param today a date object of today. Usualy created by \"new Date()\" or a string representing today.\n * Basically anything that can parsed by moment.js\n */\nconst getUpcomingEvent = ({ allEvents, extractDate, today }) => {\n  if(!allEvents) {\n    return undefined\n  }\n\n  const extractor = extractDate ? extractDate : edge => edge.frontmatter.date\n\n  const sortedEvents = R.sortBy(extractor)(allEvents)\n\n  if(sortedEvents.length === 1) {\n    return sortedEvents[0]\n  }\n\n  const todayMoment = moment(today)\n\n  const datesAfter = R.filter(event => {\n    const date = moment(extractor(event))\n\n    return todayMoment.isBefore(date)\n  })(sortedEvents)\n\n  if(datesAfter && datesAfter.length > 0) {\n    return datesAfter[0]\n  } else {\n    return R.reverse(sortedEvents)[0]\n  }\n}\n\nexport default getUpcomingEvent"],"sourceRoot":""}