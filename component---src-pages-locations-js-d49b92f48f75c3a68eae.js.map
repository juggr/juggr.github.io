{"version":3,"sources":["webpack:///./src/pages/locations.js"],"names":["SpeakersPage","data","locations","edges","map","edge","node","allTalks","talks","locationsWithTalks","location","talksOfLocation","R","talk","frontmatter","includes","fields","locationId","locationsSorted","length","name","key","slug","to"],"mappings":"4FAAA,wGAwCeA,UAhCM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAYD,EAAKC,UAAUC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAClDC,EAAWN,EAAKO,MAAML,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAE7CG,EAAqBP,EAAUE,KAAI,SAAAM,GACvC,IAAMC,EAAkBC,KAAS,SAAAC,GAAI,OAAIA,EAAKC,YAAYJ,SAASK,SAASL,EAASM,OAAOC,cAApEL,CACtBA,KAAS,SAAAC,GAAI,OAAIA,EAAKC,YAAYJ,WAAlCE,CAA4CL,IAG9C,OAAO,OAAP,UAAYG,EAAZ,CAAsBF,MAAOG,OAGzBO,EAAkBN,IAAW,CACjCA,KAAU,SAAAF,GAAQ,OAAIA,EAASF,MAAMW,UACrCP,KAAS,SAAAF,GAAQ,OAAIA,EAASI,YAAYM,SAFpBR,CAGrBH,GAEH,OACE,kBAAC,IAAD,KACE,8CAEA,4BACGS,EAAgBd,KAAI,SAAAM,GAAQ,OAC3B,wBAAIW,IAAKX,EAASM,OAAOM,MACvB,kBAAC,OAAD,CAAMC,GAAIb,EAASM,OAAOM,MAAOZ,EAASI,YAAYM,MADxD,KACuEV,EAASF,MAAMW,OADtF","file":"component---src-pages-locations-js-d49b92f48f75c3a68eae.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { graphql, Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nimport * as R from \"ramda\"\r\n\r\nconst SpeakersPage = ({ data }) => {\r\n  const locations = data.locations.edges.map(edge => edge.node)\r\n  const allTalks = data.talks.edges.map(edge => edge.node)\r\n\r\n  const locationsWithTalks = locations.map(location => {\r\n    const talksOfLocation = R.filter(talk => talk.frontmatter.location.includes(location.fields.locationId))(\r\n      R.filter(talk => talk.frontmatter.location)(allTalks) // it's possible that a talk has no location (yet)\r\n    )\r\n\r\n    return { ...location, talks: talksOfLocation }\r\n  })\r\n\r\n  const locationsSorted = R.sortWith([\r\n    R.descend(location => location.talks.length),\r\n    R.ascend(location => location.frontmatter.name),\r\n  ])(locationsWithTalks)\r\n\r\n  return (\r\n    <Layout>\r\n      <h2>Alle Locations</h2>\r\n\r\n      <ul>\r\n        {locationsSorted.map(location => (\r\n          <li key={location.fields.slug}>\r\n            <Link to={location.fields.slug}>{location.frontmatter.name}</Link> ({location.talks.length} Talks)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SpeakersPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    locations: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"locations\" } } }) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            locationId\r\n          }\r\n\r\n          frontmatter {\r\n            name\r\n            info\r\n            street\r\n            number\r\n            zip\r\n            city\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    talks: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"talks\" } } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            location\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}