{"version":3,"sources":["webpack:///./src/pages/locations.js"],"names":["SpeakersPage","data","locations","edges","map","edge","node","allTalks","talks","locationsWithTalks","location","talksOfLocation","R","talk","frontmatter","includes","fields","locationId","locationsSorted","length","name","key","slug","to"],"mappings":"4FAAA,wGAwCeA,UAhCM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAYD,EAAKC,UAAUC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAClDC,EAAWN,EAAKO,MAAML,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAE7CG,EAAqBP,EAAUE,KAAI,SAAAM,GACvC,IAAMC,EAAkBC,KAAS,SAAAC,GAAI,OAAIA,EAAKC,YAAYJ,SAASK,SAASL,EAASM,OAAOC,cAApEL,CACtBA,KAAS,SAAAC,GAAI,OAAIA,EAAKC,YAAYJ,WAAlCE,CAA4CL,IAG9C,OAAO,OAAP,UAAYG,EAAZ,CAAsBF,MAAOG,OAGzBO,EAAkBN,IAAW,CACjCA,KAAU,SAAAF,GAAQ,OAAIA,EAASF,MAAMW,UACrCP,KAAS,SAAAF,GAAQ,OAAIA,EAASI,YAAYM,SAFpBR,CAGrBH,GAEH,OACE,kBAAC,IAAD,KACE,8CAEA,4BACGS,EAAgBd,KAAI,SAAAM,GAAQ,OAC3B,wBAAIW,IAAKX,EAASM,OAAOM,MACvB,kBAAC,OAAD,CAAMC,GAAIb,EAASM,OAAOM,MAAOZ,EAASI,YAAYM,MADxD,KACuEV,EAASF,MAAMW,OADtF","file":"component---src-pages-locations-js-d49b92f48f75c3a68eae.js","sourcesContent":["import React from \"react\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport * as R from \"ramda\"\n\nconst SpeakersPage = ({ data }) => {\n  const locations = data.locations.edges.map(edge => edge.node)\n  const allTalks = data.talks.edges.map(edge => edge.node)\n\n  const locationsWithTalks = locations.map(location => {\n    const talksOfLocation = R.filter(talk => talk.frontmatter.location.includes(location.fields.locationId))(\n      R.filter(talk => talk.frontmatter.location)(allTalks) // it's possible that a talk has no location (yet)\n    )\n\n    return { ...location, talks: talksOfLocation }\n  })\n\n  const locationsSorted = R.sortWith([\n    R.descend(location => location.talks.length),\n    R.ascend(location => location.frontmatter.name),\n  ])(locationsWithTalks)\n\n  return (\n    <Layout>\n      <h2>Alle Locations</h2>\n\n      <ul>\n        {locationsSorted.map(location => (\n          <li key={location.fields.slug}>\n            <Link to={location.fields.slug}>{location.frontmatter.name}</Link> ({location.talks.length} Talks)\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default SpeakersPage\n\nexport const query = graphql`\n  query {\n    locations: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"locations\" } } }) {\n      edges {\n        node {\n          fields {\n            slug\n            locationId\n          }\n\n          frontmatter {\n            name\n            info\n            street\n            number\n            zip\n            city\n          }\n        }\n      }\n    }\n\n    talks: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"talks\" } } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            location\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}