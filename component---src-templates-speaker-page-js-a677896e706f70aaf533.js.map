{"version":3,"sources":["webpack:///./src/templates/speaker-page.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["_ref","data","speaker","talks","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","frontmatter","name","pic","style","maxWidth","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","alt","fluid","childImageSharp","twitter_name","href","className","dangerouslySetInnerHTML","__html","html","Fragment","edges","length","map","_ref2","node","key","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","title","query","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"6MAOoB,SAAAA,GAAc,IAAXC,EAAWD,EAAXC,KACbC,EAAmBD,EAAnBC,QAASC,EAAUF,EAAVE,MAEjB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,UAAKJ,EAAQM,YAAYC,MAExBP,EAAQM,YAAYE,KACnBN,EAAAC,EAAAC,cAAA,OAAKK,OAASC,SAAU,UACtBR,EAAAC,EAAAC,cAACO,EAAAR,GAAIS,IAAI,UAAUC,MAAOb,EAAQM,YAAYE,IAAIM,gBAAgBD,SAIrEb,EAAQM,YAAYS,cACnBb,EAAAC,EAAAC,cAAA,oBACW,IACTF,EAAAC,EAAAC,cAAA,KAAGY,KAAA,uBAA6BhB,EAAQM,YAAYS,cAApD,IACEf,EAAQM,YAAYS,eAK1Bb,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cAAcC,yBAA2BC,OAAQnB,EAAQoB,QAExElB,EAAAC,EAAAC,cAAA,WACCH,GACCC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkB,SAAA,KACGpB,EAAMqB,MAAMC,OADf,UAEErB,EAAAC,EAAAC,cAAA,UACGH,EAAMqB,MAAME,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACfxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKD,EAAKE,OAAOC,MACnB3B,EAAAC,EAAAC,cAAC0B,EAAAC,MAAKC,GAAIN,EAAKE,OAAOC,MAAOH,EAAKpB,YAAY2B,cAYvD,IAAMC,oCClDb,IAAAC,EAAAC,EAAA,IAAAC,EACAC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAAF,EAAA,KAAAD,EAAAG,EAHA,QAIAI,gBACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAK,GACL","file":"component---src-templates-speaker-page-js-a677896e706f70aaf533.js","sourcesContent":["import React from \"react\"\n\nimport { graphql, Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\n\nconst SpeakerPage = ({ data }) => {\n  const { speaker, talks } = data\n\n  return (\n    <Layout>\n      <h2>{speaker.frontmatter.name}</h2>\n\n      {speaker.frontmatter.pic && (\n        <div style={{ maxWidth: \"400px\"}}>\n          <Img alt=\"speaker\" fluid={speaker.frontmatter.pic.childImageSharp.fluid} />\n        </div>\n      )}\n\n      {speaker.frontmatter.twitter_name && (\n        <p>\n          Twitter:{\" \"}\n          <a href={`https://twitter.com/${speaker.frontmatter.twitter_name}`}>{`@${\n            speaker.frontmatter.twitter_name\n          }`}</a>\n        </p>\n      )}\n\n      <div className=\"description\" dangerouslySetInnerHTML={{ __html: speaker.html }} />\n\n      <hr />\n      {talks && (\n        <>\n          {talks.edges.length} Talks:\n          <ul>\n            {talks.edges.map(({ node }) => (\n              <li key={node.fields.slug}>\n                <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </Layout>\n  )\n}\n\nexport default SpeakerPage\n\nexport const query = graphql`\n  query($speakerSlug: String!, $speakerId: String!) {\n    speaker: markdownRemark(fields: { slug: { eq: $speakerSlug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        name\n        twitter_name\n        pic {\n          childImageSharp {\n            fluid(maxWidth: 400) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n\n    talks: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"talks\" } }, frontmatter: { speaker: { eq: $speakerId } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}