{"version":3,"sources":["webpack:///./node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ramda/es/internal/_dispatchable.js","webpack:///./node_modules/ramda/es/internal/_xfBase.js","webpack:///./node_modules/ramda/es/internal/_has.js","webpack:///./node_modules/ramda/es/curryN.js","webpack:///./node_modules/ramda/es/internal/_reduce.js","webpack:///./node_modules/ramda/es/keys.js","webpack:///./node_modules/ramda/es/internal/_arity.js","webpack:///./node_modules/ramda/es/internal/_arrayFromIterator.js","webpack:///./node_modules/ramda/es/internal/_equals.js","webpack:///./node_modules/ramda/es/internal/_functionName.js","webpack:///./node_modules/ramda/es/equals.js","webpack:///./node_modules/ramda/es/internal/_xmap.js","webpack:///./node_modules/ramda/es/map.js","webpack:///./node_modules/ramda/es/F.js","webpack:///./node_modules/ramda/es/T.js","webpack:///./node_modules/ramda/es/__.js","webpack:///./node_modules/ramda/es/add.js","webpack:///./node_modules/ramda/es/internal/_concat.js","webpack:///./node_modules/ramda/es/addIndex.js","webpack:///./node_modules/ramda/es/adjust.js","webpack:///./node_modules/ramda/es/internal/_reduced.js","webpack:///./node_modules/ramda/es/internal/_xall.js","webpack:///./node_modules/ramda/es/all.js","webpack:///./node_modules/ramda/es/max.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/prop.js","webpack:///./node_modules/ramda/es/pluck.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/allPass.js","webpack:///./node_modules/ramda/es/always.js","webpack:///./node_modules/ramda/es/and.js","webpack:///./node_modules/ramda/es/internal/_xany.js","webpack:///./node_modules/ramda/es/any.js","webpack:///./node_modules/ramda/es/anyPass.js","webpack:///./node_modules/ramda/es/ap.js","webpack:///./node_modules/ramda/es/internal/_aperture.js","webpack:///./node_modules/ramda/es/internal/_xaperture.js","webpack:///./node_modules/ramda/es/aperture.js","webpack:///./node_modules/ramda/es/append.js","webpack:///./node_modules/ramda/es/apply.js","webpack:///./node_modules/ramda/es/values.js","webpack:///./node_modules/ramda/es/applySpec.js","webpack:///./node_modules/ramda/es/applyTo.js","webpack:///./node_modules/ramda/es/assoc.js","webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/isNil.js","webpack:///./node_modules/ramda/es/assocPath.js","webpack:///./node_modules/ramda/es/nAry.js","webpack:///./node_modules/ramda/es/binary.js","webpack:///./node_modules/ramda/es/liftN.js","webpack:///./node_modules/ramda/es/lift.js","webpack:///./node_modules/ramda/es/both.js","webpack:///./node_modules/ramda/es/curry.js","webpack:///./node_modules/ramda/es/call.js","webpack:///./node_modules/ramda/es/clamp.js","webpack:///./node_modules/ramda/es/internal/_cloneRegExp.js","webpack:///./node_modules/ramda/es/internal/_clone.js","webpack:///./node_modules/ramda/es/clone.js","webpack:///./node_modules/ramda/es/comparator.js","webpack:///./node_modules/ramda/es/not.js","webpack:///./node_modules/ramda/es/complement.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/slice.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/compose.js","webpack:///./node_modules/ramda/es/composeK.js","webpack:///./node_modules/ramda/es/internal/_pipeP.js","webpack:///./node_modules/ramda/es/pipeP.js","webpack:///./node_modules/ramda/es/composeP.js","webpack:///./node_modules/ramda/es/nth.js","webpack:///./node_modules/ramda/es/head.js","webpack:///./node_modules/ramda/es/pipeWith.js","webpack:///./node_modules/ramda/es/composeWith.js","webpack:///./node_modules/ramda/es/concat.js","webpack:///./node_modules/ramda/es/cond.js","webpack:///./node_modules/ramda/es/constructN.js","webpack:///./node_modules/ramda/es/construct.js","webpack:///./node_modules/ramda/es/contains.js","webpack:///./node_modules/ramda/es/converge.js","webpack:///./node_modules/ramda/es/internal/_xreduceBy.js","webpack:///./node_modules/ramda/es/reduceBy.js","webpack:///./node_modules/ramda/es/countBy.js","webpack:///./node_modules/ramda/es/dec.js","webpack:///./node_modules/ramda/es/defaultTo.js","webpack:///./node_modules/ramda/es/difference.js","webpack:///./node_modules/ramda/es/differenceWith.js","webpack:///./node_modules/ramda/es/dissoc.js","webpack:///./node_modules/ramda/es/remove.js","webpack:///./node_modules/ramda/es/update.js","webpack:///./node_modules/ramda/es/dissocPath.js","webpack:///./node_modules/ramda/es/divide.js","webpack:///./node_modules/ramda/es/internal/_xdrop.js","webpack:///./node_modules/ramda/es/drop.js","webpack:///./node_modules/ramda/es/internal/_xtake.js","webpack:///./node_modules/ramda/es/take.js","webpack:///./node_modules/ramda/es/internal/_dropLast.js","webpack:///./node_modules/ramda/es/internal/_xdropLast.js","webpack:///./node_modules/ramda/es/dropLast.js","webpack:///./node_modules/ramda/es/internal/_dropLastWhile.js","webpack:///./node_modules/ramda/es/internal/_xdropLastWhile.js","webpack:///./node_modules/ramda/es/dropLastWhile.js","webpack:///./node_modules/ramda/es/internal/_xdropRepeatsWith.js","webpack:///./node_modules/ramda/es/last.js","webpack:///./node_modules/ramda/es/dropRepeatsWith.js","webpack:///./node_modules/ramda/es/dropRepeats.js","webpack:///./node_modules/ramda/es/internal/_xdropWhile.js","webpack:///./node_modules/ramda/es/dropWhile.js","webpack:///./node_modules/ramda/es/or.js","webpack:///./node_modules/ramda/es/either.js","webpack:///./node_modules/ramda/es/empty.js","webpack:///./node_modules/ramda/es/takeLast.js","webpack:///./node_modules/ramda/es/endsWith.js","webpack:///./node_modules/ramda/es/eqBy.js","webpack:///./node_modules/ramda/es/eqProps.js","webpack:///./node_modules/ramda/es/evolve.js","webpack:///./node_modules/ramda/es/internal/_xfind.js","webpack:///./node_modules/ramda/es/find.js","webpack:///./node_modules/ramda/es/internal/_xfindIndex.js","webpack:///./node_modules/ramda/es/findIndex.js","webpack:///./node_modules/ramda/es/internal/_xfindLast.js","webpack:///./node_modules/ramda/es/findLast.js","webpack:///./node_modules/ramda/es/internal/_xfindLastIndex.js","webpack:///./node_modules/ramda/es/findLastIndex.js","webpack:///./node_modules/ramda/es/flatten.js","webpack:///./node_modules/ramda/es/flip.js","webpack:///./node_modules/ramda/es/forEach.js","webpack:///./node_modules/ramda/es/forEachObjIndexed.js","webpack:///./node_modules/ramda/es/fromPairs.js","webpack:///./node_modules/ramda/es/groupBy.js","webpack:///./node_modules/ramda/es/groupWith.js","webpack:///./node_modules/ramda/es/gt.js","webpack:///./node_modules/ramda/es/gte.js","webpack:///./node_modules/ramda/es/hasPath.js","webpack:///./node_modules/ramda/es/has.js","webpack:///./node_modules/ramda/es/hasIn.js","webpack:///./node_modules/ramda/es/identical.js","webpack:///./node_modules/ramda/es/ifElse.js","webpack:///./node_modules/ramda/es/inc.js","webpack:///./node_modules/ramda/es/includes.js","webpack:///./node_modules/ramda/es/indexBy.js","webpack:///./node_modules/ramda/es/indexOf.js","webpack:///./node_modules/ramda/es/init.js","webpack:///./node_modules/ramda/es/innerJoin.js","webpack:///./node_modules/ramda/es/insert.js","webpack:///./node_modules/ramda/es/insertAll.js","webpack:///./node_modules/ramda/es/intersection.js","webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/objOf.js","webpack:///./node_modules/ramda/es/internal/_stepCat.js","webpack:///./node_modules/ramda/es/into.js","webpack:///./node_modules/ramda/es/invert.js","webpack:///./node_modules/ramda/es/invertObj.js","webpack:///./node_modules/ramda/es/is.js","webpack:///./node_modules/ramda/es/isEmpty.js","webpack:///./node_modules/ramda/es/juxt.js","webpack:///./node_modules/ramda/es/keysIn.js","webpack:///./node_modules/ramda/es/lastIndexOf.js","webpack:///./node_modules/ramda/es/internal/_isNumber.js","webpack:///./node_modules/ramda/es/length.js","webpack:///./node_modules/ramda/es/lens.js","webpack:///./node_modules/ramda/es/lensIndex.js","webpack:///./node_modules/ramda/es/lensPath.js","webpack:///./node_modules/ramda/es/lensProp.js","webpack:///./node_modules/ramda/es/lt.js","webpack:///./node_modules/ramda/es/lte.js","webpack:///./node_modules/ramda/es/mapAccum.js","webpack:///./node_modules/ramda/es/mapAccumRight.js","webpack:///./node_modules/ramda/es/mapObjIndexed.js","webpack:///./node_modules/ramda/es/match.js","webpack:///./node_modules/ramda/es/mathMod.js","webpack:///./node_modules/ramda/es/maxBy.js","webpack:///./node_modules/ramda/es/sum.js","webpack:///./node_modules/ramda/es/mean.js","webpack:///./node_modules/ramda/es/median.js","webpack:///./node_modules/ramda/es/memoizeWith.js","webpack:///./node_modules/ramda/es/merge.js","webpack:///./node_modules/ramda/es/mergeAll.js","webpack:///./node_modules/ramda/es/mergeWithKey.js","webpack:///./node_modules/ramda/es/mergeDeepWithKey.js","webpack:///./node_modules/ramda/es/mergeDeepLeft.js","webpack:///./node_modules/ramda/es/mergeDeepRight.js","webpack:///./node_modules/ramda/es/mergeDeepWith.js","webpack:///./node_modules/ramda/es/mergeLeft.js","webpack:///./node_modules/ramda/es/mergeRight.js","webpack:///./node_modules/ramda/es/mergeWith.js","webpack:///./node_modules/ramda/es/min.js","webpack:///./node_modules/ramda/es/minBy.js","webpack:///./node_modules/ramda/es/modulo.js","webpack:///./node_modules/ramda/es/move.js","webpack:///./node_modules/ramda/es/multiply.js","webpack:///./node_modules/ramda/es/negate.js","webpack:///./node_modules/ramda/es/none.js","webpack:///./node_modules/ramda/es/nthArg.js","webpack:///./node_modules/ramda/es/o.js","webpack:///./node_modules/ramda/es/internal/_of.js","webpack:///./node_modules/ramda/es/of.js","webpack:///./node_modules/ramda/es/omit.js","webpack:///./node_modules/ramda/es/once.js","webpack:///./node_modules/ramda/es/internal/_assertPromise.js","webpack:///./node_modules/ramda/es/otherwise.js","webpack:///./node_modules/ramda/es/over.js","webpack:///./node_modules/ramda/es/pair.js","webpack:///./node_modules/ramda/es/internal/_createPartialApplicator.js","webpack:///./node_modules/ramda/es/partial.js","webpack:///./node_modules/ramda/es/partialRight.js","webpack:///./node_modules/ramda/es/partition.js","webpack:///./node_modules/ramda/es/pathEq.js","webpack:///./node_modules/ramda/es/pathOr.js","webpack:///./node_modules/ramda/es/pathSatisfies.js","webpack:///./node_modules/ramda/es/pick.js","webpack:///./node_modules/ramda/es/pickAll.js","webpack:///./node_modules/ramda/es/pickBy.js","webpack:///./node_modules/ramda/es/pipeK.js","webpack:///./node_modules/ramda/es/prepend.js","webpack:///./node_modules/ramda/es/product.js","webpack:///./node_modules/ramda/es/useWith.js","webpack:///./node_modules/ramda/es/project.js","webpack:///./node_modules/ramda/es/propEq.js","webpack:///./node_modules/ramda/es/propIs.js","webpack:///./node_modules/ramda/es/propOr.js","webpack:///./node_modules/ramda/es/propSatisfies.js","webpack:///./node_modules/ramda/es/props.js","webpack:///./node_modules/ramda/es/range.js","webpack:///./node_modules/ramda/es/reduceRight.js","webpack:///./node_modules/ramda/es/reduceWhile.js","webpack:///./node_modules/ramda/es/reduced.js","webpack:///./node_modules/ramda/es/times.js","webpack:///./node_modules/ramda/es/repeat.js","webpack:///./node_modules/ramda/es/replace.js","webpack:///./node_modules/ramda/es/scan.js","webpack:///./node_modules/ramda/es/sequence.js","webpack:///./node_modules/ramda/es/set.js","webpack:///./node_modules/ramda/es/sort.js","webpack:///./node_modules/ramda/es/split.js","webpack:///./node_modules/ramda/es/splitAt.js","webpack:///./node_modules/ramda/es/splitEvery.js","webpack:///./node_modules/ramda/es/splitWhen.js","webpack:///./node_modules/ramda/es/startsWith.js","webpack:///./node_modules/ramda/es/subtract.js","webpack:///./node_modules/ramda/es/symmetricDifference.js","webpack:///./node_modules/ramda/es/symmetricDifferenceWith.js","webpack:///./node_modules/ramda/es/takeLastWhile.js","webpack:///./node_modules/ramda/es/internal/_xtakeWhile.js","webpack:///./node_modules/ramda/es/takeWhile.js","webpack:///./node_modules/ramda/es/internal/_xtap.js","webpack:///./node_modules/ramda/es/tap.js","webpack:///./node_modules/ramda/es/test.js","webpack:///./node_modules/ramda/es/internal/_isRegExp.js","webpack:///./node_modules/ramda/es/then.js","webpack:///./node_modules/ramda/es/toLower.js","webpack:///./node_modules/ramda/es/toPairs.js","webpack:///./node_modules/ramda/es/toPairsIn.js","webpack:///./node_modules/ramda/es/toUpper.js","webpack:///./node_modules/ramda/es/transduce.js","webpack:///./node_modules/ramda/es/transpose.js","webpack:///./node_modules/ramda/es/traverse.js","webpack:///./node_modules/ramda/es/trim.js","webpack:///./node_modules/ramda/es/tryCatch.js","webpack:///./node_modules/ramda/es/unapply.js","webpack:///./node_modules/ramda/es/unary.js","webpack:///./node_modules/ramda/es/uncurryN.js","webpack:///./node_modules/ramda/es/unfold.js","webpack:///./node_modules/ramda/es/union.js","webpack:///./node_modules/ramda/es/uniqWith.js","webpack:///./node_modules/ramda/es/unionWith.js","webpack:///./node_modules/ramda/es/unless.js","webpack:///./node_modules/ramda/es/unnest.js","webpack:///./node_modules/ramda/es/until.js","webpack:///./node_modules/ramda/es/valuesIn.js","webpack:///./node_modules/ramda/es/view.js","webpack:///./node_modules/ramda/es/when.js","webpack:///./node_modules/ramda/es/where.js","webpack:///./node_modules/ramda/es/whereEq.js","webpack:///./node_modules/ramda/es/without.js","webpack:///./node_modules/ramda/es/xprod.js","webpack:///./node_modules/ramda/es/zip.js","webpack:///./node_modules/ramda/es/zipObj.js","webpack:///./node_modules/ramda/es/zipWith.js","webpack:///./node_modules/ramda/es/thunkify.js","webpack:///./node_modules/ramda/es/index.js","webpack:///./node_modules/ramda/es/internal/_isString.js","webpack:///./node_modules/ramda/es/internal/_isArrayLike.js","webpack:///./node_modules/ramda/es/internal/_isTransformer.js","webpack:///./node_modules/ramda/es/internal/_isObject.js","webpack:///./node_modules/ramda/es/bind.js","webpack:///./node_modules/ramda/es/internal/_filter.js","webpack:///./node_modules/ramda/es/internal/_xwrap.js","webpack:///./node_modules/ramda/es/internal/_isArguments.js","webpack:///./node_modules/ramda/es/reverse.js","webpack:///./node_modules/ramda/es/internal/_includes.js","webpack:///./node_modules/ramda/es/invoker.js","webpack:///./node_modules/ramda/es/internal/_xfilter.js","webpack:///./node_modules/ramda/es/filter.js","webpack:///./node_modules/ramda/es/internal/_isFunction.js","webpack:///./node_modules/ramda/es/identity.js","webpack:///./node_modules/ramda/es/toString.js","webpack:///./node_modules/ramda/es/reject.js","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/ramda/es/internal/_curryN.js","webpack:///./node_modules/ramda/es/internal/_map.js","webpack:///./node_modules/ramda/es/ascend.js","webpack:///./node_modules/ramda/es/type.js","webpack:///./node_modules/ramda/es/internal/_includesWith.js","webpack:///./node_modules/ramda/es/descend.js","webpack:///./node_modules/ramda/es/uniq.js","webpack:///./node_modules/ramda/es/sortWith.js","webpack:///./node_modules/ramda/es/internal/_flatCat.js","webpack:///./node_modules/ramda/es/internal/_forceReduced.js","webpack:///./node_modules/ramda/es/internal/_xchain.js","webpack:///./node_modules/ramda/es/chain.js","webpack:///./node_modules/ramda/es/internal/_identity.js","webpack:///./node_modules/ramda/es/uniqBy.js","webpack:///./node_modules/ramda/es/sortBy.js","webpack:///./node_modules/ramda/es/internal/_makeFlat.js","webpack:///./node_modules/ramda/es/internal/_indexOf.js","webpack:///./node_modules/ramda/es/internal/_objectIs.js","webpack:///./node_modules/ramda/es/internal/_complement.js","webpack:///./node_modules/ramda/es/internal/_Set.js","webpack:///./node_modules/ramda/es/join.js","webpack:///./node_modules/ramda/es/internal/_quote.js","webpack:///./node_modules/ramda/es/internal/_toISOString.js","webpack:///./node_modules/ramda/es/internal/_toString.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./node_modules/core-js/modules/_string-ws.js","webpack:///./node_modules/core-js/modules/es6.number.is-integer.js","webpack:///./node_modules/core-js/modules/_is-integer.js","webpack:///./node_modules/core-js/modules/es6.object.is.js"],"names":["__webpack_require__","d","__webpack_exports__","_curry3","_curry1_js__WEBPACK_IMPORTED_MODULE_0__","_curry2_js__WEBPACK_IMPORTED_MODULE_1__","_isPlaceholder_js__WEBPACK_IMPORTED_MODULE_2__","fn","f3","a","b","c","arguments","length","Object","_b","_c","_a","_dispatchable","_isArray_js__WEBPACK_IMPORTED_MODULE_0__","_isTransformer_js__WEBPACK_IMPORTED_MODULE_1__","methodNames","xf","args","Array","prototype","slice","call","obj","pop","idx","apply","transducer","this","init","result","_result","_has","prop","hasOwnProperty","_internal_arity_js__WEBPACK_IMPORTED_MODULE_0__","_internal_curry1_js__WEBPACK_IMPORTED_MODULE_1__","_internal_curry2_js__WEBPACK_IMPORTED_MODULE_2__","_internal_curryN_js__WEBPACK_IMPORTED_MODULE_3__","curryN","_reduce","_isArrayLike_js__WEBPACK_IMPORTED_MODULE_2__","_xwrap_js__WEBPACK_IMPORTED_MODULE_3__","_bind_js__WEBPACK_IMPORTED_MODULE_4__","_iterableReduce","acc","iter","step","next","done","value","_methodReduce","methodName","symIterator","Symbol","iterator","list","len","_arrayReduce","reduce","TypeError","_internal_curry1_js__WEBPACK_IMPORTED_MODULE_4__","_internal_has_js__WEBPACK_IMPORTED_MODULE_5__","_internal_isArguments_js__WEBPACK_IMPORTED_MODULE_6__","hasEnumBug","toString","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","item","keys","nIdx","ks","checkArgsLength","_arity","n","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","_arrayFromIterator","push","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","_equals","_includesWith","aItem","_objectIs","f","match","typeA","type","equals","constructor","String","valueOf","name","message","source","global","ignoreCase","multiline","sticky","unicode","size","entries","concat","values","keysA","extendedStackA","extendedStackB","key","equals_equals","_curry2","_xmap_XMap","XMap","_xfBase","input","internal_xmap","map_map","functor","_map","es_F","es_T","_","@@functional/placeholder","es_add","Number","_concat","set1","set2","len1","len2","es_addIndex","_curry1","origFn","es_adjust","_idx","_list","_reduced","x","@@transducer/value","@@transducer/reduced","_xall_XAll","XAll","all","internal_xall","es_all","es_max","es_path","paths","val","es_prop","p","es_pluck","map","es_reduce","es_allPass","preds","es_always","es_and","_xany_XAny","XAny","any","internal_xany","es_any","es_anyPass","es_ap","applyF","applyX","ap","_aperture","limit","_xaperture_XAperture","XAperture","pos","full","store","getCopy","internal_xaperture","es_aperture","es_append","el","es_apply","es_values","props","vals","mapValues","es_applySpec","applySpec","spec","v","es_applyTo","es_assoc","_isInteger","isInteger","es_isNil","es_assocPath","assocPath","path","nextObj","_isArray","arr","es_nAry","es_binary","es_liftN","arity","lifted","es_lift","es_both","g","_isFunction","es_curry","es_call","es_clamp","min","max","_cloneRegExp","pattern","RegExp","_clone","refFrom","refTo","deep","copy","copiedValue","es_type","Date","es_clone","clone","es_comparator","pred","es_not","es_complement","_pipe","es_slice","_checkForMethod","fromIndex","toIndex","es_tail","Infinity","pipe","compose","reverse","composeK","last","chain","_pipeP","ctx","then","pipeP","composeP","es_nth","offset","_isString","charAt","es_head","es_pipeWith","identity","headList","tailList","es_composeWith","es_concat","es_toString","es_cond","pairs","pair","es_constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","es_construct","es_contains","_includes","es_converge","after","fns","context","_xreduceBy_XReduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","internal_xreduceBy","_curryN","es_reduceBy","elt","es_countBy","elem","es_dec","es_defaultTo","es_difference","first","second","out","firstLen","secondLen","toFilterOut","_Set","i","add","es_differenceWith","es_dissoc","es_remove","start","count","splice","es_update","es_dissocPath","dissocPath","head","tail","es_divide","_xdrop_XDrop","XDrop","internal_xdrop","es_drop","xs","Math","_xtake_XTake","XTake","ret","internal_xtake","es_take","dropLast","_xdropLast_XDropLast","XDropLast","internal_xdropLast","es_dropLast","dropLastWhile","_xdropLastWhile_XDropLastWhile","XDropLastWhile","retained","retain","flush","internal_xdropLastWhile","es_dropLastWhile","_xdropRepeatsWith_XDropRepeatsWith","XDropRepeatsWith","lastValue","undefined","seenFirstValue","sameAsLast","internal_xdropRepeatsWith","es_last","es_dropRepeatsWith","es_dropRepeats","_xdropWhile_XDropWhile","XDropWhile","internal_xdropWhile","es_dropWhile","es_or","es_either","es_empty","empty","_isObject","_isArguments","es_takeLast","es_endsWith","suffix","es_eqBy","y","es_eqProps","obj1","obj2","es_evolve","evolve","transformations","object","transformation","_xfind_XFind","XFind","found","internal_xfind","es_find","_xfindIndex_XFindIndex","XFindIndex","internal_xfindIndex","es_findIndex","_xfindLast_XFindLast","XFindLast","internal_xfindLast","es_findLast","_xfindLastIndex_XFindLastIndex","XFindLastIndex","lastIdx","internal_xfindLastIndex","es_findLastIndex","es_flatten","_makeFlat","es_flip","es_forEach","es_forEachObjIndexed","keyList","es_fromPairs","es_groupBy","es_groupWith","res","nextidx","es_gt","es_gte","es_hasPath","_path","es_has","es_hasIn","es_identical","es_ifElse","condition","onTrue","onFalse","es_inc","es_includes","es_indexBy","es_indexOf","target","indexOf","_indexOf","es_init","es_innerJoin","ys","_filter","es_insert","es_insertAll","elts","es_intersection","list1","list2","lookupList","filteredList","uniq","internal_objectAssign","assign","output","nextKey","es_objOf","_stepCatArray","@@transducer/init","@@transducer/step","@@transducer/result","_identity","_stepCatString","_stepCatObject","_isArrayLike","es_into","_isTransformer","_stepCat","es_invert","es_invertObj","es_is","Ctor","es_isEmpty","es_juxt","es_keysIn","es_lastIndexOf","lastIndexOf","_isNumber","es_length","NaN","es_lens","getter","setter","toFunctorFn","focus","es_lensIndex","es_lensPath","es_lensProp","k","es_lt","es_lte","es_mapAccum","tuple","es_mapAccumRight","es_mapObjIndexed","es_match","rx","str","es_mathMod","m","es_maxBy","es_sum","es_mean","es_median","width","sort","es_memoizeWith","mFn","cache","es_merge","l","r","es_mergeAll","es_mergeWithKey","es_mergeDeepWithKey","mergeDeepWithKey","lObj","rObj","lVal","rVal","es_mergeDeepLeft","es_mergeDeepRight","es_mergeDeepWith","es_mergeLeft","es_mergeRight","es_mergeWith","_l","_r","es_min","es_minBy","es_modulo","es_move","from","to","positiveFrom","positiveTo","es_multiply","es_negate","es_none","_complement","es_nthArg","es_o","_of","es_of","es_omit","names","index","es_once","called","_assertPromise","_toString","es_otherwise","es_over","lens","Identity","es_pair","fst","snd","_createPartialApplicator","es_partial","es_partialRight","es_partition","filter","reject","es_pathEq","es_pathOr","es_pathSatisfies","propPath","es_pick","es_pickAll","es_pickBy","test","pipeK","es_prepend","es_product","es_useWith","transformers","es_project","es_propEq","es_propIs","es_propOr","es_propSatisfies","es_props","ps","es_range","es_reduceRight","es_reduceWhile","es_reduced","es_times","isNaN","RangeError","es_repeat","es_replace","regex","replacement","replace","es_scan","es_sequence","of","traversable","sequence","es_set","es_sort","comparator","es_split","invoker","es_splitAt","array","es_splitEvery","es_splitWhen","prefix","es_startsWith","es_subtract","es_symmetricDifference","es_symmetricDifferenceWith","es_takeLastWhile","_xtakeWhile_XTakeWhile","XTakeWhile","internal_xtakeWhile","es_takeWhile","_xtap_XTap","XTap","internal_xtap","es_tap","es_test","es_then","es_toLower","es_toPairs","es_toPairsIn","es_toUpper","es_transduce","_xwrap","es_transpose","outerlist","innerlist","j","es_traverse","ws","es_trim","trim","beginRx","endRx","es_tryCatch","tryer","catcher","e","es_unapply","es_unary","es_uncurryN","depth","endIdx","currentDepth","es_unfold","seed","es_union","es_uniqWith","es_unionWith","es_unless","whenFalseFn","es_unnest","es_until","es_valuesIn","vs","Const","fantasy-land/map","es_view","es_when","whenTrueFn","es_where","testObj","es_whereEq","es_without","es_xprod","ilen","jlen","es_zip","rv","es_zipObj","es_zipWith","es_thunkify","fnArgs","ascend","bind","descend","intersperse","join","sortBy","sortWith","uniqBy","_isArray_js__WEBPACK_IMPORTED_MODULE_1__","_isString_js__WEBPACK_IMPORTED_MODULE_2__","nodeType","_internal_curry2_js__WEBPACK_IMPORTED_MODULE_1__","thisObj","XWrap","_has_js__WEBPACK_IMPORTED_MODULE_2__","_internal_isString_js__WEBPACK_IMPORTED_MODULE_2__","split","_indexOf_js__WEBPACK_IMPORTED_MODULE_0__","_internal_curry2_js__WEBPACK_IMPORTED_MODULE_0__","_internal_isFunction_js__WEBPACK_IMPORTED_MODULE_1__","_curryN_js__WEBPACK_IMPORTED_MODULE_2__","_toString_js__WEBPACK_IMPORTED_MODULE_3__","method","_xfilter_XFilter","XFilter","internal_xfilter","filterable","_internal_curry1_js__WEBPACK_IMPORTED_MODULE_0__","_internal_identity_js__WEBPACK_IMPORTED_MODULE_1__","_internal_toString_js__WEBPACK_IMPORTED_MODULE_1__","_internal_complement_js__WEBPACK_IMPORTED_MODULE_0__","_filter_js__WEBPACK_IMPORTED_MODULE_2__","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","gOPD","dP","$trim","$Number","Base","proto","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","charCodeAt","code","digits","parseInt","that","_arity_js__WEBPACK_IMPORTED_MODULE_0__","_isPlaceholder_js__WEBPACK_IMPORTED_MODULE_1__","received","combined","argsIdx","left","combinedIdx","_internal_curry3_js__WEBPACK_IMPORTED_MODULE_0__","aa","bb","_internal_curry1_js__WEBPACK_IMPORTED_MODULE_2__","_identity_js__WEBPACK_IMPORTED_MODULE_0__","_uniqBy_js__WEBPACK_IMPORTED_MODULE_1__","internal_flatCat","rxf","_flatCat_preservingReduced","internal_xchain","chain_chain","monad","_internal_Set_js__WEBPACK_IMPORTED_MODULE_0__","appliedItem","set","_isArrayLike_js__WEBPACK_IMPORTED_MODULE_0__","recursive","flatt","_equals_js__WEBPACK_IMPORTED_MODULE_0__","inf","is","_includes_js__WEBPACK_IMPORTED_MODULE_6__","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","bIdx","_invoker_js__WEBPACK_IMPORTED_MODULE_0__","_quote","s","pad","internal_toISOString","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","seen","recur","mapPairs","es_keys","repr","$export","defined","spaces","space","ltrim","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","P","F","string","TYPE","module","exports","S","isObject","floor","isFinite"],"mappings":"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","file":"4-aab900d04def95ca879a.js","sourcesContent":["import _curry1 from './_curry1.js';\nimport _curry2 from './_curry2.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _isArray from './_isArray.js';\nimport _isTransformer from './_isTransformer.js';\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\nexport default function _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n\n    if (!_isArray(obj)) {\n      var idx = 0;\n\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n\n        idx += 1;\n      }\n\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n\n    return fn.apply(this, arguments);\n  };\n}","export default {\n  init: function init() {\n    return this.xf['@@transducer/init']();\n  },\n  result: function result(_result) {\n    return this.xf['@@transducer/result'](_result);\n  }\n};","export default function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport _curry2 from './internal/_curry2.js';\nimport _curryN from './internal/_curryN.js';\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curryN =\n/*#__PURE__*/\n_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n\n  return _arity(length, _curryN(length, [], fn));\n});\n\nexport default curryN;","import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport _isArrayLike from './_isArrayLike.js';\nimport _xwrap from './_xwrap.js';\nimport bind from '../bind.js';\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    idx += 1;\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n\n    step = iter.next();\n  }\n\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\nexport default function _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport _isArguments from './internal/_isArguments.js'; // cover IE < 9 keys issues\n\nvar hasEnumBug = !\n/*#__PURE__*/\n{\n  toString: null\n}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\nvar hasArgsEnumBug =\n/*#__PURE__*/\nfunction () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n};\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\n\n\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ?\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) :\n/*#__PURE__*/\n_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n\n  var prop, nIdx;\n  var ks = [];\n\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n\n      nIdx -= 1;\n    }\n  }\n\n  return ks;\n});\nexport default keys;","export default function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}","export default function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n\n  return list;\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport _arrayFromIterator from './_arrayFromIterator.js';\nimport _includesWith from './_includesWith.js';\nimport _functionName from './_functionName.js';\nimport _has from './_has.js';\nimport _objectIs from './_objectIs.js';\nimport keys from '../keys.js';\nimport type from '../type.js';\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  } // if *a* array contains any element that is not included in *b*\n\n\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nexport default function _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n\n      break;\n\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n\n      break;\n\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n\n      break;\n\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n\n      break;\n  }\n\n  var idx = stackA.length - 1;\n\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n  idx = keysA.length - 1;\n\n  while (idx >= 0) {\n    var key = keysA[idx];\n\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n\n    idx -= 1;\n  }\n\n  return true;\n}","import \"core-js/modules/es6.regexp.match\";\nexport default function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}","import _curry2 from './internal/_curry2.js';\nimport _equals from './internal/_equals.js';\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\nvar equals =\n/*#__PURE__*/\n_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\n\nexport default equals;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XMap =\n/*#__PURE__*/\nfunction () {\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap =\n/*#__PURE__*/\n_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\n\nexport default _xmap;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _map from './internal/_map.js';\nimport _reduce from './internal/_reduce.js';\nimport _xmap from './internal/_xmap.js';\nimport curryN from './curryN.js';\nimport keys from './keys.js';\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\nvar map =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n\n    default:\n      return _map(fn, functor);\n  }\n}));\n\nexport default map;","/**\n * A function that always returns `false`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.T\n * @example\n *\n *      R.F(); //=> false\n */\nvar F = function F() {\n  return false;\n};\n\nexport default F;","/**\n * A function that always returns `true`. Any passed in parameters are ignored.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig * -> Boolean\n * @param {*}\n * @return {Boolean}\n * @see R.F\n * @example\n *\n *      R.T(); //=> true\n */\nvar T = function T() {\n  return true;\n};\n\nexport default T;","/**\n * A special placeholder value used to specify \"gaps\" within curried functions,\n * allowing partial application of any combination of arguments, regardless of\n * their positions.\n *\n * If `g` is a curried ternary function and `_` is `R.__`, the following are\n * equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2, _)(1, 3)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @name __\n * @constant\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @example\n *\n *      const greet = R.replace('{name}', R.__, 'Hello, {name}!');\n *      greet('Alice'); //=> 'Hello, Alice!'\n */\nexport default {\n  '@@functional/placeholder': true\n};","import \"core-js/modules/es6.number.constructor\";\nimport _curry2 from './internal/_curry2.js';\n/**\n * Adds two values.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a\n * @param {Number} b\n * @return {Number}\n * @see R.subtract\n * @example\n *\n *      R.add(2, 3);       //=>  5\n *      R.add(7)(10);      //=> 17\n */\n\nvar add =\n/*#__PURE__*/\n_curry2(function add(a, b) {\n  return Number(a) + Number(b);\n});\n\nexport default add;","/**\n * Private `concat` function to merge two array-like objects.\n *\n * @private\n * @param {Array|Arguments} [set1=[]] An array-like object.\n * @param {Array|Arguments} [set2=[]] An array-like object.\n * @return {Array} A new, merged array.\n * @example\n *\n *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n */\nexport default function _concat(set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx;\n  var len1 = set1.length;\n  var len2 = set2.length;\n  var result = [];\n  idx = 0;\n\n  while (idx < len1) {\n    result[result.length] = set1[idx];\n    idx += 1;\n  }\n\n  idx = 0;\n\n  while (idx < len2) {\n    result[result.length] = set2[idx];\n    idx += 1;\n  }\n\n  return result;\n}","import _concat from './internal/_concat.js';\nimport _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n/**\n * Creates a new list iteration function from an existing one by adding two new\n * parameters to its callback function: the current index, and the entire list.\n *\n * This would turn, for instance, [`R.map`](#map) function into one that\n * more closely resembles `Array.prototype.map`. Note that this will only work\n * for functions in which the iteration callback function is the first\n * parameter, and where the list is the last parameter. (This latter might be\n * unimportant if the list parameter is not used.)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Function\n * @category List\n * @sig ((a ... -> b) ... -> [a] -> *) -> ((a ..., Int, [a] -> b) ... -> [a] -> *)\n * @param {Function} fn A list iteration function that does not pass index or list to its callback\n * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n * @example\n *\n *      const mapIndexed = R.addIndex(R.map);\n *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n */\n\nvar addIndex =\n/*#__PURE__*/\n_curry1(function addIndex(fn) {\n  return curryN(fn.length, function () {\n    var idx = 0;\n    var origFn = arguments[0];\n    var list = arguments[arguments.length - 1];\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    args[0] = function () {\n      var result = origFn.apply(this, _concat(arguments, [idx, list]));\n      idx += 1;\n      return result;\n    };\n\n    return fn.apply(this, args);\n  });\n});\n\nexport default addIndex;","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\n/**\n * Applies a function to the value at the given index of an array, returning a\n * new copy of the array with the element at the given index replaced with the\n * result of the function application.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> (a -> a) -> [a] -> [a]\n * @param {Number} idx The index.\n * @param {Function} fn The function to apply.\n * @param {Array|Arguments} list An array-like object whose value\n *        at the supplied index will be replaced.\n * @return {Array} A copy of the supplied array-like object with\n *         the element at index `idx` replaced with the value\n *         returned by applying `fn` to the existing element.\n * @see R.update\n * @example\n *\n *      R.adjust(1, R.toUpper, ['a', 'b', 'c', 'd']);      //=> ['a', 'B', 'c', 'd']\n *      R.adjust(-1, R.toUpper, ['a', 'b', 'c', 'd']);     //=> ['a', 'b', 'c', 'D']\n * @symb R.adjust(-1, f, [a, b]) = [a, f(b)]\n * @symb R.adjust(0, f, [a, b]) = [f(a), b]\n */\n\nvar adjust =\n/*#__PURE__*/\n_curry3(function adjust(idx, fn, list) {\n  if (idx >= list.length || idx < -list.length) {\n    return list;\n  }\n\n  var start = idx < 0 ? list.length : 0;\n\n  var _idx = start + idx;\n\n  var _list = _concat(list);\n\n  _list[_idx] = fn(list[_idx]);\n  return _list;\n});\n\nexport default adjust;","export default function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAll =\n/*#__PURE__*/\nfunction () {\n  function XAll(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.all = true;\n  }\n\n  XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAll.prototype['@@transducer/result'] = function (result) {\n    if (this.all) {\n      result = this.xf['@@transducer/step'](result, true);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAll.prototype['@@transducer/step'] = function (result, input) {\n    if (!this.f(input)) {\n      this.all = false;\n      result = _reduced(this.xf['@@transducer/step'](result, false));\n    }\n\n    return result;\n  };\n\n  return XAll;\n}();\n\nvar _xall =\n/*#__PURE__*/\n_curry2(function _xall(f, xf) {\n  return new XAll(f, xf);\n});\n\nexport default _xall;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xall from './internal/_xall.js';\n/**\n * Returns `true` if all elements of the list match the predicate, `false` if\n * there are any that don't.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n *         otherwise.\n * @see R.any, R.none, R.transduce\n * @example\n *\n *      const equals3 = R.equals(3);\n *      R.all(equals3)([3, 3, 3, 3]); //=> true\n *      R.all(equals3)([3, 3, 1, 3]); //=> false\n */\n\nvar all =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['all'], _xall, function all(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (!fn(list[idx])) {\n      return false;\n    }\n\n    idx += 1;\n  }\n\n  return true;\n}));\n\nexport default all;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\n\nvar max =\n/*#__PURE__*/\n_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\n\nexport default max;","import _curry2 from './internal/_curry2.js';\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n\n    val = val[paths[idx]];\n    idx += 1;\n  }\n\n  return val;\n});\n\nexport default path;","import _curry2 from './internal/_curry2.js';\nimport path from './path.js';\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\nimport prop from './prop.js';\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\nvar pluck =\n/*#__PURE__*/\n_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\n\nexport default pluck;","import _curry3 from './internal/_curry3.js';\nimport _reduce from './internal/_reduce.js';\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if every one of the provided predicates is satisfied\n * by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.anyPass\n * @example\n *\n *      const isQueen = R.propEq('rank', 'Q');\n *      const isSpade = R.propEq('suit', '♠︎');\n *      const isQueenOfSpades = R.allPass([isQueen, isSpade]);\n *\n *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n */\n\nvar allPass =\n/*#__PURE__*/\n_curry1(function allPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (!preds[idx].apply(this, arguments)) {\n        return false;\n      }\n\n      idx += 1;\n    }\n\n    return true;\n  });\n});\n\nexport default allPass;","import _curry1 from './internal/_curry1.js';\n/**\n * Returns a function that always returns the given value. Note that for\n * non-primitives the value returned is a reference to the original value.\n *\n * This function is known as `const`, `constant`, or `K` (for K combinator) in\n * other languages and libraries.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> (* -> a)\n * @param {*} val The value to wrap in a function\n * @return {Function} A Function :: * -> val.\n * @example\n *\n *      const t = R.always('Tee');\n *      t(); //=> 'Tee'\n */\n\nvar always =\n/*#__PURE__*/\n_curry1(function always(val) {\n  return function () {\n    return val;\n  };\n});\n\nexport default always;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if both arguments are `true`; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if it is falsy, otherwise the second argument.\n * @see R.both\n * @example\n *\n *      R.and(true, true); //=> true\n *      R.and(true, false); //=> false\n *      R.and(false, true); //=> false\n *      R.and(false, false); //=> false\n */\n\nvar and =\n/*#__PURE__*/\n_curry2(function and(a, b) {\n  return a && b;\n});\n\nexport default and;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAny =\n/*#__PURE__*/\nfunction () {\n  function XAny(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.any = false;\n  }\n\n  XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAny.prototype['@@transducer/result'] = function (result) {\n    if (!this.any) {\n      result = this.xf['@@transducer/step'](result, false);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAny.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.any = true;\n      result = _reduced(this.xf['@@transducer/step'](result, true));\n    }\n\n    return result;\n  };\n\n  return XAny;\n}();\n\nvar _xany =\n/*#__PURE__*/\n_curry2(function _xany(f, xf) {\n  return new XAny(f, xf);\n});\n\nexport default _xany;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xany from './internal/_xany.js';\n/**\n * Returns `true` if at least one of the elements of the list match the predicate,\n * `false` otherwise.\n *\n * Dispatches to the `any` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n *         otherwise.\n * @see R.all, R.none, R.transduce\n * @example\n *\n *      const lessThan0 = R.flip(R.lt)(0);\n *      const lessThan2 = R.flip(R.lt)(2);\n *      R.any(lessThan0)([1, 2]); //=> false\n *      R.any(lessThan2)([1, 2]); //=> true\n */\n\nvar any =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['any'], _xany, function any(fn, list) {\n  var idx = 0;\n\n  while (idx < list.length) {\n    if (fn(list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}));\n\nexport default any;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n/**\n * Takes a list of predicates and returns a predicate that returns true for a\n * given list of arguments if at least one of the provided predicates is\n * satisfied by those arguments.\n *\n * The function returned is a curried function whose arity matches that of the\n * highest-arity predicate.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Logic\n * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n * @param {Array} predicates An array of predicates to check\n * @return {Function} The combined predicate\n * @see R.allPass\n * @example\n *\n *      const isClub = R.propEq('suit', '♣');\n *      const isSpade = R.propEq('suit', '♠');\n *      const isBlackCard = R.anyPass([isClub, isSpade]);\n *\n *      isBlackCard({rank: '10', suit: '♣'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♠'}); //=> true\n *      isBlackCard({rank: 'Q', suit: '♦'}); //=> false\n */\n\nvar anyPass =\n/*#__PURE__*/\n_curry1(function anyPass(preds) {\n  return curryN(reduce(max, 0, pluck('length', preds)), function () {\n    var idx = 0;\n    var len = preds.length;\n\n    while (idx < len) {\n      if (preds[idx].apply(this, arguments)) {\n        return true;\n      }\n\n      idx += 1;\n    }\n\n    return false;\n  });\n});\n\nexport default anyPass;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport map from './map.js';\n/**\n * ap applies a list of functions to a list of values.\n *\n * Dispatches to the `ap` method of the second argument, if present. Also\n * treats curried functions as applicatives.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig [a -> b] -> [a] -> [b]\n * @sig Apply f => f (a -> b) -> f a -> f b\n * @sig (r -> a -> b) -> (r -> a) -> (r -> b)\n * @param {*} applyF\n * @param {*} applyX\n * @return {*}\n * @example\n *\n *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> [\"tasty pizza\", \"tasty salad\", \"PIZZA\", \"SALAD\"]\n *\n *      // R.ap can also be used as S combinator\n *      // when only two functions are passed\n *      R.ap(R.concat, R.toUpper)('Ramda') //=> 'RamdaRAMDA'\n * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]\n */\n\nvar ap =\n/*#__PURE__*/\n_curry2(function ap(applyF, applyX) {\n  return typeof applyX['fantasy-land/ap'] === 'function' ? applyX['fantasy-land/ap'](applyF) : typeof applyF.ap === 'function' ? applyF.ap(applyX) : typeof applyF === 'function' ? function (x) {\n    return applyF(x)(applyX(x));\n  } : _reduce(function (acc, f) {\n    return _concat(acc, map(f, applyX));\n  }, [], applyF);\n});\n\nexport default ap;","export default function _aperture(n, list) {\n  var idx = 0;\n  var limit = list.length - (n - 1);\n  var acc = new Array(limit >= 0 ? limit : 0);\n\n  while (idx < limit) {\n    acc[idx] = Array.prototype.slice.call(list, idx, idx + n);\n    idx += 1;\n  }\n\n  return acc;\n}","import _concat from './_concat.js';\nimport _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XAperture =\n/*#__PURE__*/\nfunction () {\n  function XAperture(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n  XAperture.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XAperture.prototype['@@transducer/step'] = function (result, input) {\n    this.store(input);\n    return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n  };\n\n  XAperture.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  XAperture.prototype.getCopy = function () {\n    return _concat(Array.prototype.slice.call(this.acc, this.pos), Array.prototype.slice.call(this.acc, 0, this.pos));\n  };\n\n  return XAperture;\n}();\n\nvar _xaperture =\n/*#__PURE__*/\n_curry2(function _xaperture(n, xf) {\n  return new XAperture(n, xf);\n});\n\nexport default _xaperture;","import _aperture from './internal/_aperture.js';\nimport _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xaperture from './internal/_xaperture.js';\n/**\n * Returns a new list, composed of n-tuples of consecutive elements. If `n` is\n * greater than the length of the list, an empty list is returned.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @param {Number} n The size of the tuples to create\n * @param {Array} list The list to split into `n`-length tuples\n * @return {Array} The resulting list of `n`-length tuples\n * @see R.transduce\n * @example\n *\n *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n */\n\nvar aperture =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xaperture, _aperture));\n\nexport default aperture;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns a new list containing the contents of the given list, followed by\n * the given element.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The element to add to the end of the new list.\n * @param {Array} list The list of elements to add a new item to.\n *        list.\n * @return {Array} A new list containing the elements of the old list followed by `el`.\n * @see R.prepend\n * @example\n *\n *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n *      R.append('tests', []); //=> ['tests']\n *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n */\n\nvar append =\n/*#__PURE__*/\n_curry2(function append(el, list) {\n  return _concat(list, [el]);\n});\n\nexport default append;","import _curry2 from './internal/_curry2.js';\n/**\n * Applies function `fn` to the argument list `args`. This is useful for\n * creating a fixed-arity function from a variadic function. `fn` should be a\n * bound function if context is significant.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> a) -> [*] -> a\n * @param {Function} fn The function which will be called with `args`\n * @param {Array} args The arguments to call `fn` with\n * @return {*} result The result, equivalent to `fn(...args)`\n * @see R.call, R.unapply\n * @example\n *\n *      const nums = [1, 2, 3, -99, 42, 6, 7];\n *      R.apply(Math.max, nums); //=> 42\n * @symb R.apply(f, [a, b, c]) = f(a, b, c)\n */\n\nvar apply =\n/*#__PURE__*/\n_curry2(function apply(fn, args) {\n  return fn.apply(this, args);\n});\n\nexport default apply;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\nvar values =\n/*#__PURE__*/\n_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n\n  return vals;\n});\n\nexport default values;","import _curry1 from './internal/_curry1.js';\nimport apply from './apply.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\nimport keys from './keys.js';\nimport values from './values.js'; // Use custom mapValues function to avoid issues with specs that include a \"map\" key and R.map\n// delegating calls to .map\n\nfunction mapValues(fn, obj) {\n  return keys(obj).reduce(function (acc, key) {\n    acc[key] = fn(obj[key]);\n    return acc;\n  }, {});\n}\n/**\n * Given a spec object recursively mapping properties to functions, creates a\n * function producing an object of the same structure, by mapping each property\n * to the result of calling its associated function with the supplied arguments.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n * @param {Object} spec an object recursively mapping properties to functions for\n *        producing the values for these properties.\n * @return {Function} A function that returns an object of the same structure\n * as `spec', with each property set to the value returned by calling its\n * associated function with the supplied arguments.\n * @see R.converge, R.juxt\n * @example\n *\n *      const getMetrics = R.applySpec({\n *        sum: R.add,\n *        nested: { mul: R.multiply }\n *      });\n *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n * @symb R.applySpec({ x: f, y: { z: g } })(a, b) = { x: f(a, b), y: { z: g(a, b) } }\n */\n\n\nvar applySpec =\n/*#__PURE__*/\n_curry1(function applySpec(spec) {\n  spec = mapValues(function (v) {\n    return typeof v == 'function' ? v : applySpec(v);\n  }, spec);\n  return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n    var args = arguments;\n    return mapValues(function (f) {\n      return apply(f, args);\n    }, spec);\n  });\n});\n\nexport default applySpec;","import _curry2 from './internal/_curry2.js';\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nexport default applyTo;","import _curry3 from './internal/_curry3.js';\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\nvar assoc =\n/*#__PURE__*/\n_curry3(function assoc(prop, val, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  result[prop] = val;\n  return result;\n});\n\nexport default assoc;","import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-integer\";\n\n/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry1 from './internal/_curry1.js';\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\nimport _isArray from './internal/_isArray.js';\nimport _isInteger from './internal/_isInteger.js';\nimport assoc from './assoc.js';\nimport isNil from './isNil.js';\n/**\n * Makes a shallow clone of an object, setting or overriding the nodes required\n * to create the given path, and placing the specific value at the tail end of\n * that path. Note that this copies and flattens prototype properties onto the\n * new object as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> {a}\n * @param {Array} path the path to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except along the specified path.\n * @see R.dissocPath\n * @example\n *\n *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n *\n *      // Any missing or non-object keys in path will be overridden\n *      R.assocPath(['a', 'b', 'c'], 42, {a: 5}); //=> {a: {b: {c: 42}}}\n */\n\nvar assocPath =\n/*#__PURE__*/\n_curry3(function assocPath(path, val, obj) {\n  if (path.length === 0) {\n    return val;\n  }\n\n  var idx = path[0];\n\n  if (path.length > 1) {\n    var nextObj = !isNil(obj) && _has(idx, obj) ? obj[idx] : _isInteger(path[1]) ? [] : {};\n    val = assocPath(Array.prototype.slice.call(path, 1), val, nextObj);\n  }\n\n  if (_isInteger(idx) && _isArray(obj)) {\n    var arr = [].concat(obj);\n    arr[idx] = val;\n    return arr;\n  } else {\n    return assoc(idx, val, obj);\n  }\n});\n\nexport default assocPath;","import _curry2 from './internal/_curry2.js';\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly `n` parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} n The desired arity of the new function.\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity `n`.\n * @see R.binary, R.unary\n * @example\n *\n *      const takesTwoArgs = (a, b) => [a, b];\n *\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.nAry(1, takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only `n` arguments are passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.nAry(0, f)(a, b) = f()\n * @symb R.nAry(1, f)(a, b) = f(a)\n * @symb R.nAry(2, f)(a, b) = f(a, b)\n */\n\nvar nAry =\n/*#__PURE__*/\n_curry2(function nAry(n, fn) {\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.call(this);\n      };\n\n    case 1:\n      return function (a0) {\n        return fn.call(this, a0);\n      };\n\n    case 2:\n      return function (a0, a1) {\n        return fn.call(this, a0, a1);\n      };\n\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.call(this, a0, a1, a2);\n      };\n\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.call(this, a0, a1, a2, a3);\n      };\n\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.call(this, a0, a1, a2, a3, a4);\n      };\n\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5);\n      };\n\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n      };\n\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n      };\n\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n      };\n\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n      };\n\n    default:\n      throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n  }\n});\n\nexport default nAry;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 2 parameters. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> c) -> (a, b -> c)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 2.\n * @see R.nAry, R.unary\n * @example\n *\n *      const takesThreeArgs = function(a, b, c) {\n *        return [a, b, c];\n *      };\n *      takesThreeArgs.length; //=> 3\n *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n *\n *      const takesTwoArgs = R.binary(takesThreeArgs);\n *      takesTwoArgs.length; //=> 2\n *      // Only 2 arguments are passed to the wrapped function\n *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n * @symb R.binary(f)(a, b, c) = f(a, b)\n */\n\nvar binary =\n/*#__PURE__*/\n_curry1(function binary(fn) {\n  return nAry(2, fn);\n});\n\nexport default binary;","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport ap from './ap.js';\nimport curryN from './curryN.js';\nimport map from './map.js';\n/**\n * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig Number -> (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.lift, R.ap\n * @example\n *\n *      const madd3 = R.liftN(3, (...args) => R.sum(args));\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n */\n\nvar liftN =\n/*#__PURE__*/\n_curry2(function liftN(arity, fn) {\n  var lifted = curryN(arity, fn);\n  return curryN(arity, function () {\n    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));\n  });\n});\n\nexport default liftN;","import _curry1 from './internal/_curry1.js';\nimport liftN from './liftN.js';\n/**\n * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Function\n * @sig (*... -> *) -> ([*]... -> [*])\n * @param {Function} fn The function to lift into higher context\n * @return {Function} The lifted function.\n * @see R.liftN\n * @example\n *\n *      const madd3 = R.lift((a, b, c) => a + b + c);\n *\n *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n *\n *      const madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);\n *\n *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n */\n\nvar lift =\n/*#__PURE__*/\n_curry1(function lift(fn) {\n  return liftN(fn.length, fn);\n});\n\nexport default lift;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport and from './and.js';\nimport lift from './lift.js';\n/**\n * A function which calls the two provided functions and returns the `&&`\n * of the results.\n * It returns the result of the first function if it is false-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * false-y value.\n *\n * In addition to functions, `R.both` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f A predicate\n * @param {Function} g Another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n * @see R.and\n * @example\n *\n *      const gt10 = R.gt(R.__, 10)\n *      const lt20 = R.lt(R.__, 20)\n *      const f = R.both(gt10, lt20);\n *      f(15); //=> true\n *      f(30); //=> false\n *\n *      R.both(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(false)\n *      R.both([false, false, 'a'], [11]); //=> [false, false, 11]\n */\n\nvar both =\n/*#__PURE__*/\n_curry2(function both(f, g) {\n  return _isFunction(f) ? function _both() {\n    return f.apply(this, arguments) && g.apply(this, arguments);\n  } : lift(and)(f, g);\n});\n\nexport default both;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","import curry from './curry.js';\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\nvar call =\n/*#__PURE__*/\ncurry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nexport default call;","import _curry3 from './internal/_curry3.js';\n/**\n * Restricts a number to be within a range.\n *\n * Also works for other ordered types such as Strings and Dates.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Relation\n * @sig Ord a => a -> a -> a -> a\n * @param {Number} minimum The lower limit of the clamp (inclusive)\n * @param {Number} maximum The upper limit of the clamp (inclusive)\n * @param {Number} value Value to be clamped\n * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise\n * @example\n *\n *      R.clamp(1, 10, -5) // => 1\n *      R.clamp(1, 10, 15) // => 10\n *      R.clamp(1, 10, 4)  // => 4\n */\n\nvar clamp =\n/*#__PURE__*/\n_curry3(function clamp(min, max, value) {\n  if (min > max) {\n    throw new Error('min must not be greater than max in clamp(min, max, value)');\n  }\n\n  return value < min ? min : value > max ? max : value;\n});\n\nexport default clamp;","import \"core-js/modules/es6.regexp.constructor\";\nexport default function _cloneRegExp(pattern) {\n  return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n}","import _cloneRegExp from './_cloneRegExp.js';\nimport type from '../type.js';\n/**\n * Copies an object.\n *\n * @private\n * @param {*} value The value to be copied\n * @param {Array} refFrom Array containing the source references\n * @param {Array} refTo Array containing the copied source references\n * @param {Boolean} deep Whether or not to perform deep cloning.\n * @return {*} The copied value.\n */\n\nexport default function _clone(value, refFrom, refTo, deep) {\n  var copy = function copy(copiedValue) {\n    var len = refFrom.length;\n    var idx = 0;\n\n    while (idx < len) {\n      if (value === refFrom[idx]) {\n        return refTo[idx];\n      }\n\n      idx += 1;\n    }\n\n    refFrom[idx + 1] = value;\n    refTo[idx + 1] = copiedValue;\n\n    for (var key in value) {\n      copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n    }\n\n    return copiedValue;\n  };\n\n  switch (type(value)) {\n    case 'Object':\n      return copy({});\n\n    case 'Array':\n      return copy([]);\n\n    case 'Date':\n      return new Date(value.valueOf());\n\n    case 'RegExp':\n      return _cloneRegExp(value);\n\n    default:\n      return value;\n  }\n}","import _clone from './internal/_clone.js';\nimport _curry1 from './internal/_curry1.js';\n/**\n * Creates a deep copy of the value which may contain (nested) `Array`s and\n * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are\n * assigned by reference rather than copied\n *\n * Dispatches to a `clone` method if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {*} -> {*}\n * @param {*} value The object or array to clone\n * @return {*} A deeply cloned copy of `val`\n * @example\n *\n *      const objects = [{}, {}, {}];\n *      const objectsClone = R.clone(objects);\n *      objects === objectsClone; //=> false\n *      objects[0] === objectsClone[0]; //=> false\n */\n\nvar clone =\n/*#__PURE__*/\n_curry1(function clone(value) {\n  return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n});\n\nexport default clone;","import _curry1 from './internal/_curry1.js';\n/**\n * Makes a comparator function out of a function that reports whether the first\n * element is less than the second.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b) -> Boolean) -> ((a, b) -> Number)\n * @param {Function} pred A predicate function of arity two which will return `true` if the first argument\n * is less than the second, `false` otherwise\n * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`\n * @example\n *\n *      const byAge = R.comparator((a, b) => a.age < b.age);\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByIncreasingAge = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar comparator =\n/*#__PURE__*/\n_curry1(function comparator(pred) {\n  return function (a, b) {\n    return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n  };\n});\n\nexport default comparator;","import _curry1 from './internal/_curry1.js';\n/**\n * A function that returns the `!` of its argument. It will return `true` when\n * passed false-y value, and `false` when passed a truth-y one.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig * -> Boolean\n * @param {*} a any value\n * @return {Boolean} the logical inverse of passed argument.\n * @see R.complement\n * @example\n *\n *      R.not(true); //=> false\n *      R.not(false); //=> true\n *      R.not(0); //=> true\n *      R.not(1); //=> false\n */\n\nvar not =\n/*#__PURE__*/\n_curry1(function not(a) {\n  return !a;\n});\n\nexport default not;","import lift from './lift.js';\nimport not from './not.js';\n/**\n * Takes a function `f` and returns a function `g` such that if called with the same arguments\n * when `f` returns a \"truthy\" value, `g` returns `false` and when `f` returns a \"falsy\" value `g` returns `true`.\n *\n * `R.complement` may be applied to any functor\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> *) -> (*... -> Boolean)\n * @param {Function} f\n * @return {Function}\n * @see R.not\n * @example\n *\n *      const isNotNil = R.complement(R.isNil);\n *      isNil(null); //=> true\n *      isNotNil(null); //=> false\n *      isNil(7); //=> false\n *      isNotNil(7); //=> true\n */\n\nvar complement =\n/*#__PURE__*/\nlift(not);\nexport default complement;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry3 from './internal/_curry3.js';\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _arity from './internal/_arity.js';\nimport _pipe from './internal/_pipe.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n/**\n * Performs left-to-right function composition. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import pipe from './pipe.js';\nimport reverse from './reverse.js';\n/**\n * Performs right-to-left function composition. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipe\n * @example\n *\n *      const classyGreeting = (firstName, lastName) => \"The name's \" + lastName + \", \" + firstName + \" \" + lastName\n *      const yellGreeting = R.compose(R.toUpper, classyGreeting);\n *      yellGreeting('James', 'Bond'); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7\n *\n * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))\n */\n\nexport default function compose() {\n  if (arguments.length === 0) {\n    throw new Error('compose requires at least one argument');\n  }\n\n  return pipe.apply(this, reverse(arguments));\n}","import chain from './chain.js';\nimport compose from './compose.js';\nimport map from './map.js';\n/**\n * Returns the right-to-left Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (a -> m z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.pipeK\n * @deprecated since v0.26.0\n * @example\n *\n *       //  get :: String -> Object -> Maybe *\n *       const get = R.curry((propName, obj) => Maybe(obj[propName]))\n *\n *       //  getStateCode :: Maybe String -> Maybe String\n *       const getStateCode = R.composeK(\n *         R.compose(Maybe.of, R.toUpper),\n *         get('state'),\n *         get('address'),\n *         get('user'),\n *       );\n *       getStateCode({\"user\":{\"address\":{\"state\":\"ny\"}}}); //=> Maybe.Just(\"NY\")\n *       getStateCode({}); //=> Maybe.Nothing()\n * @symb R.composeK(f, g, h)(a) = R.chain(f, R.chain(g, h(a)))\n */\n\nexport default function composeK() {\n  if (arguments.length === 0) {\n    throw new Error('composeK requires at least one argument');\n  }\n\n  var init = Array.prototype.slice.call(arguments);\n  var last = init.pop();\n  return compose(compose.apply(this, map(chain, init)), last);\n}","export default function _pipeP(f, g) {\n  return function () {\n    var ctx = this;\n    return f.apply(ctx, arguments).then(function (x) {\n      return g.call(ctx, x);\n    });\n  };\n}","import _arity from './internal/_arity.js';\nimport _pipeP from './internal/_pipeP.js';\nimport reduce from './reduce.js';\nimport tail from './tail.js';\n/**\n * Performs left-to-right composition of one or more Promise-returning\n * functions. The leftmost function may have any arity; the remaining functions\n * must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeP\n * @deprecated since v0.26.0\n * @example\n *\n *      //  followersForUser :: String -> Promise [User]\n *      const followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n */\n\nexport default function pipeP() {\n  if (arguments.length === 0) {\n    throw new Error('pipeP requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n}","import pipeP from './pipeP.js';\nimport reverse from './reverse.js';\n/**\n * Performs right-to-left composition of one or more Promise-returning\n * functions. The rightmost function may have any arity; the remaining\n * functions must be unary.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n * @param {...Function} functions The functions to compose\n * @return {Function}\n * @see R.pipeP\n * @deprecated since v0.26.0\n * @example\n *\n *      const db = {\n *        users: {\n *          JOE: {\n *            name: 'Joe',\n *            followers: ['STEVE', 'SUZY']\n *          }\n *        }\n *      }\n *\n *      // We'll pretend to do a db lookup which returns a promise\n *      const lookupUser = (userId) => Promise.resolve(db.users[userId])\n *      const lookupFollowers = (user) => Promise.resolve(user.followers)\n *      lookupUser('JOE').then(lookupFollowers)\n *\n *      //  followersForUser :: String -> Promise [UserId]\n *      const followersForUser = R.composeP(lookupFollowers, lookupUser);\n *      followersForUser('JOE').then(followers => console.log('Followers:', followers))\n *      // Followers: [\"STEVE\",\"SUZY\"]\n */\n\nexport default function composeP() {\n  if (arguments.length === 0) {\n    throw new Error('composeP requires at least one argument');\n  }\n\n  return pipeP.apply(this, reverse(arguments));\n}","import _curry2 from './internal/_curry2.js';\nimport _isString from './internal/_isString.js';\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import nth from './nth.js';\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\nvar head =\n/*#__PURE__*/\nnth(0);\nexport default head;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport head from './head.js';\nimport _reduce from './internal/_reduce.js';\nimport tail from './tail.js';\nimport identity from './identity.js';\n/**\n * Performs left-to-right function composition using transforming function. The leftmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of pipeWith is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.composeWith, R.pipe\n * @example\n *\n *      const pipeWhileNotNil = R.pipeWith((f, res) => R.isNil(res) ? res : f(res));\n *      const f = pipeWhileNotNil([Math.pow, R.negate, R.inc])\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipeWith(f)([g, h, i])(...args) = f(i, f(h, f(g, ...args)))\n */\n\nvar pipeWith =\n/*#__PURE__*/\n_curry2(function pipeWith(xf, list) {\n  if (list.length <= 0) {\n    return identity;\n  }\n\n  var headList = head(list);\n  var tailList = tail(list);\n  return _arity(headList.length, function () {\n    return _reduce(function (result, f) {\n      return xf.call(this, f, result);\n    }, headList.apply(this, arguments), tailList);\n  });\n});\n\nexport default pipeWith;","import _curry2 from './internal/_curry2.js';\nimport pipeWith from './pipeWith.js';\nimport reverse from './reverse.js';\n/**\n * Performs right-to-left function composition using transforming function. The rightmost function may have\n * any arity; the remaining functions must be unary.\n *\n * **Note:** The result of compose is not automatically curried.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((* -> *), [(y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)]) -> ((a, b, ..., n) -> z)\n * @param {...Function} ...functions The functions to compose\n * @return {Function}\n * @see R.compose, R.pipeWith\n * @example\n *\n *      const composeWhileNotNil = R.composeWith((f, res) => R.isNil(res) ? res : f(res));\n *\n *      composeWhileNotNil([R.inc, R.prop('age')])({age: 1}) //=> 2\n *      composeWhileNotNil([R.inc, R.prop('age')])({}) //=> undefined\n *\n * @symb R.composeWith(f)([g, h, i])(...args) = f(g, f(h, f(i, ...args)))\n */\n\nvar composeWith =\n/*#__PURE__*/\n_curry2(function composeWith(xf, list) {\n  return pipeWith.apply(this, [xf, reverse(list)]);\n});\n\nexport default composeWith;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport _isFunction from './internal/_isFunction.js';\nimport _isString from './internal/_isString.js';\nimport toString from './toString.js';\n/**\n * Returns the result of concatenating the given lists or strings.\n *\n * Note: `R.concat` expects both arguments to be of the same type,\n * unlike the native `Array.prototype.concat` method. It will throw\n * an error if you `concat` an Array with a non-Array value.\n *\n * Dispatches to the `concat` method of the first argument, if present.\n * Can also concatenate two members of a [fantasy-land\n * compatible semigroup](https://github.com/fantasyland/fantasy-land#semigroup).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @sig String -> String -> String\n * @param {Array|String} firstList The first list\n * @param {Array|String} secondList The second list\n * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of\n * `secondList`.\n *\n * @example\n *\n *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n *      R.concat([], []); //=> []\n */\n\nvar concat =\n/*#__PURE__*/\n_curry2(function concat(a, b) {\n  if (_isArray(a)) {\n    if (_isArray(b)) {\n      return a.concat(b);\n    }\n\n    throw new TypeError(toString(b) + ' is not an array');\n  }\n\n  if (_isString(a)) {\n    if (_isString(b)) {\n      return a + b;\n    }\n\n    throw new TypeError(toString(b) + ' is not a string');\n  }\n\n  if (a != null && _isFunction(a['fantasy-land/concat'])) {\n    return a['fantasy-land/concat'](b);\n  }\n\n  if (a != null && _isFunction(a.concat)) {\n    return a.concat(b);\n  }\n\n  throw new TypeError(toString(a) + ' does not have a method named \"concat\" or \"fantasy-land/concat\"');\n});\n\nexport default concat;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\nimport map from './map.js';\nimport max from './max.js';\nimport reduce from './reduce.js';\n/**\n * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.\n * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments\n * to `fn` are applied to each of the predicates in turn until one returns a\n * \"truthy\" value, at which point `fn` returns the result of applying its\n * arguments to the corresponding transformer. If none of the predicates\n * matches, `fn` returns undefined.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Logic\n * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n * @param {Array} pairs A list of [predicate, transformer]\n * @return {Function}\n * @see R.ifElse, R.unless, R.when\n * @example\n *\n *      const fn = R.cond([\n *        [R.equals(0),   R.always('water freezes at 0°C')],\n *        [R.equals(100), R.always('water boils at 100°C')],\n *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n *      ]);\n *      fn(0); //=> 'water freezes at 0°C'\n *      fn(50); //=> 'nothing special happens at 50°C'\n *      fn(100); //=> 'water boils at 100°C'\n */\n\nvar cond =\n/*#__PURE__*/\n_curry1(function cond(pairs) {\n  var arity = reduce(max, 0, map(function (pair) {\n    return pair[0].length;\n  }, pairs));\n  return _arity(arity, function () {\n    var idx = 0;\n\n    while (idx < pairs.length) {\n      if (pairs[idx][0].apply(this, arguments)) {\n        return pairs[idx][1].apply(this, arguments);\n      }\n\n      idx += 1;\n    }\n  });\n});\n\nexport default cond;","import _curry2 from './internal/_curry2.js';\nimport curry from './curry.js';\nimport nAry from './nAry.js';\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type. The arity of the function\n * returned is specified to allow using variadic constructor functions.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Function\n * @sig Number -> (* -> {*}) -> (* -> {*})\n * @param {Number} n The arity of the constructor function.\n * @param {Function} Fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @example\n *\n *      // Variadic Constructor function\n *      function Salad() {\n *        this.ingredients = arguments;\n *      }\n *\n *      Salad.prototype.recipe = function() {\n *        const instructions = R.map(ingredient => 'Add a dollop of ' + ingredient, this.ingredients);\n *        return R.join('\\n', instructions);\n *      };\n *\n *      const ThreeLayerSalad = R.constructN(3, Salad);\n *\n *      // Notice we no longer need the 'new' keyword, and the constructor is curried for 3 arguments.\n *      const salad = ThreeLayerSalad('Mayonnaise')('Potato Chips')('Ketchup');\n *\n *      console.log(salad.recipe());\n *      // Add a dollop of Mayonnaise\n *      // Add a dollop of Potato Chips\n *      // Add a dollop of Ketchup\n */\n\nvar constructN =\n/*#__PURE__*/\n_curry2(function constructN(n, Fn) {\n  if (n > 10) {\n    throw new Error('Constructor with greater than ten arguments');\n  }\n\n  if (n === 0) {\n    return function () {\n      return new Fn();\n    };\n  }\n\n  return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n    switch (arguments.length) {\n      case 1:\n        return new Fn($0);\n\n      case 2:\n        return new Fn($0, $1);\n\n      case 3:\n        return new Fn($0, $1, $2);\n\n      case 4:\n        return new Fn($0, $1, $2, $3);\n\n      case 5:\n        return new Fn($0, $1, $2, $3, $4);\n\n      case 6:\n        return new Fn($0, $1, $2, $3, $4, $5);\n\n      case 7:\n        return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n      case 8:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n      case 9:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n      case 10:\n        return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n    }\n  }));\n});\n\nexport default constructN;","import _curry1 from './internal/_curry1.js';\nimport constructN from './constructN.js';\n/**\n * Wraps a constructor function inside a curried function that can be called\n * with the same arguments and returns the same type.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> {*}) -> (* -> {*})\n * @param {Function} fn The constructor function to wrap.\n * @return {Function} A wrapped, curried constructor function.\n * @see R.invoker\n * @example\n *\n *      // Constructor function\n *      function Animal(kind) {\n *        this.kind = kind;\n *      };\n *      Animal.prototype.sighting = function() {\n *        return \"It's a \" + this.kind + \"!\";\n *      }\n *\n *      const AnimalConstructor = R.construct(Animal)\n *\n *      // Notice we no longer need the 'new' keyword:\n *      AnimalConstructor('Pig'); //=> {\"kind\": \"Pig\", \"sighting\": function (){...}};\n *\n *      const animalTypes = [\"Lion\", \"Tiger\", \"Bear\"];\n *      const animalSighting = R.invoker(0, 'sighting');\n *      const sightNewAnimal = R.compose(animalSighting, AnimalConstructor);\n *      R.map(sightNewAnimal, animalTypes); //=> [\"It's a Lion!\", \"It's a Tiger!\", \"It's a Bear!\"]\n */\n\nvar construct =\n/*#__PURE__*/\n_curry1(function construct(Fn) {\n  return constructN(Fn.length, Fn);\n});\n\nexport default construct;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\nvar contains =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default contains;","import _curry2 from './internal/_curry2.js';\nimport _map from './internal/_map.js';\nimport curryN from './curryN.js';\nimport max from './max.js';\nimport pluck from './pluck.js';\nimport reduce from './reduce.js';\n/**\n * Accepts a converging function and a list of branching functions and returns\n * a new function. The arity of the new function is the same as the arity of\n * the longest branching function. When invoked, this new function is applied\n * to some arguments, and each branching function is applied to those same\n * arguments. The results of each branching function are passed as arguments\n * to the converging function to produce the return value.\n *\n * @func\n * @memberOf R\n * @since v0.4.2\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [((a, b, ...) -> x1), ((a, b, ...) -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} after A function. `after` will be invoked with the return values of\n *        `fn1` and `fn2` as its arguments.\n * @param {Array} functions A list of functions.\n * @return {Function} A new function.\n * @see R.useWith\n * @example\n *\n *      const average = R.converge(R.divide, [R.sum, R.length])\n *      average([1, 2, 3, 4, 5, 6, 7]) //=> 4\n *\n *      const strangeConcat = R.converge(R.concat, [R.toUpper, R.toLower])\n *      strangeConcat(\"Yodel\") //=> \"YODELyodel\"\n *\n * @symb R.converge(f, [g, h])(a, b) = f(g(a, b), h(a, b))\n */\n\nvar converge =\n/*#__PURE__*/\n_curry2(function converge(after, fns) {\n  return curryN(reduce(max, 0, pluck('length', fns)), function () {\n    var args = arguments;\n    var context = this;\n    return after.apply(context, _map(function (fn) {\n      return fn.apply(context, args);\n    }, fns));\n  });\n});\n\nexport default converge;","import _curryN from './_curryN.js';\nimport _has from './_has.js';\nimport _xfBase from './_xfBase.js';\n\nvar XReduceBy =\n/*#__PURE__*/\nfunction () {\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy =\n/*#__PURE__*/\n_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\n\nexport default _xreduceBy;","import _curryN from './internal/_curryN.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _has from './internal/_has.js';\nimport _reduce from './internal/_reduce.js';\nimport _xreduceBy from './internal/_xreduceBy.js';\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\nvar reduceBy =\n/*#__PURE__*/\n_curryN(4, [],\n/*#__PURE__*/\n_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\n\nexport default reduceBy;","import reduceBy from './reduceBy.js';\n/**\n * Counts the elements of a list according to how many match each value of a\n * key generated by the supplied function. Returns an object mapping the keys\n * produced by `fn` to the number of occurrences in the list. Note that all\n * keys are coerced to strings because of how JavaScript objects work.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig (a -> String) -> [a] -> {*}\n * @param {Function} fn The function used to map values to keys.\n * @param {Array} list The list to count elements from.\n * @return {Object} An object mapping keys to number of occurrences in the list.\n * @example\n *\n *      const numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n *\n *      const letters = ['a', 'b', 'A', 'a', 'B', 'c'];\n *      R.countBy(R.toLower)(letters);   //=> {'a': 3, 'b': 2, 'c': 1}\n */\n\nvar countBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return acc + 1;\n}, 0);\nexport default countBy;","import add from './add.js';\n/**\n * Decrements its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n - 1\n * @see R.inc\n * @example\n *\n *      R.dec(42); //=> 41\n */\n\nvar dec =\n/*#__PURE__*/\nadd(-1);\nexport default dec;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\nvar defaultTo =\n/*#__PURE__*/\n_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\n\nexport default defaultTo;","import _curry2 from './internal/_curry2.js';\nimport _Set from './internal/_Set.js';\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\nvar difference =\n/*#__PURE__*/\n_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default difference;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Duplication is determined according to the\n * value returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n * @example\n *\n *      const cmp = (x, y) => x.a === y.a;\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}];\n *      const l2 = [{a: 3}, {a: 4}];\n *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n */\n\nvar differenceWith =\n/*#__PURE__*/\n_curry3(function differenceWith(pred, first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n\n  while (idx < firstLen) {\n    if (!_includesWith(pred, first[idx], second) && !_includesWith(pred, first[idx], out)) {\n      out.push(first[idx]);\n    }\n\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default differenceWith;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns a new object that does not contain a `prop` property.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Object\n * @sig String -> {k: v} -> {k: v}\n * @param {String} prop The name of the property to dissociate\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original but without the specified property\n * @see R.assoc, R.omit\n * @example\n *\n *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n */\n\nvar dissoc =\n/*#__PURE__*/\n_curry2(function dissoc(prop, obj) {\n  var result = {};\n\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n\n  delete result[prop];\n  return result;\n});\n\nexport default dissoc;","import _curry3 from './internal/_curry3.js';\n/**\n * Removes the sub-list of `list` starting at index `start` and containing\n * `count` elements. _Note that this is not destructive_: it returns a copy of\n * the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} start The position to start removing elements\n * @param {Number} count The number of elements to remove\n * @param {Array} list The list to remove from\n * @return {Array} A new Array with `count` elements from `start` removed.\n * @see R.without\n * @example\n *\n *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n */\n\nvar remove =\n/*#__PURE__*/\n_curry3(function remove(start, count, list) {\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(start, count);\n  return result;\n});\n\nexport default remove;","import _curry3 from './internal/_curry3.js';\nimport adjust from './adjust.js';\nimport always from './always.js';\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\n\nvar update =\n/*#__PURE__*/\n_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\n\nexport default update;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\nimport _isArray from './internal/_isArray.js';\nimport assoc from './assoc.js';\nimport dissoc from './dissoc.js';\nimport remove from './remove.js';\nimport update from './update.js';\n/**\n * Makes a shallow clone of an object, omitting the property at the given path.\n * Note that this copies and flattens prototype properties onto the new object\n * as well. All non-primitive properties are copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.11.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {k: v} -> {k: v}\n * @param {Array} path The path to the value to omit\n * @param {Object} obj The object to clone\n * @return {Object} A new object without the property at path\n * @see R.assocPath\n * @example\n *\n *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n */\n\nvar dissocPath =\n/*#__PURE__*/\n_curry2(function dissocPath(path, obj) {\n  switch (path.length) {\n    case 0:\n      return obj;\n\n    case 1:\n      return _isInteger(path[0]) && _isArray(obj) ? remove(path[0], 1, obj) : dissoc(path[0], obj);\n\n    default:\n      var head = path[0];\n      var tail = Array.prototype.slice.call(path, 1);\n\n      if (obj[head] == null) {\n        return obj;\n      } else if (_isInteger(head) && _isArray(obj)) {\n        return update(head, dissocPath(tail, obj[head]), obj);\n      } else {\n        return assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n\n  }\n});\n\nexport default dissocPath;","import _curry2 from './internal/_curry2.js';\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDrop =\n/*#__PURE__*/\nfunction () {\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop =\n/*#__PURE__*/\n_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\n\nexport default _xdrop;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdrop from './internal/_xdrop.js';\nimport slice from './slice.js';\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\nvar drop =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\n\nexport default drop;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTake =\n/*#__PURE__*/\nfunction () {\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake =\n/*#__PURE__*/\n_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\n\nexport default _xtake;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtake from './internal/_xtake.js';\nimport slice from './slice.js';\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;","import take from '../take.js';\nexport default function dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLast =\n/*#__PURE__*/\nfunction () {\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n\n    this.store(input);\n    return result;\n  };\n\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast =\n/*#__PURE__*/\n_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\n\nexport default _xdropLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLast from './internal/_dropLast.js';\nimport _xdropLast from './internal/_xdropLast.js';\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\nvar dropLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLast, _dropLast));\n\nexport default dropLast;","import slice from '../slice.js';\nexport default function dropLastWhile(pred, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && pred(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(0, idx + 1, xs);\n}","import _curry2 from './_curry2.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropLastWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropLastWhile(fn, xf) {\n    this.f = fn;\n    this.retained = [];\n    this.xf = xf;\n  }\n\n  XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n  XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n    this.retained = null;\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n  };\n\n  XDropLastWhile.prototype.flush = function (result, input) {\n    result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n    this.retained = [];\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  XDropLastWhile.prototype.retain = function (result, input) {\n    this.retained.push(input);\n    return result;\n  };\n\n  return XDropLastWhile;\n}();\n\nvar _xdropLastWhile =\n/*#__PURE__*/\n_curry2(function _xdropLastWhile(fn, xf) {\n  return new XDropLastWhile(fn, xf);\n});\n\nexport default _xdropLastWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _dropLastWhile from './internal/_dropLastWhile.js';\nimport _xdropLastWhile from './internal/_xdropLastWhile.js';\n/**\n * Returns a new list excluding all the tailing elements of a given list which\n * satisfy the supplied predicate function. It passes each value from the right\n * to the supplied predicate function, skipping elements until the predicate\n * function returns a `falsy` value. The predicate function is applied to one argument:\n * *(value)*.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} predicate The function to be called on each element\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array without any trailing elements that return `falsy` values from the `predicate`.\n * @see R.takeLastWhile, R.addIndex, R.drop, R.dropWhile\n * @example\n *\n *      const lteThree = x => x <= 3;\n *\n *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n *\n *      R.dropLastWhile(x => x !== 'd' , 'Ramda'); //=> 'Ramd'\n */\n\nvar dropLastWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropLastWhile, _dropLastWhile));\n\nexport default dropLastWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropRepeatsWith =\n/*#__PURE__*/\nfunction () {\n  function XDropRepeatsWith(pred, xf) {\n    this.xf = xf;\n    this.pred = pred;\n    this.lastValue = undefined;\n    this.seenFirstValue = false;\n  }\n\n  XDropRepeatsWith.prototype['@@transducer/init'] = _xfBase.init;\n  XDropRepeatsWith.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n    var sameAsLast = false;\n\n    if (!this.seenFirstValue) {\n      this.seenFirstValue = true;\n    } else if (this.pred(this.lastValue, input)) {\n      sameAsLast = true;\n    }\n\n    this.lastValue = input;\n    return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropRepeatsWith;\n}();\n\nvar _xdropRepeatsWith =\n/*#__PURE__*/\n_curry2(function _xdropRepeatsWith(pred, xf) {\n  return new XDropRepeatsWith(pred, xf);\n});\n\nexport default _xdropRepeatsWith;","import nth from './nth.js';\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\nvar last =\n/*#__PURE__*/\nnth(-1);\nexport default last;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport last from './last.js';\n/**\n * Returns a new list without any consecutively repeating elements. Equality is\n * determined by applying the supplied predicate to each pair of consecutive elements. The\n * first element in a series of equal elements will be preserved.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *      const l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n */\n\nvar dropRepeatsWith =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n  var result = [];\n  var idx = 1;\n  var len = list.length;\n\n  if (len !== 0) {\n    result[0] = list[0];\n\n    while (idx < len) {\n      if (!pred(last(result), list[idx])) {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n  }\n\n  return result;\n}));\n\nexport default dropRepeatsWith;","import _curry1 from './internal/_curry1.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropRepeatsWith from './internal/_xdropRepeatsWith.js';\nimport dropRepeatsWith from './dropRepeatsWith.js';\nimport equals from './equals.js';\n/**\n * Returns a new list without any consecutively repeating elements.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} `list` without repeating elements.\n * @see R.transduce\n * @example\n *\n *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n */\n\nvar dropRepeats =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_dispatchable([],\n/*#__PURE__*/\n_xdropRepeatsWith(equals),\n/*#__PURE__*/\ndropRepeatsWith(equals)));\n\nexport default dropRepeats;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XDropWhile =\n/*#__PURE__*/\nfunction () {\n  function XDropWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f) {\n      if (this.f(input)) {\n        return result;\n      }\n\n      this.f = null;\n    }\n\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDropWhile;\n}();\n\nvar _xdropWhile =\n/*#__PURE__*/\n_curry2(function _xdropWhile(f, xf) {\n  return new XDropWhile(f, xf);\n});\n\nexport default _xdropWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdropWhile from './internal/_xdropWhile.js';\nimport slice from './slice.js';\n/**\n * Returns a new list excluding the leading elements of a given list which\n * satisfy the supplied predicate function. It passes each value to the supplied\n * predicate function, skipping elements while the predicate function returns\n * `true`. The predicate function is applied to one argument: *(value)*.\n *\n * Dispatches to the `dropWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.takeWhile, R.transduce, R.addIndex\n * @example\n *\n *      const lteTwo = x => x <= 2;\n *\n *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n *\n *      R.dropWhile(x => x !== 'd' , 'Ramda'); //=> 'da'\n */\n\nvar dropWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['dropWhile'], _xdropWhile, function dropWhile(pred, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && pred(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(idx, Infinity, xs);\n}));\n\nexport default dropWhile;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if one or both of its arguments are `true`. Returns `false`\n * if both arguments are `false`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {Any} a\n * @param {Any} b\n * @return {Any} the first argument if truthy, otherwise the second argument.\n * @see R.either\n * @example\n *\n *      R.or(true, true); //=> true\n *      R.or(true, false); //=> true\n *      R.or(false, true); //=> true\n *      R.or(false, false); //=> false\n */\n\nvar or =\n/*#__PURE__*/\n_curry2(function or(a, b) {\n  return a || b;\n});\n\nexport default or;","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport lift from './lift.js';\nimport or from './or.js';\n/**\n * A function wrapping calls to the two functions in an `||` operation,\n * returning the result of the first function if it is truth-y and the result\n * of the second function otherwise. Note that this is short-circuited,\n * meaning that the second function will not be invoked if the first returns a\n * truth-y value.\n *\n * In addition to functions, `R.either` also accepts any fantasy-land compatible\n * applicative functor.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n * @param {Function} f a predicate\n * @param {Function} g another predicate\n * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n * @see R.or\n * @example\n *\n *      const gt10 = x => x > 10;\n *      const even = x => x % 2 === 0;\n *      const f = R.either(gt10, even);\n *      f(101); //=> true\n *      f(8); //=> true\n *\n *      R.either(Maybe.Just(false), Maybe.Just(55)); // => Maybe.Just(55)\n *      R.either([false, false, 'a'], [11]) // => [11, 11, \"a\"]\n */\n\nvar either =\n/*#__PURE__*/\n_curry2(function either(f, g) {\n  return _isFunction(f) ? function _either() {\n    return f.apply(this, arguments) || g.apply(this, arguments);\n  } : lift(or)(f, g);\n});\n\nexport default either;","import _curry1 from './internal/_curry1.js';\nimport _isArguments from './internal/_isArguments.js';\nimport _isArray from './internal/_isArray.js';\nimport _isObject from './internal/_isObject.js';\nimport _isString from './internal/_isString.js';\n/**\n * Returns the empty value of its argument's type. Ramda defines the empty\n * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n * types are supported if they define `<Type>.empty`,\n * `<Type>.prototype.empty` or implement the\n * [FantasyLand Monoid spec](https://github.com/fantasyland/fantasy-land#monoid).\n *\n * Dispatches to the `empty` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> a\n * @param {*} x\n * @return {*}\n * @example\n *\n *      R.empty(Just(42));      //=> Nothing()\n *      R.empty([1, 2, 3]);     //=> []\n *      R.empty('unicorns');    //=> ''\n *      R.empty({x: 1, y: 2});  //=> {}\n */\n\nvar empty =\n/*#__PURE__*/\n_curry1(function empty(x) {\n  return x != null && typeof x['fantasy-land/empty'] === 'function' ? x['fantasy-land/empty']() : x != null && x.constructor != null && typeof x.constructor['fantasy-land/empty'] === 'function' ? x.constructor['fantasy-land/empty']() : x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n    return arguments;\n  }() : void 0 // else\n  ;\n});\n\nexport default empty;","import _curry2 from './internal/_curry2.js';\nimport drop from './drop.js';\n/**\n * Returns a new list containing the last `n` elements of the given list.\n * If `n > list.length`, returns a list of `list.length` elements.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements to return.\n * @param {Array} xs The collection to consider.\n * @return {Array}\n * @see R.dropLast\n * @example\n *\n *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.takeLast(3, 'ramda');               //=> 'mda'\n */\n\nvar takeLast =\n/*#__PURE__*/\n_curry2(function takeLast(n, xs) {\n  return drop(n >= 0 ? xs.length - n : 0, xs);\n});\n\nexport default takeLast;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport takeLast from './takeLast.js';\n/**\n * Checks if a list ends with the provided sublist.\n *\n * Similarly, checks if a string ends with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} suffix\n * @param {*} list\n * @return {Boolean}\n * @see R.startsWith\n * @example\n *\n *      R.endsWith('c', 'abc')                //=> true\n *      R.endsWith('b', 'abc')                //=> false\n *      R.endsWith(['c'], ['a', 'b', 'c'])    //=> true\n *      R.endsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar endsWith =\n/*#__PURE__*/\n_curry2(function (suffix, list) {\n  return equals(takeLast(suffix.length, list), suffix);\n});\n\nexport default endsWith;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n/**\n * Takes a function and two values in its domain and returns `true` if the\n * values map to the same value in the codomain; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Relation\n * @sig (a -> b) -> a -> a -> Boolean\n * @param {Function} f\n * @param {*} x\n * @param {*} y\n * @return {Boolean}\n * @example\n *\n *      R.eqBy(Math.abs, 5, -5); //=> true\n */\n\nvar eqBy =\n/*#__PURE__*/\n_curry3(function eqBy(f, x, y) {\n  return equals(f(x), f(y));\n});\n\nexport default eqBy;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n/**\n * Reports whether two objects have the same value, in [`R.equals`](#equals)\n * terms, for the specified property. Useful as a curried predicate.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig k -> {k: v} -> {k: v} -> Boolean\n * @param {String} prop The name of the property to compare\n * @param {Object} obj1\n * @param {Object} obj2\n * @return {Boolean}\n *\n * @example\n *\n *      const o1 = { a: 1, b: 2, c: 3, d: 4 };\n *      const o2 = { a: 10, b: 20, c: 3, d: 40 };\n *      R.eqProps('a', o1, o2); //=> false\n *      R.eqProps('c', o1, o2); //=> true\n */\n\nvar eqProps =\n/*#__PURE__*/\n_curry3(function eqProps(prop, obj1, obj2) {\n  return equals(obj1[prop], obj2[prop]);\n});\n\nexport default eqProps;","import _curry2 from './internal/_curry2.js';\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      const tomato = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      const transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve =\n/*#__PURE__*/\n_curry2(function evolve(transformations, object) {\n  var result = object instanceof Array ? [] : {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFind =\n/*#__PURE__*/\nfunction () {\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind =\n/*#__PURE__*/\n_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\n\nexport default _xfind;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfind from './internal/_xfind.js';\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar find =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx += 1;\n  }\n}));\n\nexport default find;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.found = false;\n  }\n\n  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindIndex.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, -1);\n    }\n\n    return this.xf['@@transducer/result'](result);\n  };\n\n  XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n    }\n\n    return result;\n  };\n\n  return XFindIndex;\n}();\n\nvar _xfindIndex =\n/*#__PURE__*/\n_curry2(function _xfindIndex(f, xf) {\n  return new XFindIndex(f, xf);\n});\n\nexport default _xfindIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindIndex from './internal/_xfindIndex.js';\n/**\n * Returns the index of the first element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindIndex, function findIndex(fn, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}));\n\nexport default findIndex;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLast =\n/*#__PURE__*/\nfunction () {\n  function XFindLast(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLast.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n  };\n\n  XFindLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.last = input;\n    }\n\n    return result;\n  };\n\n  return XFindLast;\n}();\n\nvar _xfindLast =\n/*#__PURE__*/\n_curry2(function _xfindLast(f, xf) {\n  return new XFindLast(f, xf);\n});\n\nexport default _xfindLast;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLast from './internal/_xfindLast.js';\n/**\n * Returns the last element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n */\n\nvar findLast =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLast, function findLast(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n\n    idx -= 1;\n  }\n}));\n\nexport default findLast;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFindLastIndex =\n/*#__PURE__*/\nfunction () {\n  function XFindLastIndex(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.idx = -1;\n    this.lastIdx = -1;\n  }\n\n  XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n  XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n    return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n  };\n\n  XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n    this.idx += 1;\n\n    if (this.f(input)) {\n      this.lastIdx = this.idx;\n    }\n\n    return result;\n  };\n\n  return XFindLastIndex;\n}();\n\nvar _xfindLastIndex =\n/*#__PURE__*/\n_curry2(function _xfindLastIndex(f, xf) {\n  return new XFindLastIndex(f, xf);\n});\n\nexport default _xfindLastIndex;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xfindLastIndex from './internal/_xfindLastIndex.js';\n/**\n * Returns the index of the last element of the list which matches the\n * predicate, or `-1` if no element matches.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> Boolean) -> [a] -> Number\n * @param {Function} fn The predicate function used to determine if the element is the\n * desired one.\n * @param {Array} list The array to consider.\n * @return {Number} The index of the element found, or `-1`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1, b: 0}, {a:1, b: 1}];\n *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n */\n\nvar findLastIndex =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xfindLastIndex, function findLastIndex(fn, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    if (fn(list[idx])) {\n      return idx;\n    }\n\n    idx -= 1;\n  }\n\n  return -1;\n}));\n\nexport default findLastIndex;","import _curry1 from './internal/_curry1.js';\nimport _makeFlat from './internal/_makeFlat.js';\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\nvar flatten =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_makeFlat(true));\n\nexport default flatten;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\nvar flip =\n/*#__PURE__*/\n_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\n\nexport default flip;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Iterate over an input `list`, calling a provided function `fn` for each\n * element in the list.\n *\n * `fn` receives one argument: *(value)*.\n *\n * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.forEach` method. For more\n * details on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n *\n * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n * the original array. In some libraries this function is named `each`.\n *\n * Dispatches to the `forEach` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig (a -> *) -> [a] -> [a]\n * @param {Function} fn The function to invoke. Receives one argument, `value`.\n * @param {Array} list The list to iterate over.\n * @return {Array} The original list.\n * @see R.addIndex\n * @example\n *\n *      const printXPlusFive = x => console.log(x + 5);\n *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n *      // logs 6\n *      // logs 7\n *      // logs 8\n * @symb R.forEach(f, [a, b, c]) = [a, b, c]\n */\n\nvar forEach =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('forEach', function forEach(fn, list) {\n  var len = list.length;\n  var idx = 0;\n\n  while (idx < len) {\n    fn(list[idx]);\n    idx += 1;\n  }\n\n  return list;\n}));\n\nexport default forEach;","import _curry2 from './internal/_curry2.js';\nimport keys from './keys.js';\n/**\n * Iterate over an input `object`, calling a provided function `fn` for each\n * key and value in the object.\n *\n * `fn` receives three argument: *(value, key, obj)*.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Object\n * @sig ((a, String, StrMap a) -> Any) -> StrMap a -> StrMap a\n * @param {Function} fn The function to invoke. Receives three argument, `value`, `key`, `obj`.\n * @param {Object} obj The object to iterate over.\n * @return {Object} The original object.\n * @example\n *\n *      const printKeyConcatValue = (value, key) => console.log(key + ':' + value);\n *      R.forEachObjIndexed(printKeyConcatValue, {x: 1, y: 2}); //=> {x: 1, y: 2}\n *      // logs x:1\n *      // logs y:2\n * @symb R.forEachObjIndexed(f, {x: a, y: b}) = {x: a, y: b}\n */\n\nvar forEachObjIndexed =\n/*#__PURE__*/\n_curry2(function forEachObjIndexed(fn, obj) {\n  var keyList = keys(obj);\n  var idx = 0;\n\n  while (idx < keyList.length) {\n    var key = keyList[idx];\n    fn(obj[key], key, obj);\n    idx += 1;\n  }\n\n  return obj;\n});\n\nexport default forEachObjIndexed;","import _curry1 from './internal/_curry1.js';\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar fromPairs =\n/*#__PURE__*/\n_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default fromPairs;","import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry2 from './internal/_curry2.js';\nimport reduceBy from './reduceBy.js';\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\nvar groupBy =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_checkForMethod('groupBy',\n/*#__PURE__*/\nreduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n\n  acc.push(item);\n  return acc;\n}, null)));\n\nexport default groupBy;","import _curry2 from './internal/_curry2.js';\n/**\n * Takes a list and returns a list of lists where each sublist's elements are\n * all satisfied pairwise comparison according to the provided function.\n * Only adjacent elements are passed to the comparison function.\n *\n * @func\n * @memberOf R\n * @since v0.21.0\n * @category List\n * @sig ((a, a) → Boolean) → [a] → [[a]]\n * @param {Function} fn Function for determining whether two given (adjacent)\n *        elements should be in the same group\n * @param {Array} list The array to group. Also accepts a string, which will be\n *        treated as a list of characters.\n * @return {List} A list that contains sublists of elements,\n *         whose concatenations are equal to the original list.\n * @example\n *\n * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a + 1 === b, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0, 1], [1, 2, 3], [5], [8], [13], [21]]\n *\n * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n *\n * R.groupWith(R.eqBy(isVowel), 'aestiou')\n * //=> ['ae', 'st', 'iou']\n */\n\nvar groupWith =\n/*#__PURE__*/\n_curry2(function (fn, list) {\n  var res = [];\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    var nextidx = idx + 1;\n\n    while (nextidx < len && fn(list[nextidx - 1], list[nextidx])) {\n      nextidx += 1;\n    }\n\n    res.push(list.slice(idx, nextidx));\n    idx = nextidx;\n  }\n\n  return res;\n});\n\nexport default groupWith;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if the first argument is greater than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.lt\n * @example\n *\n *      R.gt(2, 1); //=> true\n *      R.gt(2, 2); //=> false\n *      R.gt(2, 3); //=> false\n *      R.gt('a', 'z'); //=> false\n *      R.gt('z', 'a'); //=> true\n */\n\nvar gt =\n/*#__PURE__*/\n_curry2(function gt(a, b) {\n  return a > b;\n});\n\nexport default gt;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if the first argument is greater than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.lte\n * @example\n *\n *      R.gte(2, 1); //=> true\n *      R.gte(2, 2); //=> true\n *      R.gte(2, 3); //=> false\n *      R.gte('a', 'z'); //=> false\n *      R.gte('z', 'a'); //=> true\n */\n\nvar gte =\n/*#__PURE__*/\n_curry2(function gte(a, b) {\n  return a >= b;\n});\n\nexport default gte;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\nvar hasPath =\n/*#__PURE__*/\n_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n\n  var val = obj;\n  var idx = 0;\n\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default hasPath;","import _curry2 from './internal/_curry2.js';\nimport hasPath from './hasPath.js';\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\nvar has =\n/*#__PURE__*/\n_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\n\nexport default has;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns whether or not an object or its prototype chain has a property with\n * the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      function Rectangle(width, height) {\n *        this.width = width;\n *        this.height = height;\n *      }\n *      Rectangle.prototype.area = function() {\n *        return this.width * this.height;\n *      };\n *\n *      const square = new Rectangle(2, 2);\n *      R.hasIn('width', square);  //=> true\n *      R.hasIn('area', square);  //=> true\n */\n\nvar hasIn =\n/*#__PURE__*/\n_curry2(function hasIn(prop, obj) {\n  return prop in obj;\n});\n\nexport default hasIn;","import _objectIs from './internal/_objectIs.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\nvar identical =\n/*#__PURE__*/\n_curry2(_objectIs);\n\nexport default identical;","import _curry3 from './internal/_curry3.js';\nimport curryN from './curryN.js';\n/**\n * Creates a function that will process either the `onTrue` or the `onFalse`\n * function depending upon the result of the `condition` predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Logic\n * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n * @param {Function} condition A predicate function\n * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n * @return {Function} A new function that will process either the `onTrue` or the `onFalse`\n *                    function depending upon the result of the `condition` predicate.\n * @see R.unless, R.when, R.cond\n * @example\n *\n *      const incCount = R.ifElse(\n *        R.has('count'),\n *        R.over(R.lensProp('count'), R.inc),\n *        R.assoc('count', 1)\n *      );\n *      incCount({});           //=> { count: 1 }\n *      incCount({ count: 1 }); //=> { count: 2 }\n */\n\nvar ifElse =\n/*#__PURE__*/\n_curry3(function ifElse(condition, onTrue, onFalse) {\n  return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n    return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n  });\n});\n\nexport default ifElse;","import add from './add.js';\n/**\n * Increments its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number} n + 1\n * @see R.dec\n * @example\n *\n *      R.inc(42); //=> 43\n */\n\nvar inc =\n/*#__PURE__*/\nadd(1);\nexport default inc;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.any\n * @example\n *\n *      R.includes(3, [1, 2, 3]); //=> true\n *      R.includes(4, [1, 2, 3]); //=> false\n *      R.includes({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.includes([42], [[42]]); //=> true\n *      R.includes('ba', 'banana'); //=>true\n */\n\nvar includes =\n/*#__PURE__*/\n_curry2(_includes);\n\nexport default includes;","import reduceBy from './reduceBy.js';\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\nvar indexBy =\n/*#__PURE__*/\nreduceBy(function (acc, elem) {\n  return elem;\n}, null);\nexport default indexBy;","import _curry2 from './internal/_curry2.js';\nimport _indexOf from './internal/_indexOf.js';\nimport _isArray from './internal/_isArray.js';\n/**\n * Returns the position of the first occurrence of an item in an array, or -1\n * if the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.lastIndexOf\n * @example\n *\n *      R.indexOf(3, [1,2,3,4]); //=> 2\n *      R.indexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar indexOf =\n/*#__PURE__*/\n_curry2(function indexOf(target, xs) {\n  return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n});\n\nexport default indexOf;","import slice from './slice.js';\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\n\nvar init =\n/*#__PURE__*/\nslice(0, -1);\nexport default init;","import _includesWith from './internal/_includesWith.js';\nimport _curry3 from './internal/_curry3.js';\nimport _filter from './internal/_filter.js';\n/**\n * Takes a predicate `pred`, a list `xs`, and a list `ys`, and returns a list\n * `xs'` comprising each of the elements of `xs` which is equal to one or more\n * elements of `ys` according to `pred`.\n *\n * `pred` must be a binary function expecting an element from each list.\n *\n * `xs`, `ys`, and `xs'` are treated as sets, semantically, so ordering should\n * not be significant, but since `xs'` is ordered the implementation guarantees\n * that its values are in the same order as they appear in `xs`. Duplicates are\n * not removed, so `xs'` may contain duplicates if `xs` contains duplicates.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Relation\n * @sig ((a, b) -> Boolean) -> [a] -> [b] -> [a]\n * @param {Function} pred\n * @param {Array} xs\n * @param {Array} ys\n * @return {Array}\n * @see R.intersection\n * @example\n *\n *      R.innerJoin(\n *        (record, id) => record.id === id,\n *        [{id: 824, name: 'Richie Furay'},\n *         {id: 956, name: 'Dewey Martin'},\n *         {id: 313, name: 'Bruce Palmer'},\n *         {id: 456, name: 'Stephen Stills'},\n *         {id: 177, name: 'Neil Young'}],\n *        [177, 456, 999]\n *      );\n *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n */\n\nvar innerJoin =\n/*#__PURE__*/\n_curry3(function innerJoin(pred, xs, ys) {\n  return _filter(function (x) {\n    return _includesWith(pred, x, ys);\n  }, xs);\n});\n\nexport default innerJoin;","import _curry3 from './internal/_curry3.js';\n/**\n * Inserts the supplied element into the list, at the specified `index`. _Note that\n\n * this is not destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.2.2\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} index The position to insert the element\n * @param {*} elt The element to insert into the Array\n * @param {Array} list The list to insert into\n * @return {Array} A new Array with `elt` inserted at `index`.\n * @example\n *\n *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n */\n\nvar insert =\n/*#__PURE__*/\n_curry3(function insert(idx, elt, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  var result = Array.prototype.slice.call(list, 0);\n  result.splice(idx, 0, elt);\n  return result;\n});\n\nexport default insert;","import _curry3 from './internal/_curry3.js';\n/**\n * Inserts the sub-list into the list, at the specified `index`. _Note that this is not\n * destructive_: it returns a copy of the list with the changes.\n * <small>No lists have been harmed in the application of this function.</small>\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig Number -> [a] -> [a] -> [a]\n * @param {Number} index The position to insert the sub-list\n * @param {Array} elts The sub-list to insert into the Array\n * @param {Array} list The list to insert the sub-list into\n * @return {Array} A new Array with `elts` inserted starting at `index`.\n * @example\n *\n *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n */\n\nvar insertAll =\n/*#__PURE__*/\n_curry3(function insertAll(idx, elts, list) {\n  idx = idx < list.length && idx >= 0 ? idx : list.length;\n  return [].concat(Array.prototype.slice.call(list, 0, idx), elts, Array.prototype.slice.call(list, idx));\n});\n\nexport default insertAll;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport _filter from './internal/_filter.js';\nimport flip from './flip.js';\nimport uniq from './uniq.js';\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of those\n * elements common to both lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The list of elements found in both `list1` and `list2`.\n * @see R.innerJoin\n * @example\n *\n *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n */\n\nvar intersection =\n/*#__PURE__*/\n_curry2(function intersection(list1, list2) {\n  var lookupList, filteredList;\n\n  if (list1.length > list2.length) {\n    lookupList = list1;\n    filteredList = list2;\n  } else {\n    lookupList = list2;\n    filteredList = list1;\n  }\n\n  return uniq(_filter(flip(_includes)(lookupList), filteredList));\n});\n\nexport default intersection;","import \"core-js/modules/es6.object.assign\";\nimport _has from './_has.js'; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n\n  while (idx < length) {\n    var source = arguments[idx];\n\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n\n    idx += 1;\n  }\n\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _curry2 from './internal/_curry2.js';\n/**\n * Creates an object containing a single key:value pair.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @sig String -> a -> {String:a}\n * @param {String} key\n * @param {*} val\n * @return {Object}\n * @see R.pair\n * @example\n *\n *      const matchPhrases = R.compose(\n *        R.objOf('must'),\n *        R.map(R.objOf('match_phrase'))\n *      );\n *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n */\n\nvar objOf =\n/*#__PURE__*/\n_curry2(function objOf(key, val) {\n  var obj = {};\n  obj[key] = val;\n  return obj;\n});\n\nexport default objOf;","import _objectAssign from './_objectAssign.js';\nimport _identity from './_identity.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _isTransformer from './_isTransformer.js';\nimport objOf from '../objOf.js';\nvar _stepCatArray = {\n  '@@transducer/init': Array,\n  '@@transducer/step': function transducerStep(xs, x) {\n    xs.push(x);\n    return xs;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatString = {\n  '@@transducer/init': String,\n  '@@transducer/step': function transducerStep(a, b) {\n    return a + b;\n  },\n  '@@transducer/result': _identity\n};\nvar _stepCatObject = {\n  '@@transducer/init': Object,\n  '@@transducer/step': function transducerStep(result, input) {\n    return _objectAssign(result, _isArrayLike(input) ? objOf(input[0], input[1]) : input);\n  },\n  '@@transducer/result': _identity\n};\nexport default function _stepCat(obj) {\n  if (_isTransformer(obj)) {\n    return obj;\n  }\n\n  if (_isArrayLike(obj)) {\n    return _stepCatArray;\n  }\n\n  if (typeof obj === 'string') {\n    return _stepCatString;\n  }\n\n  if (typeof obj === 'object') {\n    return _stepCatObject;\n  }\n\n  throw new Error('Cannot create transformer for ' + obj);\n}","import _clone from './internal/_clone.js';\nimport _curry3 from './internal/_curry3.js';\nimport _isTransformer from './internal/_isTransformer.js';\nimport _reduce from './internal/_reduce.js';\nimport _stepCat from './internal/_stepCat.js';\n/**\n * Transforms the items of the list with the transducer and appends the\n * transformed items to the accumulator using an appropriate iterator function\n * based on the accumulator type.\n *\n * The accumulator can be an array, string, object or a transformer. Iterated\n * items will be appended to arrays and concatenated to strings. Objects will\n * be merged directly or 2-item arrays will be merged as key, value pairs.\n *\n * The accumulator can also be a transformer object that provides a 2-arity\n * reducing iterator function, step, 0-arity initial value function, init, and\n * 1-arity result extraction function result. The step function is used as the\n * iterator function in reduce. The result function is used to convert the\n * final accumulator into the return type and in most cases is R.identity. The\n * init function is used to provide the initial accumulator.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the\n * transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig a -> (b -> b) -> [c] -> a\n * @param {*} acc The initial accumulator value.\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.transduce\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *\n *      R.into([], transducer, numbers); //=> [2, 3]\n *\n *      const intoArray = R.into([]);\n *      intoArray(transducer, numbers); //=> [2, 3]\n */\n\nvar into =\n/*#__PURE__*/\n_curry3(function into(acc, xf, list) {\n  return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n});\n\nexport default into;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\nimport keys from './keys.js';\n/**\n * Same as [`R.invertObj`](#invertObj), however this accounts for objects with\n * duplicate values by putting the values into an array.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: [ s, ... ]}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object with keys in an array.\n * @see R.invertObj\n * @example\n *\n *      const raceResultsByFirstName = {\n *        first: 'alice',\n *        second: 'jake',\n *        third: 'alice',\n *      };\n *      R.invert(raceResultsByFirstName);\n *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n */\n\nvar invert =\n/*#__PURE__*/\n_curry1(function invert(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    var val = obj[key];\n    var list = _has(val, out) ? out[val] : out[val] = [];\n    list[list.length] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invert;","import _curry1 from './internal/_curry1.js';\nimport keys from './keys.js';\n/**\n * Returns a new object with the keys of the given object as values, and the\n * values of the given object, which are coerced to strings, as keys. Note\n * that the last key found is preferred when handling the same value.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {s: x} -> {x: s}\n * @param {Object} obj The object or array to invert\n * @return {Object} out A new object\n * @see R.invert\n * @example\n *\n *      const raceResults = {\n *        first: 'alice',\n *        second: 'jake'\n *      };\n *      R.invertObj(raceResults);\n *      //=> { 'alice': 'first', 'jake':'second' }\n *\n *      // Alternatively:\n *      const raceResults = ['alice', 'jake'];\n *      R.invertObj(raceResults);\n *      //=> { 'alice': '0', 'jake':'1' }\n */\n\nvar invertObj =\n/*#__PURE__*/\n_curry1(function invertObj(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var idx = 0;\n  var out = {};\n\n  while (idx < len) {\n    var key = props[idx];\n    out[obj[key]] = key;\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default invertObj;","import _curry2 from './internal/_curry2.js';\n/**\n * See if an object (`val`) is an instance of the supplied constructor. This\n * function will check up the inheritance chain, if any.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Type\n * @sig (* -> {*}) -> a -> Boolean\n * @param {Object} ctor A constructor\n * @param {*} val The value to test\n * @return {Boolean}\n * @example\n *\n *      R.is(Object, {}); //=> true\n *      R.is(Number, 1); //=> true\n *      R.is(Object, 1); //=> false\n *      R.is(String, 's'); //=> true\n *      R.is(String, new String('')); //=> true\n *      R.is(Object, new String('')); //=> true\n *      R.is(Object, 's'); //=> false\n *      R.is(Number, {}); //=> false\n */\n\nvar is =\n/*#__PURE__*/\n_curry2(function is(Ctor, val) {\n  return val != null && val.constructor === Ctor || val instanceof Ctor;\n});\n\nexport default is;","import _curry1 from './internal/_curry1.js';\nimport empty from './empty.js';\nimport equals from './equals.js';\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\n\nvar isEmpty =\n/*#__PURE__*/\n_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\n\nexport default isEmpty;","import _curry1 from './internal/_curry1.js';\nimport converge from './converge.js';\n/**\n * juxt applies a list of functions to a list of values.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Function\n * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n * @param {Array} fns An array of functions\n * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n * @see R.applySpec\n * @example\n *\n *      const getRange = R.juxt([Math.min, Math.max]);\n *      getRange(3, 4, 9, -3); //=> [-3, 9]\n * @symb R.juxt([f, g, h])(a, b) = [f(a, b), g(a, b), h(a, b)]\n */\n\nvar juxt =\n/*#__PURE__*/\n_curry1(function juxt(fns) {\n  return converge(function () {\n    return Array.prototype.slice.call(arguments, 0);\n  }, fns);\n});\n\nexport default juxt;","import _curry1 from './internal/_curry1.js';\n/**\n * Returns a list containing the names of all the properties of the supplied\n * object, including prototype properties.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own and prototype properties.\n * @see R.keys, R.valuesIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.keysIn(f); //=> ['x', 'y']\n */\n\nvar keysIn =\n/*#__PURE__*/\n_curry1(function keysIn(obj) {\n  var prop;\n  var ks = [];\n\n  for (prop in obj) {\n    ks[ks.length] = prop;\n  }\n\n  return ks;\n});\n\nexport default keysIn;","import _curry2 from './internal/_curry2.js';\nimport _isArray from './internal/_isArray.js';\nimport equals from './equals.js';\n/**\n * Returns the position of the last occurrence of an item in an array, or -1 if\n * the item is not included in the array. [`R.equals`](#equals) is used to\n * determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Number\n * @param {*} target The item to find.\n * @param {Array} xs The array to search in.\n * @return {Number} the index of the target, or -1 if the target is not found.\n * @see R.indexOf\n * @example\n *\n *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n */\n\nvar lastIndexOf =\n/*#__PURE__*/\n_curry2(function lastIndexOf(target, xs) {\n  if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n    return xs.lastIndexOf(target);\n  } else {\n    var idx = xs.length - 1;\n\n    while (idx >= 0) {\n      if (equals(xs[idx], target)) {\n        return idx;\n      }\n\n      idx -= 1;\n    }\n\n    return -1;\n  }\n});\n\nexport default lastIndexOf;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isNumber(x) {\n  return Object.prototype.toString.call(x) === '[object Number]';\n}","import _curry1 from './internal/_curry1.js';\nimport _isNumber from './internal/_isNumber.js';\n/**\n * Returns the number of elements in the array by returning `list.length`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [a] -> Number\n * @param {Array} list The array to inspect.\n * @return {Number} The length of the array.\n * @example\n *\n *      R.length([]); //=> 0\n *      R.length([1, 2, 3]); //=> 3\n */\n\nvar length =\n/*#__PURE__*/\n_curry1(function length(list) {\n  return list != null && _isNumber(list.length) ? list.length : NaN;\n});\n\nexport default length;","import _curry2 from './internal/_curry2.js';\nimport map from './map.js';\n/**\n * Returns a lens for the given getter and setter functions. The getter \"gets\"\n * the value of the focus; the setter \"sets\" the value of the focus. The setter\n * should not mutate the data structure.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n * @param {Function} getter\n * @param {Function} setter\n * @return {Lens}\n * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lens(R.prop('x'), R.assoc('x'));\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lens =\n/*#__PURE__*/\n_curry2(function lens(getter, setter) {\n  return function (toFunctorFn) {\n    return function (target) {\n      return map(function (focus) {\n        return setter(focus, target);\n      }, toFunctorFn(getter(target)));\n    };\n  };\n});\n\nexport default lens;","import _curry1 from './internal/_curry1.js';\nimport lens from './lens.js';\nimport nth from './nth.js';\nimport update from './update.js';\n/**\n * Returns a lens whose focus is the specified index.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Number -> Lens s a\n * @param {Number} n\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n */\n\nvar lensIndex =\n/*#__PURE__*/\n_curry1(function lensIndex(n) {\n  return lens(nth(n), update(n));\n});\n\nexport default lensIndex;","import _curry1 from './internal/_curry1.js';\nimport assocPath from './assocPath.js';\nimport lens from './lens.js';\nimport path from './path.js';\n/**\n * Returns a lens whose focus is the specified path.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @typedefn Idx = String | Int\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig [Idx] -> Lens s a\n * @param {Array} path The path to use.\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xHeadYLens = R.lensPath(['x', 0, 'y']);\n *\n *      R.view(xHeadYLens, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> 2\n *      R.set(xHeadYLens, 1, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: 1, z: 3}, {y: 4, z: 5}]}\n *      R.over(xHeadYLens, R.negate, {x: [{y: 2, z: 3}, {y: 4, z: 5}]});\n *      //=> {x: [{y: -2, z: 3}, {y: 4, z: 5}]}\n */\n\nvar lensPath =\n/*#__PURE__*/\n_curry1(function lensPath(p) {\n  return lens(path(p), assocPath(p));\n});\n\nexport default lensPath;","import _curry1 from './internal/_curry1.js';\nimport assoc from './assoc.js';\nimport lens from './lens.js';\nimport prop from './prop.js';\n/**\n * Returns a lens whose focus is the specified property.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig String -> Lens s a\n * @param {String} k\n * @return {Lens}\n * @see R.view, R.set, R.over\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});            //=> 1\n *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n */\n\nvar lensProp =\n/*#__PURE__*/\n_curry1(function lensProp(k) {\n  return lens(prop(k), assoc(k));\n});\n\nexport default lensProp;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if the first argument is less than the second; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @see R.gt\n * @example\n *\n *      R.lt(2, 1); //=> false\n *      R.lt(2, 2); //=> false\n *      R.lt(2, 3); //=> true\n *      R.lt('a', 'z'); //=> true\n *      R.lt('z', 'a'); //=> false\n */\n\nvar lt =\n/*#__PURE__*/\n_curry2(function lt(a, b) {\n  return a < b;\n});\n\nexport default lt;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns `true` if the first argument is less than or equal to the second;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> Boolean\n * @param {Number} a\n * @param {Number} b\n * @return {Boolean}\n * @see R.gte\n * @example\n *\n *      R.lte(2, 1); //=> false\n *      R.lte(2, 2); //=> true\n *      R.lte(2, 3); //=> true\n *      R.lte('a', 'z'); //=> true\n *      R.lte('z', 'a'); //=> false\n */\n\nvar lte =\n/*#__PURE__*/\n_curry2(function lte(a, b) {\n  return a <= b;\n});\n\nexport default lte;","import _curry3 from './internal/_curry3.js';\n/**\n * The `mapAccum` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from left to right, and returning a final value of this\n * accumulator together with the new list.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.scan, R.addIndex, R.mapAccumRight\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [a + b, a + b];\n *\n *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n * @symb R.mapAccum(f, a, [b, c, d]) = [\n *   f(f(f(a, b)[0], c)[0], d)[0],\n *   [\n *     f(a, b)[1],\n *     f(f(a, b)[0], c)[1],\n *     f(f(f(a, b)[0], c)[0], d)[1]\n *   ]\n * ]\n */\n\nvar mapAccum =\n/*#__PURE__*/\n_curry3(function mapAccum(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx < len) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx += 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccum;","import _curry3 from './internal/_curry3.js';\n/**\n * The `mapAccumRight` function behaves like a combination of map and reduce; it\n * applies a function to each element of a list, passing an accumulating\n * parameter from right to left, and returning a final value of this\n * accumulator together with the new list.\n *\n * Similar to [`mapAccum`](#mapAccum), except moves through the input list from\n * the right to the left.\n *\n * The iterator function receives two arguments, *acc* and *value*, and should\n * return a tuple *[acc, value]*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((acc, x) -> (acc, y)) -> acc -> [x] -> (acc, [y])\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.addIndex, R.mapAccum\n * @example\n *\n *      const digits = ['1', '2', '3', '4'];\n *      const appender = (a, b) => [b + a, b + a];\n *\n *      R.mapAccumRight(appender, 5, digits); //=> ['12345', ['12345', '2345', '345', '45']]\n * @symb R.mapAccumRight(f, a, [b, c, d]) = [\n *   f(f(f(a, d)[0], c)[0], b)[0],\n *   [\n *     f(a, d)[1],\n *     f(f(a, d)[0], c)[1],\n *     f(f(f(a, d)[0], c)[0], b)[1]\n *   ]\n * ]\n */\n\nvar mapAccumRight =\n/*#__PURE__*/\n_curry3(function mapAccumRight(fn, acc, list) {\n  var idx = list.length - 1;\n  var result = [];\n  var tuple = [acc];\n\n  while (idx >= 0) {\n    tuple = fn(tuple[0], list[idx]);\n    result[idx] = tuple[1];\n    idx -= 1;\n  }\n\n  return [tuple[0], result];\n});\n\nexport default mapAccumRight;","import _curry2 from './internal/_curry2.js';\nimport _reduce from './internal/_reduce.js';\nimport keys from './keys.js';\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\nvar mapObjIndexed =\n/*#__PURE__*/\n_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\n\nexport default mapObjIndexed;","import \"core-js/modules/es6.regexp.match\";\nimport _curry2 from './internal/_curry2.js';\n/**\n * Tests a regular expression against a String. Note that this function will\n * return an empty array when there are no matches. This differs from\n * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n * which returns `null` when there are no matches.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig RegExp -> String -> [String | Undefined]\n * @param {RegExp} rx A regular expression.\n * @param {String} str The string to match against\n * @return {Array} The list of matches or empty array.\n * @see R.test\n * @example\n *\n *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n *      R.match(/a/, 'b'); //=> []\n *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n */\n\nvar match =\n/*#__PURE__*/\n_curry2(function match(rx, str) {\n  return str.match(rx) || [];\n});\n\nexport default match;","import _curry2 from './internal/_curry2.js';\nimport _isInteger from './internal/_isInteger.js';\n/**\n * `mathMod` behaves like the modulo operator should mathematically, unlike the\n * `%` operator (and by extension, [`R.modulo`](#modulo)). So while\n * `-17 % 5` is `-2`, `mathMod(-17, 5)` is `3`. `mathMod` requires Integer\n * arguments, and returns NaN when the modulus is zero or negative.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} m The dividend.\n * @param {Number} p the modulus.\n * @return {Number} The result of `b mod a`.\n * @see R.modulo\n * @example\n *\n *      R.mathMod(-17, 5);  //=> 3\n *      R.mathMod(17, 5);   //=> 2\n *      R.mathMod(17, -5);  //=> NaN\n *      R.mathMod(17, 0);   //=> NaN\n *      R.mathMod(17.2, 5); //=> NaN\n *      R.mathMod(17, 5.3); //=> NaN\n *\n *      const clock = R.mathMod(R.__, 12);\n *      clock(15); //=> 3\n *      clock(24); //=> 0\n *\n *      const seventeenMod = R.mathMod(17);\n *      seventeenMod(3);  //=> 2\n *      seventeenMod(4);  //=> 1\n *      seventeenMod(10); //=> 7\n */\n\nvar mathMod =\n/*#__PURE__*/\n_curry2(function mathMod(m, p) {\n  if (!_isInteger(m)) {\n    return NaN;\n  }\n\n  if (!_isInteger(p) || p < 1) {\n    return NaN;\n  }\n\n  return (m % p + p) % p;\n});\n\nexport default mathMod;","import _curry3 from './internal/_curry3.js';\n/**\n * Takes a function and two values, and returns whichever value produces the\n * larger result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.max, R.minBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.maxBy(square, -3, 2); //=> -3\n *\n *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n *      R.reduce(R.maxBy(square), 0, []); //=> 0\n */\n\nvar maxBy =\n/*#__PURE__*/\n_curry3(function maxBy(f, a, b) {\n  return f(b) > f(a) ? b : a;\n});\n\nexport default maxBy;","import add from './add.js';\nimport reduce from './reduce.js';\n/**\n * Adds together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The sum of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.sum([2,4,6,8,100,1]); //=> 121\n */\n\nvar sum =\n/*#__PURE__*/\nreduce(add, 0);\nexport default sum;","import _curry1 from './internal/_curry1.js';\nimport sum from './sum.js';\n/**\n * Returns the mean of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.median\n * @example\n *\n *      R.mean([2, 7, 9]); //=> 6\n *      R.mean([]); //=> NaN\n */\n\nvar mean =\n/*#__PURE__*/\n_curry1(function mean(list) {\n  return sum(list) / list.length;\n});\n\nexport default mean;","import \"core-js/modules/es6.array.sort\";\nimport _curry1 from './internal/_curry1.js';\nimport mean from './mean.js';\n/**\n * Returns the median of the given list of numbers.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list\n * @return {Number}\n * @see R.mean\n * @example\n *\n *      R.median([2, 9, 7]); //=> 7\n *      R.median([7, 2, 10, 9]); //=> 8\n *      R.median([]); //=> NaN\n */\n\nvar median =\n/*#__PURE__*/\n_curry1(function median(list) {\n  var len = list.length;\n\n  if (len === 0) {\n    return NaN;\n  }\n\n  var width = 2 - len % 2;\n  var idx = (len - width) / 2;\n  return mean(Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n  }).slice(idx, idx + width));\n});\n\nexport default median;","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n/**\n * Creates a new function that, when invoked, caches the result of calling `fn`\n * for a given argument set and returns the result. Subsequent calls to the\n * memoized `fn` with the same argument set will not result in an additional\n * call to `fn`; instead, the cached result for that set of arguments will be\n * returned.\n *\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (*... -> String) -> (*... -> a) -> (*... -> a)\n * @param {Function} fn The function to generate the cache key.\n * @param {Function} fn The function to memoize.\n * @return {Function} Memoized version of `fn`.\n * @example\n *\n *      let count = 0;\n *      const factorial = R.memoizeWith(R.identity, n => {\n *        count += 1;\n *        return R.product(R.range(1, n + 1));\n *      });\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      factorial(5); //=> 120\n *      count; //=> 1\n */\n\nvar memoizeWith =\n/*#__PURE__*/\n_curry2(function memoizeWith(mFn, fn) {\n  var cache = {};\n  return _arity(fn.length, function () {\n    var key = mFn.apply(this, arguments);\n\n    if (!_has(key, cache)) {\n      cache[key] = fn.apply(this, arguments);\n    }\n\n    return cache[key];\n  });\n});\n\nexport default memoizeWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default merge;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\nvar mergeAll =\n/*#__PURE__*/\n_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\n\nexport default mergeAll;","import _curry3 from './internal/_curry3.js';\nimport _has from './internal/_has.js';\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\nvar mergeWithKey =\n/*#__PURE__*/\n_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\n\nexport default mergeWithKey;","import _curry3 from './internal/_curry3.js';\nimport _isObject from './internal/_isObject.js';\nimport mergeWithKey from './mergeWithKey.js';\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWithKey =\n/*#__PURE__*/\n_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWithKey;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepRight, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepLeft({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                      { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 10, contact: { email: 'moo@example.com' }}\n */\n\nvar mergeDeepLeft =\n/*#__PURE__*/\n_curry2(function mergeDeepLeft(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return lVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepLeft;","import _curry2 from './internal/_curry2.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\nvar mergeDeepRight =\n/*#__PURE__*/\n_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\n\nexport default mergeDeepRight;","import _curry3 from './internal/_curry3.js';\nimport mergeDeepWithKey from './mergeDeepWithKey.js';\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to associated values using the\n *   resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepWith(R.concat,\n *                      { a: true, c: { values: [10, 20] }},\n *                      { b: true, c: { values: [15, 35] }});\n *      //=> { a: true, b: true, c: { values: [10, 20, 15, 35] }}\n */\n\nvar mergeDeepWith =\n/*#__PURE__*/\n_curry3(function mergeDeepWith(fn, lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return fn(lVal, rVal);\n  }, lObj, rObj);\n});\n\nexport default mergeDeepWith;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the first object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepLeft, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeLeft({ 'age': 40 }, { 'name': 'fred', 'age': 10 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const resetToDefault = R.mergeLeft({x: 0});\n *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeLeft(a, b) = {...b, ...a}\n */\n\nvar mergeLeft =\n/*#__PURE__*/\n_curry2(function mergeLeft(l, r) {\n  return _objectAssign({}, r, l);\n});\n\nexport default mergeLeft;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeLeft, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @example\n *\n *      R.mergeRight({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.mergeRight({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.mergeRight(a, b) = {...a, ...b}\n */\n\nvar mergeRight =\n/*#__PURE__*/\n_curry2(function mergeRight(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default mergeRight;","import _curry3 from './internal/_curry3.js';\nimport mergeWithKey from './mergeWithKey.js';\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the values\n * associated with the key in each object, with the result being used as the\n * value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWith, R.merge, R.mergeWithKey\n * @example\n *\n *      R.mergeWith(R.concat,\n *                  { a: true, values: [10, 20] },\n *                  { b: true, values: [15, 35] });\n *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n */\n\nvar mergeWith =\n/*#__PURE__*/\n_curry3(function mergeWith(fn, l, r) {\n  return mergeWithKey(function (_, _l, _r) {\n    return fn(_l, _r);\n  }, l, r);\n});\n\nexport default mergeWith;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns the smaller of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.minBy, R.max\n * @example\n *\n *      R.min(789, 123); //=> 123\n *      R.min('a', 'b'); //=> 'a'\n */\n\nvar min =\n/*#__PURE__*/\n_curry2(function min(a, b) {\n  return b < a ? b : a;\n});\n\nexport default min;","import _curry3 from './internal/_curry3.js';\n/**\n * Takes a function and two values, and returns whichever value produces the\n * smaller result when passed to the provided function.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Relation\n * @sig Ord b => (a -> b) -> a -> a -> a\n * @param {Function} f\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.min, R.maxBy\n * @example\n *\n *      //  square :: Number -> Number\n *      const square = n => n * n;\n *\n *      R.minBy(square, -3, 2); //=> 2\n *\n *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n */\n\nvar minBy =\n/*#__PURE__*/\n_curry3(function minBy(f, a, b) {\n  return f(b) < f(a) ? b : a;\n});\n\nexport default minBy;","import _curry2 from './internal/_curry2.js';\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;","import _curry3 from './internal/_curry3.js';\n/**\n * Move an item, at index `from`, to index `to`, in a list of elements.\n * A new list will be created containing the new elements order.\n *\n * @func\n * @memberOf R\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @param {Number} from The source index\n * @param {Number} to The destination index\n * @param {Array} list The list which will serve to realise the move\n * @return {Array} The new list reordered\n * @example\n *\n *      R.move(0, 2, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['b', 'c', 'a', 'd', 'e', 'f']\n *      R.move(-1, 0, ['a', 'b', 'c', 'd', 'e', 'f']); //=> ['f', 'a', 'b', 'c', 'd', 'e'] list rotation\n */\n\nvar move =\n/*#__PURE__*/\n_curry3(function (from, to, list) {\n  var length = list.length;\n  var result = list.slice();\n  var positiveFrom = from < 0 ? length + from : from;\n  var positiveTo = to < 0 ? length + to : to;\n  var item = result.splice(positiveFrom, 1);\n  return positiveFrom < 0 || positiveFrom >= list.length || positiveTo < 0 || positiveTo >= list.length ? list : [].concat(result.slice(0, positiveTo)).concat(item).concat(result.slice(positiveTo, list.length));\n});\n\nexport default move;","import _curry2 from './internal/_curry2.js';\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;","import _curry1 from './internal/_curry1.js';\n/**\n * Negates its argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Math\n * @sig Number -> Number\n * @param {Number} n\n * @return {Number}\n * @example\n *\n *      R.negate(42); //=> -42\n */\n\nvar negate =\n/*#__PURE__*/\n_curry1(function negate(n) {\n  return -n;\n});\n\nexport default negate;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport all from './all.js';\n/**\n * Returns `true` if no elements of the list match the predicate, `false`\n * otherwise.\n *\n * Dispatches to the `all` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> Boolean\n * @param {Function} fn The predicate function.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n * @see R.all, R.any\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *      const isOdd = n => n % 2 === 1;\n *\n *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n *      R.none(isOdd, [1, 3, 5, 7, 8, 11]); //=> false\n */\n\nvar none =\n/*#__PURE__*/\n_curry2(function none(fn, input) {\n  return all(_complement(fn), input);\n});\n\nexport default none;","import _curry1 from './internal/_curry1.js';\nimport curryN from './curryN.js';\nimport nth from './nth.js';\n/**\n * Returns a function which returns its nth argument.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig Number -> *... -> *\n * @param {Number} n\n * @return {Function}\n * @example\n *\n *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n * @symb R.nthArg(-1)(a, b, c) = c\n * @symb R.nthArg(0)(a, b, c) = a\n * @symb R.nthArg(1)(a, b, c) = b\n */\n\nvar nthArg =\n/*#__PURE__*/\n_curry1(function nthArg(n) {\n  var arity = n < 0 ? 1 : n + 1;\n  return curryN(arity, function () {\n    return nth(n, arguments);\n  });\n});\n\nexport default nthArg;","import _curry3 from './internal/_curry3.js';\n/**\n * `o` is a curried composition function that returns a unary function.\n * Like [`compose`](#compose), `o` performs right-to-left function composition.\n * Unlike [`compose`](#compose), the rightmost function passed to `o` will be\n * invoked with only one argument. Also, unlike [`compose`](#compose), `o` is\n * limited to accepting only 2 unary functions. The name o was chosen because\n * of its similarity to the mathematical composition operator ∘.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Function\n * @sig (b -> c) -> (a -> b) -> a -> c\n * @param {Function} f\n * @param {Function} g\n * @return {Function}\n * @see R.compose, R.pipe\n * @example\n *\n *      const classyGreeting = name => \"The name's \" + name.last + \", \" + name.first + \" \" + name.last\n *      const yellGreeting = R.o(R.toUpper, classyGreeting);\n *      yellGreeting({first: 'James', last: 'Bond'}); //=> \"THE NAME'S BOND, JAMES BOND\"\n *\n *      R.o(R.multiply(10), R.add(10))(-4) //=> 60\n *\n * @symb R.o(f, g, x) = f(g(x))\n */\n\nvar o =\n/*#__PURE__*/\n_curry3(function o(f, g, x) {\n  return f(g(x));\n});\n\nexport default o;","export default function _of(x) {\n  return [x];\n}","import _curry1 from './internal/_curry1.js';\nimport _of from './internal/_of.js';\n/**\n * Returns a singleton array containing the value provided.\n *\n * Note this `of` is different from the ES6 `of`; See\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category Function\n * @sig a -> [a]\n * @param {*} x any value\n * @return {Array} An array wrapping `x`.\n * @example\n *\n *      R.of(null); //=> [null]\n *      R.of([42]); //=> [[42]]\n */\n\nvar of =\n/*#__PURE__*/\n_curry1(_of);\n\nexport default of;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns a partial copy of an object omitting the keys specified.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [String] -> {String: *} -> {String: *}\n * @param {Array} names an array of String property names to omit from the new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with properties from `names` not on it.\n * @see R.pick\n * @example\n *\n *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n */\n\nvar omit =\n/*#__PURE__*/\n_curry2(function omit(names, obj) {\n  var result = {};\n  var index = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    index[names[idx]] = 1;\n    idx += 1;\n  }\n\n  for (var prop in obj) {\n    if (!index.hasOwnProperty(prop)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default omit;","import _arity from './internal/_arity.js';\nimport _curry1 from './internal/_curry1.js';\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\nvar once =\n/*#__PURE__*/\n_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\n\nexport default once;","import _isFunction from './_isFunction.js';\nimport _toString from './_toString.js';\nexport default function _assertPromise(name, p) {\n  if (p == null || !_isFunction(p.then)) {\n    throw new TypeError('`' + name + '` expected a Promise, received ' + _toString(p, []));\n  }\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n/**\n * Returns the result of applying the onFailure function to the value inside\n * a failed promise. This is useful for handling rejected promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (e -> b) -> (Promise e a) -> (Promise e b)\n * @sig (e -> (Promise f b)) -> (Promise e a) -> (Promise f b)\n * @param {Function} onFailure The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(null, onFailure)`\n * @see R.then\n * @example\n *\n *      var failedFetch = (id) => Promise.reject('bad ID');\n *      var useDefault = () => ({ firstName: 'Bob', lastName: 'Loblaw' })\n *\n *      //recoverFromFailure :: String -> Promise ({firstName, lastName})\n *      var recoverFromFailure = R.pipe(\n *        failedFetch,\n *        R.otherwise(useDefault),\n *        R.then(R.pick(['firstName', 'lastName'])),\n *      );\n *      recoverFromFailure(12345).then(console.log)\n */\n\nvar otherwise =\n/*#__PURE__*/\n_curry2(function otherwise(f, p) {\n  _assertPromise('otherwise', p);\n\n  return p.then(null, f);\n});\n\nexport default otherwise;","import _curry3 from './internal/_curry3.js'; // `Identity` is a functor that holds a single value, where `map` simply\n// transforms the held value with the provided function.\n\nvar Identity = function Identity(x) {\n  return {\n    value: x,\n    map: function map(f) {\n      return Identity(f(x));\n    }\n  };\n};\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the result of applying the given function to\n * the focused value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> (a -> a) -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const headLens = R.lensIndex(0);\n *\n *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n */\n\n\nvar over =\n/*#__PURE__*/\n_curry3(function over(lens, f, x) {\n  // The value returned by the getter function is first transformed with `f`,\n  // then set as the value of an `Identity`. This is then mapped over with the\n  // setter function of the lens.\n  return lens(function (y) {\n    return Identity(f(y));\n  })(x).value;\n});\n\nexport default over;","import _curry2 from './internal/_curry2.js';\n/**\n * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category List\n * @sig a -> b -> (a,b)\n * @param {*} fst\n * @param {*} snd\n * @return {Array}\n * @see R.objOf, R.of\n * @example\n *\n *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n */\n\nvar pair =\n/*#__PURE__*/\n_curry2(function pair(fst, snd) {\n  return [fst, snd];\n});\n\nexport default pair;","import _arity from './_arity.js';\nimport _curry2 from './_curry2.js';\nexport default function _createPartialApplicator(concat) {\n  return _curry2(function (fn, args) {\n    return _arity(Math.max(0, fn.length - args.length), function () {\n      return fn.apply(this, concat(args, arguments));\n    });\n  });\n}","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided initially followed by the arguments provided to `g`.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partialRight, R.curry\n * @example\n *\n *      const multiply2 = (a, b) => a * b;\n *      const double = R.partial(multiply2, [2]);\n *      double(2); //=> 4\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const sayHello = R.partial(greet, ['Hello']);\n *      const sayHelloToMs = R.partial(sayHello, ['Ms.']);\n *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partial(f, [a, b])(c, d) = f(a, b, c, d)\n */\n\nvar partial =\n/*#__PURE__*/\n_createPartialApplicator(_concat);\n\nexport default partial;","import _concat from './internal/_concat.js';\nimport _createPartialApplicator from './internal/_createPartialApplicator.js';\nimport flip from './flip.js';\n/**\n * Takes a function `f` and a list of arguments, and returns a function `g`.\n * When applied, `g` returns the result of applying `f` to the arguments\n * provided to `g` followed by the arguments provided initially.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Function\n * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n * @param {Function} f\n * @param {Array} args\n * @return {Function}\n * @see R.partial\n * @example\n *\n *      const greet = (salutation, title, firstName, lastName) =>\n *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n *\n *      const greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n *\n *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n * @symb R.partialRight(f, [a, b])(c, d) = f(c, d, a, b)\n */\n\nvar partialRight =\n/*#__PURE__*/\n_createPartialApplicator(\n/*#__PURE__*/\nflip(_concat));\n\nexport default partialRight;","import filter from './filter.js';\nimport juxt from './juxt.js';\nimport reject from './reject.js';\n/**\n * Takes a predicate and a list or other `Filterable` object and returns the\n * pair of filterable objects of the same type of elements which do and do not\n * satisfy, the predicate, respectively. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n * @param {Function} pred A predicate to determine which side the element belongs to.\n * @param {Array} filterable the list (or other filterable) to partition.\n * @return {Array} An array, containing first the subset of elements that satisfy the\n *         predicate, and second the subset of elements that do not satisfy.\n * @see R.filter, R.reject\n * @example\n *\n *      R.partition(R.includes('s'), ['sss', 'ttt', 'foo', 'bars']);\n *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n *\n *      R.partition(R.includes('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n */\n\nvar partition =\n/*#__PURE__*/\njuxt([filter, reject]);\nexport default partition;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\nimport path from './path.js';\n/**\n * Determines whether a nested path on an object has a specific value, in\n * [`R.equals`](#equals) terms. Most likely used to filter a list.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Relation\n * @typedefn Idx = String | Int\n * @sig [Idx] -> a -> {a} -> Boolean\n * @param {Array} path The path of the nested property to use\n * @param {*} val The value to compare the nested property with\n * @param {Object} obj The object to check the nested property in\n * @return {Boolean} `true` if the value equals the nested object property,\n *         `false` otherwise.\n * @example\n *\n *      const user1 = { address: { zipCode: 90210 } };\n *      const user2 = { address: { zipCode: 55555 } };\n *      const user3 = { name: 'Bob' };\n *      const users = [ user1, user2, user3 ];\n *      const isFamous = R.pathEq(['address', 'zipCode'], 90210);\n *      R.filter(isFamous, users); //=> [ user1 ]\n */\n\nvar pathEq =\n/*#__PURE__*/\n_curry3(function pathEq(_path, val, obj) {\n  return equals(path(_path, obj), val);\n});\n\nexport default pathEq;","import _curry3 from './internal/_curry3.js';\nimport defaultTo from './defaultTo.js';\nimport path from './path.js';\n/**\n * If the given, non-null object has a value at the given path, returns the\n * value at that path. Otherwise returns the provided default value.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig a -> [Idx] -> {a} -> a\n * @param {*} d The default value.\n * @param {Array} p The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path` of the supplied object or the default value.\n * @example\n *\n *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n */\n\nvar pathOr =\n/*#__PURE__*/\n_curry3(function pathOr(d, p, obj) {\n  return defaultTo(d, path(p, obj));\n});\n\nexport default pathOr;","import _curry3 from './internal/_curry3.js';\nimport path from './path.js';\n/**\n * Returns `true` if the specified object property at given path satisfies the\n * given predicate; `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Logic\n * @typedefn Idx = String | Int\n * @sig (a -> Boolean) -> [Idx] -> {a} -> Boolean\n * @param {Function} pred\n * @param {Array} propPath\n * @param {*} obj\n * @return {Boolean}\n * @see R.propSatisfies, R.path\n * @example\n *\n *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n */\n\nvar pathSatisfies =\n/*#__PURE__*/\n_curry3(function pathSatisfies(pred, propPath, obj) {\n  return propPath.length > 0 && pred(path(propPath, obj));\n});\n\nexport default pathSatisfies;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\nvar pick =\n/*#__PURE__*/\n_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pick;","import _curry2 from './internal/_curry2.js';\n/**\n * Similar to `pick` except that this one includes a `key: undefined` pair for\n * properties that don't exist.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.pick\n * @example\n *\n *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n */\n\nvar pickAll =\n/*#__PURE__*/\n_curry2(function pickAll(names, obj) {\n  var result = {};\n  var idx = 0;\n  var len = names.length;\n\n  while (idx < len) {\n    var name = names[idx];\n    result[name] = obj[name];\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default pickAll;","import _curry2 from './internal/_curry2.js';\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\nvar pickBy =\n/*#__PURE__*/\n_curry2(function pickBy(test, obj) {\n  var result = {};\n\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n\n  return result;\n});\n\nexport default pickBy;","import composeK from './composeK.js';\nimport reverse from './reverse.js';\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\n\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n\n  return composeK.apply(this, reverse(arguments));\n}","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns a new list with the given element at the front, followed by the\n * contents of the list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> [a]\n * @param {*} el The item to add to the head of the output list.\n * @param {Array} list The array to add to the tail of the output list.\n * @return {Array} A new array.\n * @see R.append\n * @example\n *\n *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n */\n\nvar prepend =\n/*#__PURE__*/\n_curry2(function prepend(el, list) {\n  return _concat([el], list);\n});\n\nexport default prepend;","import multiply from './multiply.js';\nimport reduce from './reduce.js';\n/**\n * Multiplies together all the elements of a list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig [Number] -> Number\n * @param {Array} list An array of numbers\n * @return {Number} The product of all the numbers in the list.\n * @see R.reduce\n * @example\n *\n *      R.product([2,4,6,8,100,1]); //=> 38400\n */\n\nvar product =\n/*#__PURE__*/\nreduce(multiply, 1);\nexport default product;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n/**\n * Accepts a function `fn` and a list of transformer functions and returns a\n * new curried function. When the new function is invoked, it calls the\n * function `fn` with parameters consisting of the result of calling each\n * supplied handler on successive arguments to the new function.\n *\n * If more arguments are passed to the returned function than transformer\n * functions, those arguments are passed directly to `fn` as additional\n * parameters. If you expect additional arguments that don't need to be\n * transformed, although you can ignore them, it's best to pass an identity\n * function so that the new function reports the correct arity.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((x1, x2, ...) -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n * @param {Function} fn The function to wrap.\n * @param {Array} transformers A list of transformer functions\n * @return {Function} The wrapped function.\n * @see R.converge\n * @example\n *\n *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))\n */\n\nvar useWith =\n/*#__PURE__*/\n_curry2(function useWith(fn, transformers) {\n  return curryN(transformers.length, function () {\n    var args = [];\n    var idx = 0;\n\n    while (idx < transformers.length) {\n      args.push(transformers[idx].call(this, arguments[idx]));\n      idx += 1;\n    }\n\n    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));\n  });\n});\n\nexport default useWith;","import _map from './internal/_map.js';\nimport identity from './identity.js';\nimport pickAll from './pickAll.js';\nimport useWith from './useWith.js';\n/**\n * Reasonable analog to SQL `select` statement.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @category Relation\n * @sig [k] -> [{k: v}] -> [{k: v}]\n * @param {Array} props The property names to project\n * @param {Array} objs The objects to query\n * @return {Array} An array of objects with just the `props` properties.\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n *      const kids = [abby, fred];\n *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n */\n\nvar project =\n/*#__PURE__*/\nuseWith(_map, [pickAll, identity]); // passing `identity` gives correct arity\n\nexport default project;","import _curry3 from './internal/_curry3.js';\nimport equals from './equals.js';\n/**\n * Returns `true` if the specified object property is equal, in\n * [`R.equals`](#equals) terms, to the given value; `false` otherwise.\n * You can test multiple properties with [`R.whereEq`](#whereEq).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig String -> a -> Object -> Boolean\n * @param {String} name\n * @param {*} val\n * @param {*} obj\n * @return {Boolean}\n * @see R.whereEq, R.propSatisfies, R.equals\n * @example\n *\n *      const abby = {name: 'Abby', age: 7, hair: 'blond'};\n *      const fred = {name: 'Fred', age: 12, hair: 'brown'};\n *      const rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n *      const alois = {name: 'Alois', age: 15, disposition: 'surly'};\n *      const kids = [abby, fred, rusty, alois];\n *      const hasBrownHair = R.propEq('hair', 'brown');\n *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n */\n\nvar propEq =\n/*#__PURE__*/\n_curry3(function propEq(name, val, obj) {\n  return equals(val, obj[name]);\n});\n\nexport default propEq;","import _curry3 from './internal/_curry3.js';\nimport is from './is.js';\n/**\n * Returns `true` if the specified object property is of the given type;\n * `false` otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Type\n * @sig Type -> String -> Object -> Boolean\n * @param {Function} type\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.is, R.propSatisfies\n * @example\n *\n *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n *      R.propIs(Number, 'x', {});            //=> false\n */\n\nvar propIs =\n/*#__PURE__*/\n_curry3(function propIs(type, name, obj) {\n  return is(type, obj[name]);\n});\n\nexport default propIs;","import _curry3 from './internal/_curry3.js';\nimport pathOr from './pathOr.js';\n/**\n * If the given, non-null object has an own property with the specified name,\n * returns the value of that property. Otherwise returns the provided default\n * value.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Object\n * @sig a -> String -> Object -> a\n * @param {*} val The default value.\n * @param {String} p The name of the property to return.\n * @param {Object} obj The object to query.\n * @return {*} The value of given property of the supplied object or the default value.\n * @example\n *\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const favorite = R.prop('favoriteLibrary');\n *      const favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n *\n *      favorite(alice);  //=> undefined\n *      favoriteWithDefault(alice);  //=> 'Ramda'\n */\n\nvar propOr =\n/*#__PURE__*/\n_curry3(function propOr(val, p, obj) {\n  return pathOr(val, [p], obj);\n});\n\nexport default propOr;","import _curry3 from './internal/_curry3.js';\n/**\n * Returns `true` if the specified object property satisfies the given\n * predicate; `false` otherwise. You can test multiple properties with\n * [`R.where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Logic\n * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n * @param {Function} pred\n * @param {String} name\n * @param {*} obj\n * @return {Boolean}\n * @see R.where, R.propEq, R.propIs\n * @example\n *\n *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n */\n\nvar propSatisfies =\n/*#__PURE__*/\n_curry3(function propSatisfies(pred, name, obj) {\n  return pred(obj[name]);\n});\n\nexport default propSatisfies;","import _curry2 from './internal/_curry2.js';\n/**\n * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> [v]\n * @param {Array} ps The property names to fetch\n * @param {Object} obj The object to query\n * @return {Array} The corresponding values or partially applied function.\n * @example\n *\n *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n *\n *      const fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n */\n\nvar props =\n/*#__PURE__*/\n_curry2(function props(ps, obj) {\n  var len = ps.length;\n  var out = [];\n  var idx = 0;\n\n  while (idx < len) {\n    out[idx] = obj[ps[idx]];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default props;","import _curry2 from './internal/_curry2.js';\nimport _isNumber from './internal/_isNumber.js';\n/**\n * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> Number -> [Number]\n * @param {Number} from The first number in the list.\n * @param {Number} to One more than the last number in the list.\n * @return {Array} The list of numbers in the set `[a, b)`.\n * @example\n *\n *      R.range(1, 5);    //=> [1, 2, 3, 4]\n *      R.range(50, 53);  //=> [50, 51, 52]\n */\n\nvar range =\n/*#__PURE__*/\n_curry2(function range(from, to) {\n  if (!(_isNumber(from) && _isNumber(to))) {\n    throw new TypeError('Both arguments to range must be numbers');\n  }\n\n  var result = [];\n  var n = from;\n\n  while (n < to) {\n    result.push(n);\n    n += 1;\n  }\n\n  return result;\n});\n\nexport default range;","import _curry3 from './internal/_curry3.js';\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * Similar to [`reduce`](#reduce), except moves through the input list from the\n * right to the left.\n *\n * The iterator function receives two values: *(value, acc)*, while the arguments'\n * order of `reduce`'s iterator function is *(acc, value)*.\n *\n * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduceRight` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> b) -> b -> [a] -> b\n * @param {Function} fn The iterator function. Receives two values, the current element from the array\n *        and the accumulator.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.addIndex\n * @example\n *\n *      R.reduceRight(R.subtract, 0, [1, 2, 3, 4]) // => (1 - (2 - (3 - (4 - 0)))) = -2\n *      //    -               -2\n *      //   / \\              / \\\n *      //  1   -            1   3\n *      //     / \\              / \\\n *      //    2   -     ==>    2  -1\n *      //       / \\              / \\\n *      //      3   -            3   4\n *      //         / \\              / \\\n *      //        4   0            4   0\n *\n * @symb R.reduceRight(f, a, [b, c, d]) = f(b, f(c, f(d, a)))\n */\n\nvar reduceRight =\n/*#__PURE__*/\n_curry3(function reduceRight(fn, acc, list) {\n  var idx = list.length - 1;\n\n  while (idx >= 0) {\n    acc = fn(list[idx], acc);\n    idx -= 1;\n  }\n\n  return acc;\n});\n\nexport default reduceRight;","import _curryN from './internal/_curryN.js';\nimport _reduce from './internal/_reduce.js';\nimport _reduced from './internal/_reduced.js';\n/**\n * Like [`reduce`](#reduce), `reduceWhile` returns a single item by iterating\n * through the list, successively calling the iterator function. `reduceWhile`\n * also takes a predicate that is evaluated before each step. If the predicate\n * returns `false`, it \"short-circuits\" the iteration and returns the current\n * value of the accumulator.\n *\n * @func\n * @memberOf R\n * @since v0.22.0\n * @category List\n * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} pred The predicate. It is passed the accumulator and the\n *        current element.\n * @param {Function} fn The iterator function. Receives two values, the\n *        accumulator and the current element.\n * @param {*} a The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced\n * @example\n *\n *      const isOdd = (acc, x) => x % 2 === 1;\n *      const xs = [1, 3, 5, 60, 777, 800];\n *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n *\n *      const ys = [2, 4, 6]\n *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n */\n\nvar reduceWhile =\n/*#__PURE__*/\n_curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n  return _reduce(function (acc, x) {\n    return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n  }, a, list);\n});\n\nexport default reduceWhile;","import _curry1 from './internal/_curry1.js';\nimport _reduced from './internal/_reduced.js';\n/**\n * Returns a value wrapped to indicate that it is the final value of the reduce\n * and transduce functions. The returned value should be considered a black\n * box: the internal structure is not guaranteed to be stable.\n *\n * Note: this optimization is only available to the below functions:\n * - [`reduce`](#reduce)\n * - [`reduceWhile`](#reduceWhile)\n * - [`transduce`](#transduce)\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category List\n * @sig a -> *\n * @param {*} x The final value of the reduce.\n * @return {*} The wrapped value.\n * @see R.reduce, R.reduceWhile, R.transduce\n * @example\n *\n *     R.reduce(\n *       (acc, item) => item > 3 ? R.reduced(acc) : acc.concat(item),\n *       [],\n *       [1, 2, 3, 4, 5]) // [1, 2, 3]\n */\n\nvar reduced =\n/*#__PURE__*/\n_curry1(_reduced);\n\nexport default reduced;","import \"core-js/modules/es6.number.constructor\";\nimport _curry2 from './internal/_curry2.js';\n/**\n * Calls an input function `n` times, returning an array containing the results\n * of those function calls.\n *\n * `fn` is passed one argument: The current value of `n`, which begins at `0`\n * and is gradually incremented to `n - 1`.\n *\n * @func\n * @memberOf R\n * @since v0.2.3\n * @category List\n * @sig (Number -> a) -> Number -> [a]\n * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n * @return {Array} An array containing the return values of all calls to `fn`.\n * @see R.repeat\n * @example\n *\n *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n * @symb R.times(f, 0) = []\n * @symb R.times(f, 1) = [f(0)]\n * @symb R.times(f, 2) = [f(0), f(1)]\n */\n\nvar times =\n/*#__PURE__*/\n_curry2(function times(fn, n) {\n  var len = Number(n);\n  var idx = 0;\n  var list;\n\n  if (len < 0 || isNaN(len)) {\n    throw new RangeError('n must be a non-negative number');\n  }\n\n  list = new Array(len);\n\n  while (idx < len) {\n    list[idx] = fn(idx);\n    idx += 1;\n  }\n\n  return list;\n});\n\nexport default times;","import _curry2 from './internal/_curry2.js';\nimport always from './always.js';\nimport times from './times.js';\n/**\n * Returns a fixed list of size `n` containing a specified identical value.\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category List\n * @sig a -> n -> [a]\n * @param {*} value The value to repeat.\n * @param {Number} n The desired size of the output list.\n * @return {Array} A new array containing `n` `value`s.\n * @see R.times\n * @example\n *\n *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n *\n *      const obj = {};\n *      const repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n * @symb R.repeat(a, 0) = []\n * @symb R.repeat(a, 1) = [a]\n * @symb R.repeat(a, 2) = [a, a]\n */\n\nvar repeat =\n/*#__PURE__*/\n_curry2(function repeat(value, n) {\n  return times(always(value), n);\n});\n\nexport default repeat;","import \"core-js/modules/es6.regexp.replace\";\nimport _curry3 from './internal/_curry3.js';\n/**\n * Replace a substring or regex match in a string with a replacement.\n *\n * The first two parameters correspond to the parameters of the\n * `String.prototype.replace()` function, so the second parameter can also be a\n * function.\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category String\n * @sig RegExp|String -> String -> String -> String\n * @param {RegExp|String} pattern A regular expression or a substring to match.\n * @param {String} replacement The string to replace the matches with.\n * @param {String} str The String to do the search and replacement in.\n * @return {String} The result.\n * @example\n *\n *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n *\n *      // Use the \"g\" (global) flag to replace all occurrences:\n *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n */\n\nvar replace =\n/*#__PURE__*/\n_curry3(function replace(regex, replacement, str) {\n  return str.replace(regex, replacement);\n});\n\nexport default replace;","import _curry3 from './internal/_curry3.js';\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\n\nvar scan =\n/*#__PURE__*/\n_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default scan;","import _curry2 from './internal/_curry2.js';\nimport ap from './ap.js';\nimport map from './map.js';\nimport prepend from './prepend.js';\nimport reduceRight from './reduceRight.js';\n/**\n * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n * Applicative of Traversable.\n *\n * Dispatches to the `sequence` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n * @param {Function} of\n * @param {*} traversable\n * @return {*}\n * @see R.traverse\n * @example\n *\n *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n *\n *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n */\n\nvar sequence =\n/*#__PURE__*/\n_curry2(function sequence(of, traversable) {\n  return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (x, acc) {\n    return ap(map(prepend, x), acc);\n  }, of([]), traversable);\n});\n\nexport default sequence;","import _curry3 from './internal/_curry3.js';\nimport always from './always.js';\nimport over from './over.js';\n/**\n * Returns the result of \"setting\" the portion of the given data structure\n * focused by the given lens to the given value.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> a -> s -> s\n * @param {Lens} lens\n * @param {*} v\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n */\n\nvar set =\n/*#__PURE__*/\n_curry3(function set(lens, v, x) {\n  return over(lens, always(v), x);\n});\n\nexport default set;","import \"core-js/modules/es6.array.sort\";\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns a copy of the list, sorted according to the comparator function,\n * which should accept two values at a time and return a negative number if the\n * first value is smaller, a positive number if it's larger, and zero if they\n * are equal. Please note that this is a **copy** of the list. It does not\n * modify the original.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, a) -> Number) -> [a] -> [a]\n * @param {Function} comparator A sorting function :: a -> b -> Int\n * @param {Array} list The list to sort\n * @return {Array} a new array with its elements sorted by the comparator function.\n * @example\n *\n *      const diff = function(a, b) { return a - b; };\n *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n */\n\nvar sort =\n/*#__PURE__*/\n_curry2(function sort(comparator, list) {\n  return Array.prototype.slice.call(list, 0).sort(comparator);\n});\n\nexport default sort;","import invoker from './invoker.js';\n/**\n * Splits a string into an array of strings based on the given\n * separator.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category String\n * @sig (String | RegExp) -> String -> [String]\n * @param {String|RegExp} sep The pattern.\n * @param {String} str The string to separate into an array.\n * @return {Array} The array of strings from `str` separated by `str`.\n * @see R.join\n * @example\n *\n *      const pathComponents = R.split('/');\n *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n *\n *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n */\n\nvar split =\n/*#__PURE__*/\ninvoker(1, 'split');\nexport default split;","import _curry2 from './internal/_curry2.js';\nimport length from './length.js';\nimport slice from './slice.js';\n/**\n * Splits a given list or string at a given index.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig Number -> [a] -> [[a], [a]]\n * @sig Number -> String -> [String, String]\n * @param {Number} index The index where the array/string is split.\n * @param {Array|String} array The array/string to be split.\n * @return {Array}\n * @example\n *\n *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n */\n\nvar splitAt =\n/*#__PURE__*/\n_curry2(function splitAt(index, array) {\n  return [slice(0, index, array), slice(index, length(array), array)];\n});\n\nexport default splitAt;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n/**\n * Splits a collection into slices of the specified length.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [[a]]\n * @sig Number -> String -> [String]\n * @param {Number} n\n * @param {Array} list\n * @return {Array}\n * @example\n *\n *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n */\n\nvar splitEvery =\n/*#__PURE__*/\n_curry2(function splitEvery(n, list) {\n  if (n <= 0) {\n    throw new Error('First argument to splitEvery must be a positive integer');\n  }\n\n  var result = [];\n  var idx = 0;\n\n  while (idx < list.length) {\n    result.push(slice(idx, idx += n, list));\n  }\n\n  return result;\n});\n\nexport default splitEvery;","import _curry2 from './internal/_curry2.js';\n/**\n * Takes a list and a predicate and returns a pair of lists with the following properties:\n *\n *  - the result of concatenating the two output lists is equivalent to the input list;\n *  - none of the elements of the first output list satisfies the predicate; and\n *  - if the second output list is non-empty, its first element satisfies the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n * @param {Function} pred The predicate that determines where the array is split.\n * @param {Array} list The array to be split.\n * @return {Array}\n * @example\n *\n *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n */\n\nvar splitWhen =\n/*#__PURE__*/\n_curry2(function splitWhen(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var prefix = [];\n\n  while (idx < len && !pred(list[idx])) {\n    prefix.push(list[idx]);\n    idx += 1;\n  }\n\n  return [prefix, Array.prototype.slice.call(list, idx)];\n});\n\nexport default splitWhen;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport take from './take.js';\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\n\nvar startsWith =\n/*#__PURE__*/\n_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\n\nexport default startsWith;","import \"core-js/modules/es6.number.constructor\";\nimport _curry2 from './internal/_curry2.js';\n/**\n * Subtracts its second argument from its first argument.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a - b`.\n * @see R.add\n * @example\n *\n *      R.subtract(10, 8); //=> 2\n *\n *      const minus5 = R.subtract(R.__, 5);\n *      minus5(17); //=> 12\n *\n *      const complementaryAngle = R.subtract(90);\n *      complementaryAngle(30); //=> 60\n *      complementaryAngle(72); //=> 18\n */\n\nvar subtract =\n/*#__PURE__*/\n_curry2(function subtract(a, b) {\n  return Number(a) - Number(b);\n});\n\nexport default subtract;","import _curry2 from './internal/_curry2.js';\nimport concat from './concat.js';\nimport difference from './difference.js';\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\n\nvar symmetricDifference =\n/*#__PURE__*/\n_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\n\nexport default symmetricDifference;","import _curry3 from './internal/_curry3.js';\nimport concat from './concat.js';\nimport differenceWith from './differenceWith.js';\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both. Duplication is determined according to the value\n * returned by applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [a] -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifference, R.difference, R.differenceWith\n * @example\n *\n *      const eqA = R.eqBy(R.prop('a'));\n *      const l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n *      const l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n */\n\nvar symmetricDifferenceWith =\n/*#__PURE__*/\n_curry3(function symmetricDifferenceWith(pred, list1, list2) {\n  return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n});\n\nexport default symmetricDifferenceWith;","import _curry2 from './internal/_curry2.js';\nimport slice from './slice.js';\n/**\n * Returns a new list containing the last `n` elements of a given list, passing\n * each value to the supplied predicate function, and terminating when the\n * predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropLastWhile, R.addIndex\n * @example\n *\n *      const isNotOne = x => x !== 1;\n *\n *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n *\n *      R.takeLastWhile(x => x !== 'R' , 'Ramda'); //=> 'amda'\n */\n\nvar takeLastWhile =\n/*#__PURE__*/\n_curry2(function takeLastWhile(fn, xs) {\n  var idx = xs.length - 1;\n\n  while (idx >= 0 && fn(xs[idx])) {\n    idx -= 1;\n  }\n\n  return slice(idx + 1, Infinity, xs);\n});\n\nexport default takeLastWhile;","import _curry2 from './_curry2.js';\nimport _reduced from './_reduced.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTakeWhile =\n/*#__PURE__*/\nfunction () {\n  function XTakeWhile(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n  XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n  };\n\n  return XTakeWhile;\n}();\n\nvar _xtakeWhile =\n/*#__PURE__*/\n_curry2(function _xtakeWhile(f, xf) {\n  return new XTakeWhile(f, xf);\n});\n\nexport default _xtakeWhile;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtakeWhile from './internal/_xtakeWhile.js';\nimport slice from './slice.js';\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\n\nvar takeWhile =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return slice(0, idx, xs);\n}));\n\nexport default takeWhile;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XTap =\n/*#__PURE__*/\nfunction () {\n  function XTap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XTap.prototype['@@transducer/init'] = _xfBase.init;\n  XTap.prototype['@@transducer/result'] = _xfBase.result;\n\n  XTap.prototype['@@transducer/step'] = function (result, input) {\n    this.f(input);\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XTap;\n}();\n\nvar _xtap =\n/*#__PURE__*/\n_curry2(function _xtap(f, xf) {\n  return new XTap(f, xf);\n});\n\nexport default _xtap;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtap from './internal/_xtap.js';\n/**\n * Runs the given function with the supplied object, then returns the object.\n *\n * Acts as a transducer if a transformer is given as second parameter.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a -> *) -> a -> a\n * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n * @param {*} x\n * @return {*} `x`.\n * @example\n *\n *      const sayX = x => console.log('x is ' + x);\n *      R.tap(sayX, 100); //=> 100\n *      // logs 'x is 100'\n * @symb R.tap(f, a) = a\n */\n\nvar tap =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable([], _xtap, function tap(fn, x) {\n  fn(x);\n  return x;\n}));\n\nexport default tap;","import _cloneRegExp from './internal/_cloneRegExp.js';\nimport _curry2 from './internal/_curry2.js';\nimport _isRegExp from './internal/_isRegExp.js';\nimport toString from './toString.js';\n/**\n * Determines whether a given string matches a given regular expression.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category String\n * @sig RegExp -> String -> Boolean\n * @param {RegExp} pattern\n * @param {String} str\n * @return {Boolean}\n * @see R.match\n * @example\n *\n *      R.test(/^x/, 'xyz'); //=> true\n *      R.test(/^y/, 'xyz'); //=> false\n */\n\nvar test =\n/*#__PURE__*/\n_curry2(function test(pattern, str) {\n  if (!_isRegExp(pattern)) {\n    throw new TypeError('‘test’ requires a value of type RegExp as its first argument; received ' + toString(pattern));\n  }\n\n  return _cloneRegExp(pattern).test(str);\n});\n\nexport default test;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isRegExp(x) {\n  return Object.prototype.toString.call(x) === '[object RegExp]';\n}","import _curry2 from './internal/_curry2.js';\nimport _assertPromise from './internal/_assertPromise.js';\n/**\n * Returns the result of applying the onSuccess function to the value inside\n * a successfully resolved promise. This is useful for working with promises\n * inside function compositions.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig (a -> b) -> (Promise e a) -> (Promise e b)\n * @sig (a -> (Promise e b)) -> (Promise e a) -> (Promise e b)\n * @param {Function} onSuccess The function to apply. Can return a value or a promise of a value.\n * @param {Promise} p\n * @return {Promise} The result of calling `p.then(onSuccess)`\n * @see R.otherwise\n * @example\n *\n *      var makeQuery = (email) => ({ query: { email }});\n *\n *      //getMemberName :: String -> Promise ({firstName, lastName})\n *      var getMemberName = R.pipe(\n *        makeQuery,\n *        fetchMember,\n *        R.then(R.pick(['firstName', 'lastName']))\n *      );\n */\n\nvar then =\n/*#__PURE__*/\n_curry2(function then(f, p) {\n  _assertPromise('then', p);\n\n  return p.then(f);\n});\n\nexport default then;","import invoker from './invoker.js';\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\nvar toLower =\n/*#__PURE__*/\ninvoker(0, 'toLowerCase');\nexport default toLower;","import _curry1 from './internal/_curry1.js';\nimport _has from './internal/_has.js';\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\nvar toPairs =\n/*#__PURE__*/\n_curry1(function toPairs(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n\n  return pairs;\n});\n\nexport default toPairs;","import _curry1 from './internal/_curry1.js';\n/**\n * Converts an object into an array of key, value arrays. The object's own\n * properties and prototype properties are used. Note that the order of the\n * output array is not guaranteed to be consistent across different JS\n * platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own\n *         and prototype properties.\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n */\n\nvar toPairsIn =\n/*#__PURE__*/\n_curry1(function toPairsIn(obj) {\n  var pairs = [];\n\n  for (var prop in obj) {\n    pairs[pairs.length] = [prop, obj[prop]];\n  }\n\n  return pairs;\n});\n\nexport default toPairsIn;","import invoker from './invoker.js';\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\nvar toUpper =\n/*#__PURE__*/\ninvoker(0, 'toUpperCase');\nexport default toUpper;","import _reduce from './internal/_reduce.js';\nimport _xwrap from './internal/_xwrap.js';\nimport curryN from './curryN.js';\n/**\n * Initializes a transducer using supplied iterator function. Returns a single\n * item by iterating through the list, successively calling the transformed\n * iterator function and passing it an accumulator value and the current value\n * from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It will be\n * wrapped as a transformer to initialize the transducer. A transformer can be\n * passed directly in place of an iterator function. In both cases, iteration\n * may be stopped early with the [`R.reduced`](#reduced) function.\n *\n * A transducer is a function that accepts a transformer and returns a\n * transformer and can be composed directly.\n *\n * A transformer is an an object that provides a 2-arity reducing iterator\n * function, step, 0-arity initial value function, init, and 1-arity result\n * extraction function, result. The step function is used as the iterator\n * function in reduce. The result function is used to convert the final\n * accumulator into the return type and in most cases is\n * [`R.identity`](#identity). The init function can be used to provide an\n * initial accumulator, but is ignored by transduce.\n *\n * The iteration is performed with [`R.reduce`](#reduce) after initializing the transducer.\n *\n * @func\n * @memberOf R\n * @since v0.12.0\n * @category List\n * @sig (c -> c) -> ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array. Wrapped as transformer, if necessary, and used to\n *        initialize the transducer\n * @param {*} acc The initial accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduce, R.reduced, R.into\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const transducer = R.compose(R.map(R.add(1)), R.take(2));\n *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n *\n *      const isOdd = (x) => x % 2 === 1;\n *      const firstOddTransducer = R.compose(R.filter(isOdd), R.take(1));\n *      R.transduce(firstOddTransducer, R.flip(R.append), [], R.range(0, 100)); //=> [1]\n */\n\nvar transduce =\n/*#__PURE__*/\ncurryN(4, function transduce(xf, fn, acc, list) {\n  return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n});\nexport default transduce;","import _curry1 from './internal/_curry1.js';\n/**\n * Transposes the rows and columns of a 2D list.\n * When passed a list of `n` lists of length `x`,\n * returns a list of `x` lists of length `n`.\n *\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [[a]] -> [[a]]\n * @param {Array} list A 2D list\n * @return {Array} A 2D list\n * @example\n *\n *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n *\n *      // If some of the rows are shorter than the following rows, their elements are skipped:\n *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n * @symb R.transpose([[a], [b], [c]]) = [a, b, c]\n * @symb R.transpose([[a, b], [c, d]]) = [[a, c], [b, d]]\n * @symb R.transpose([[a, b], [c]]) = [[a, c], [b]]\n */\n\nvar transpose =\n/*#__PURE__*/\n_curry1(function transpose(outerlist) {\n  var i = 0;\n  var result = [];\n\n  while (i < outerlist.length) {\n    var innerlist = outerlist[i];\n    var j = 0;\n\n    while (j < innerlist.length) {\n      if (typeof result[j] === 'undefined') {\n        result[j] = [];\n      }\n\n      result[j].push(innerlist[j]);\n      j += 1;\n    }\n\n    i += 1;\n  }\n\n  return result;\n});\n\nexport default transpose;","import _curry3 from './internal/_curry3.js';\nimport map from './map.js';\nimport sequence from './sequence.js';\n/**\n * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n * into an Applicative of Traversable.\n *\n * Dispatches to the `traverse` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n * @param {Function} of\n * @param {Function} f\n * @param {*} traversable\n * @return {*}\n * @see R.sequence\n * @example\n *\n *      // Returns `Maybe.Nothing` if the given divisor is `0`\n *      const safeDiv = n => d => d === 0 ? Maybe.Nothing() : Maybe.Just(n / d)\n *\n *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Maybe.Just([5, 2.5, 2])\n *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Maybe.Nothing\n */\n\nvar traverse =\n/*#__PURE__*/\n_curry3(function traverse(of, f, traversable) {\n  return typeof traversable['fantasy-land/traverse'] === 'function' ? traversable['fantasy-land/traverse'](f, of) : sequence(of, map(f, traversable));\n});\n\nexport default traverse;","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport _curry1 from './internal/_curry1.js';\nvar ws = \"\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\" + \"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\" + \"\\u2029\\uFEFF\";\nvar zeroWidth = \"\\u200B\";\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar trim = !hasProtoTrim ||\n/*#__PURE__*/\nws.trim() || !\n/*#__PURE__*/\nzeroWidth.trim() ?\n/*#__PURE__*/\n_curry1(function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n}) :\n/*#__PURE__*/\n_curry1(function trim(str) {\n  return str.trim();\n});\nexport default trim;","import _arity from './internal/_arity.js';\nimport _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n * function evaluates the `tryer`; if it does not throw, it simply returns the\n * result. If the `tryer` *does* throw, the returned function evaluates the\n * `catcher` function and returns its result. Note that for effective\n * composition with this function, both the `tryer` and `catcher` functions\n * must return the same type of results.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Function\n * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n * @param {Function} tryer The function that may throw.\n * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n * @return {Function} A new function that will catch exceptions and send then to the catcher.\n * @example\n *\n *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n *      R.tryCatch(() => { throw 'foo'}, R.always('catched'))('bar') // => 'catched'\n *      R.tryCatch(R.times(R.identity), R.always([]))('s') // => []\n `` */\n\nvar tryCatch =\n/*#__PURE__*/\n_curry2(function _tryCatch(tryer, catcher) {\n  return _arity(tryer.length, function () {\n    try {\n      return tryer.apply(this, arguments);\n    } catch (e) {\n      return catcher.apply(this, _concat([e], arguments));\n    }\n  });\n});\n\nexport default tryCatch;","import _curry1 from './internal/_curry1.js';\n/**\n * Takes a function `fn`, which takes a single array argument, and returns a\n * function which:\n *\n *   - takes any number of positional arguments;\n *   - passes these arguments to `fn` as an array; and\n *   - returns the result.\n *\n * In other words, `R.unapply` derives a variadic function from a function which\n * takes an array. `R.unapply` is the inverse of [`R.apply`](#apply).\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Function\n * @sig ([*...] -> a) -> (*... -> a)\n * @param {Function} fn\n * @return {Function}\n * @see R.apply\n * @example\n *\n *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n * @symb R.unapply(f)(a, b) = f([a, b])\n */\n\nvar unapply =\n/*#__PURE__*/\n_curry1(function unapply(fn) {\n  return function () {\n    return fn(Array.prototype.slice.call(arguments, 0));\n  };\n});\n\nexport default unapply;","import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\n\nvar unary =\n/*#__PURE__*/\n_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\n\nexport default unary;","import _curry2 from './internal/_curry2.js';\nimport curryN from './curryN.js';\n/**\n * Returns a function of arity `n` from a (manually) curried function.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Function\n * @sig Number -> (a -> b) -> (a -> c)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to uncurry.\n * @return {Function} A new function.\n * @see R.curry\n * @example\n *\n *      const addFour = a => b => c => d => a + b + c + d;\n *\n *      const uncurriedAddFour = R.uncurryN(4, addFour);\n *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n */\n\nvar uncurryN =\n/*#__PURE__*/\n_curry2(function uncurryN(depth, fn) {\n  return curryN(depth, function () {\n    var currentDepth = 1;\n    var value = fn;\n    var idx = 0;\n    var endIdx;\n\n    while (currentDepth <= depth && typeof value === 'function') {\n      endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n      value = value.apply(this, Array.prototype.slice.call(arguments, idx, endIdx));\n      currentDepth += 1;\n      idx = endIdx;\n    }\n\n    return value;\n  });\n});\n\nexport default uncurryN;","import _curry2 from './internal/_curry2.js';\n/**\n * Builds a list from a seed value. Accepts an iterator function, which returns\n * either false to stop iteration or an array of length 2 containing the value\n * to add to the resulting list and the seed to be used in the next call to the\n * iterator function.\n *\n * The iterator function receives one argument: *(seed)*.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig (a -> [b]) -> * -> [b]\n * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n *        either false to quit iteration or an array of length two to proceed. The element\n *        at index 0 of this array will be added to the resulting array, and the element\n *        at index 1 will be passed to the next call to `fn`.\n * @param {*} seed The seed value.\n * @return {Array} The final list.\n * @example\n *\n *      const f = n => n > 50 ? false : [-n, n + 10];\n *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n * @symb R.unfold(f, x) = [f(x)[0], f(f(x)[1])[0], f(f(f(x)[1])[1])[0], ...]\n */\n\nvar unfold =\n/*#__PURE__*/\n_curry2(function unfold(fn, seed) {\n  var pair = fn(seed);\n  var result = [];\n\n  while (pair && pair.length) {\n    result[result.length] = pair[0];\n    pair = fn(pair[1]);\n  }\n\n  return result;\n});\n\nexport default unfold;","import _concat from './internal/_concat.js';\nimport _curry2 from './internal/_curry2.js';\nimport compose from './compose.js';\nimport uniq from './uniq.js';\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @example\n *\n *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n */\n\nvar union =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\ncompose(uniq, _concat));\n\nexport default union;","import _includesWith from './internal/_includesWith.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\nvar uniqWith =\n/*#__PURE__*/\n_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n\n  while (idx < len) {\n    item = list[idx];\n\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqWith;","import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\nimport uniqWith from './uniqWith.js';\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\n\nvar unionWith =\n/*#__PURE__*/\n_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\n\nexport default unionWith;","import _curry3 from './internal/_curry3.js';\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","import _identity from './internal/_identity.js';\nimport chain from './chain.js';\n/**\n * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain c => c (c a) -> c a\n * @param {*} list\n * @return {*}\n * @see R.flatten, R.chain\n * @example\n *\n *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n */\n\nvar unnest =\n/*#__PURE__*/\nchain(_identity);\nexport default unnest;","import _curry3 from './internal/_curry3.js';\n/**\n * Takes a predicate, a transformation function, and an initial value,\n * and returns a value of the same type as the initial value.\n * It does so by applying the transformation until the predicate is satisfied,\n * at which point it returns the satisfactory value.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred A predicate function\n * @param {Function} fn The iterator function\n * @param {*} init Initial value\n * @return {*} Final value that satisfies predicate\n * @example\n *\n *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n */\n\nvar until =\n/*#__PURE__*/\n_curry3(function until(pred, fn, init) {\n  var val = init;\n\n  while (!pred(val)) {\n    val = fn(val);\n  }\n\n  return val;\n});\n\nexport default until;","import _curry1 from './internal/_curry1.js';\n/**\n * Returns a list of all the properties, including prototype properties, of the\n * supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own and prototype properties.\n * @see R.values, R.keysIn\n * @example\n *\n *      const F = function() { this.x = 'X'; };\n *      F.prototype.y = 'Y';\n *      const f = new F();\n *      R.valuesIn(f); //=> ['X', 'Y']\n */\n\nvar valuesIn =\n/*#__PURE__*/\n_curry1(function valuesIn(obj) {\n  var prop;\n  var vs = [];\n\n  for (prop in obj) {\n    vs[vs.length] = obj[prop];\n  }\n\n  return vs;\n});\n\nexport default valuesIn;","import _curry2 from './internal/_curry2.js'; // `Const` is a functor that effectively ignores the function given to `map`.\n\nvar Const = function Const(x) {\n  return {\n    value: x,\n    'fantasy-land/map': function fantasyLandMap() {\n      return this;\n    }\n  };\n};\n/**\n * Returns a \"view\" of the given data structure, determined by the given lens.\n * The lens's focus determines which portion of the data structure is visible.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Object\n * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n * @sig Lens s a -> s -> a\n * @param {Lens} lens\n * @param {*} x\n * @return {*}\n * @see R.prop, R.lensIndex, R.lensProp\n * @example\n *\n *      const xLens = R.lensProp('x');\n *\n *      R.view(xLens, {x: 1, y: 2});  //=> 1\n *      R.view(xLens, {x: 4, y: 2});  //=> 4\n */\n\n\nvar view =\n/*#__PURE__*/\n_curry2(function view(lens, x) {\n  // Using `Const` effectively ignores the setter function of the `lens`,\n  // leaving the value returned by the getter function unmodified.\n  return lens(Const)(x).value;\n});\n\nexport default view;","import _curry3 from './internal/_curry3.js';\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;","import _curry2 from './internal/_curry2.js';\nimport _has from './internal/_has.js';\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec. Each of the spec's own properties must be a predicate function.\n * Each predicate is applied to the value of the corresponding property of the\n * test object. `where` returns true if all the predicates return true, false\n * otherwise.\n *\n * `where` is well suited to declaratively expressing constraints for other\n * functions such as [`filter`](#filter) and [`find`](#find).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Object\n * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propSatisfies, R.whereEq\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.where({\n *        a: R.equals('foo'),\n *        b: R.complement(R.equals('bar')),\n *        x: R.gt(R.__, 10),\n *        y: R.lt(R.__, 20)\n *      });\n *\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n */\n\nvar where =\n/*#__PURE__*/\n_curry2(function where(spec, testObj) {\n  for (var prop in spec) {\n    if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n      return false;\n    }\n  }\n\n  return true;\n});\n\nexport default where;","import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport map from './map.js';\nimport where from './where.js';\n/**\n * Takes a spec object and a test object; returns true if the test satisfies\n * the spec, false otherwise. An object satisfies the spec if, for each of the\n * spec's own properties, accessing that property of the object gives the same\n * value (in [`R.equals`](#equals) terms) as accessing that property of the\n * spec.\n *\n * `whereEq` is a specialization of [`where`](#where).\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category Object\n * @sig {String: *} -> {String: *} -> Boolean\n * @param {Object} spec\n * @param {Object} testObj\n * @return {Boolean}\n * @see R.propEq, R.where\n * @example\n *\n *      // pred :: Object -> Boolean\n *      const pred = R.whereEq({a: 1, b: 2});\n *\n *      pred({a: 1});              //=> false\n *      pred({a: 1, b: 2});        //=> true\n *      pred({a: 1, b: 2, c: 3});  //=> true\n *      pred({a: 1, b: 1});        //=> false\n */\n\nvar whereEq =\n/*#__PURE__*/\n_curry2(function whereEq(spec, testObj) {\n  return where(map(equals, spec), testObj);\n});\n\nexport default whereEq;","import _includes from './internal/_includes.js';\nimport _curry2 from './internal/_curry2.js';\nimport flip from './flip.js';\nimport reject from './reject.js';\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\nvar without =\n/*#__PURE__*/\n_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\n\nexport default without;","import _curry2 from './internal/_curry2.js';\n/**\n * Creates a new list out of the two supplied by creating each possible pair\n * from the lists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} as The first list.\n * @param {Array} bs The second list.\n * @return {Array} The list made by combining each possible pair from\n *         `as` and `bs` into pairs (`[a, b]`).\n * @example\n *\n *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n * @symb R.xprod([a, b], [c, d]) = [[a, c], [a, d], [b, c], [b, d]]\n */\n\nvar xprod =\n/*#__PURE__*/\n_curry2(function xprod(a, b) {\n  // = xprodWith(prepend); (takes about 3 times as long...)\n  var idx = 0;\n  var ilen = a.length;\n  var j;\n  var jlen = b.length;\n  var result = [];\n\n  while (idx < ilen) {\n    j = 0;\n\n    while (j < jlen) {\n      result[result.length] = [a[idx], b[j]];\n      j += 1;\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default xprod;","import _curry2 from './internal/_curry2.js';\n/**\n * Creates a new list out of the two supplied by pairing up equally-positioned\n * items from both lists. The returned list is truncated to the length of the\n * shorter of the two input lists.\n * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b] -> [[a,b]]\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n * @example\n *\n *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n * @symb R.zip([a, b, c], [d, e, f]) = [[a, d], [b, e], [c, f]]\n */\n\nvar zip =\n/*#__PURE__*/\n_curry2(function zip(a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = [a[idx], b[idx]];\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zip;","import _curry2 from './internal/_curry2.js';\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\nvar zipObj =\n/*#__PURE__*/\n_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n\n  return out;\n});\n\nexport default zipObj;","import _curry3 from './internal/_curry3.js';\n/**\n * Creates a new list out of the two supplied by applying the function to each\n * equally-positioned pair in the lists. The returned list is truncated to the\n * length of the shorter of the two input lists.\n *\n * @function\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> c) -> [a] -> [b] -> [c]\n * @param {Function} fn The function used to combine the two elements into one value.\n * @param {Array} list1 The first array to consider.\n * @param {Array} list2 The second array to consider.\n * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n *         using `fn`.\n * @example\n *\n *      const f = (x, y) => {\n *        // ...\n *      };\n *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n * @symb R.zipWith(fn, [a, b, c], [d, e, f]) = [fn(a, d), fn(b, e), fn(c, f)]\n */\n\nvar zipWith =\n/*#__PURE__*/\n_curry3(function zipWith(fn, a, b) {\n  var rv = [];\n  var idx = 0;\n  var len = Math.min(a.length, b.length);\n\n  while (idx < len) {\n    rv[idx] = fn(a[idx], b[idx]);\n    idx += 1;\n  }\n\n  return rv;\n});\n\nexport default zipWith;","import curryN from './curryN.js';\nimport _curry1 from './internal/_curry1.js';\n/**\n * Creates a thunk out of a function. A thunk delays a calculation until\n * its result is needed, providing lazy evaluation of arguments.\n *\n * @func\n * @memberOf R\n * @category Function\n * @sig ((a, b, ..., j) -> k) -> (a, b, ..., j) -> (() -> k)\n * @param {Function} fn A function to wrap in a thunk\n * @return {Function} Expects arguments for `fn` and returns a new function\n *  that, when called, applies those arguments to `fn`.\n * @see R.partial, R.partialRight\n * @example\n *\n *      R.thunkify(R.identity)(42)(); //=> 42\n *      R.thunkify((a, b) => a + b)(25, 17)(); //=> 42\n */\n\nvar thunkify =\n/*#__PURE__*/\n_curry1(function thunkify(fn) {\n  return curryN(fn.length, function createThunk() {\n    var fnArgs = arguments;\n    return function invokeThunk() {\n      return fn.apply(this, fnArgs);\n    };\n  });\n});\n\nexport default thunkify;","export { default as F } from './F.js';\nexport { default as T } from './T.js';\nexport { default as __ } from './__.js';\nexport { default as add } from './add.js';\nexport { default as addIndex } from './addIndex.js';\nexport { default as adjust } from './adjust.js';\nexport { default as all } from './all.js';\nexport { default as allPass } from './allPass.js';\nexport { default as always } from './always.js';\nexport { default as and } from './and.js';\nexport { default as any } from './any.js';\nexport { default as anyPass } from './anyPass.js';\nexport { default as ap } from './ap.js';\nexport { default as aperture } from './aperture.js';\nexport { default as append } from './append.js';\nexport { default as apply } from './apply.js';\nexport { default as applySpec } from './applySpec.js';\nexport { default as applyTo } from './applyTo.js';\nexport { default as ascend } from './ascend.js';\nexport { default as assoc } from './assoc.js';\nexport { default as assocPath } from './assocPath.js';\nexport { default as binary } from './binary.js';\nexport { default as bind } from './bind.js';\nexport { default as both } from './both.js';\nexport { default as call } from './call.js';\nexport { default as chain } from './chain.js';\nexport { default as clamp } from './clamp.js';\nexport { default as clone } from './clone.js';\nexport { default as comparator } from './comparator.js';\nexport { default as complement } from './complement.js';\nexport { default as compose } from './compose.js';\nexport { default as composeK } from './composeK.js';\nexport { default as composeP } from './composeP.js';\nexport { default as composeWith } from './composeWith.js';\nexport { default as concat } from './concat.js';\nexport { default as cond } from './cond.js';\nexport { default as construct } from './construct.js';\nexport { default as constructN } from './constructN.js';\nexport { default as contains } from './contains.js';\nexport { default as converge } from './converge.js';\nexport { default as countBy } from './countBy.js';\nexport { default as curry } from './curry.js';\nexport { default as curryN } from './curryN.js';\nexport { default as dec } from './dec.js';\nexport { default as defaultTo } from './defaultTo.js';\nexport { default as descend } from './descend.js';\nexport { default as difference } from './difference.js';\nexport { default as differenceWith } from './differenceWith.js';\nexport { default as dissoc } from './dissoc.js';\nexport { default as dissocPath } from './dissocPath.js';\nexport { default as divide } from './divide.js';\nexport { default as drop } from './drop.js';\nexport { default as dropLast } from './dropLast.js';\nexport { default as dropLastWhile } from './dropLastWhile.js';\nexport { default as dropRepeats } from './dropRepeats.js';\nexport { default as dropRepeatsWith } from './dropRepeatsWith.js';\nexport { default as dropWhile } from './dropWhile.js';\nexport { default as either } from './either.js';\nexport { default as empty } from './empty.js';\nexport { default as endsWith } from './endsWith.js';\nexport { default as eqBy } from './eqBy.js';\nexport { default as eqProps } from './eqProps.js';\nexport { default as equals } from './equals.js';\nexport { default as evolve } from './evolve.js';\nexport { default as filter } from './filter.js';\nexport { default as find } from './find.js';\nexport { default as findIndex } from './findIndex.js';\nexport { default as findLast } from './findLast.js';\nexport { default as findLastIndex } from './findLastIndex.js';\nexport { default as flatten } from './flatten.js';\nexport { default as flip } from './flip.js';\nexport { default as forEach } from './forEach.js';\nexport { default as forEachObjIndexed } from './forEachObjIndexed.js';\nexport { default as fromPairs } from './fromPairs.js';\nexport { default as groupBy } from './groupBy.js';\nexport { default as groupWith } from './groupWith.js';\nexport { default as gt } from './gt.js';\nexport { default as gte } from './gte.js';\nexport { default as has } from './has.js';\nexport { default as hasIn } from './hasIn.js';\nexport { default as hasPath } from './hasPath.js';\nexport { default as head } from './head.js';\nexport { default as identical } from './identical.js';\nexport { default as identity } from './identity.js';\nexport { default as ifElse } from './ifElse.js';\nexport { default as inc } from './inc.js';\nexport { default as includes } from './includes.js';\nexport { default as indexBy } from './indexBy.js';\nexport { default as indexOf } from './indexOf.js';\nexport { default as init } from './init.js';\nexport { default as innerJoin } from './innerJoin.js';\nexport { default as insert } from './insert.js';\nexport { default as insertAll } from './insertAll.js';\nexport { default as intersection } from './intersection.js';\nexport { default as intersperse } from './intersperse.js';\nexport { default as into } from './into.js';\nexport { default as invert } from './invert.js';\nexport { default as invertObj } from './invertObj.js';\nexport { default as invoker } from './invoker.js';\nexport { default as is } from './is.js';\nexport { default as isEmpty } from './isEmpty.js';\nexport { default as isNil } from './isNil.js';\nexport { default as join } from './join.js';\nexport { default as juxt } from './juxt.js';\nexport { default as keys } from './keys.js';\nexport { default as keysIn } from './keysIn.js';\nexport { default as last } from './last.js';\nexport { default as lastIndexOf } from './lastIndexOf.js';\nexport { default as length } from './length.js';\nexport { default as lens } from './lens.js';\nexport { default as lensIndex } from './lensIndex.js';\nexport { default as lensPath } from './lensPath.js';\nexport { default as lensProp } from './lensProp.js';\nexport { default as lift } from './lift.js';\nexport { default as liftN } from './liftN.js';\nexport { default as lt } from './lt.js';\nexport { default as lte } from './lte.js';\nexport { default as map } from './map.js';\nexport { default as mapAccum } from './mapAccum.js';\nexport { default as mapAccumRight } from './mapAccumRight.js';\nexport { default as mapObjIndexed } from './mapObjIndexed.js';\nexport { default as match } from './match.js';\nexport { default as mathMod } from './mathMod.js';\nexport { default as max } from './max.js';\nexport { default as maxBy } from './maxBy.js';\nexport { default as mean } from './mean.js';\nexport { default as median } from './median.js';\nexport { default as memoizeWith } from './memoizeWith.js';\nexport { default as merge } from './merge.js';\nexport { default as mergeAll } from './mergeAll.js';\nexport { default as mergeDeepLeft } from './mergeDeepLeft.js';\nexport { default as mergeDeepRight } from './mergeDeepRight.js';\nexport { default as mergeDeepWith } from './mergeDeepWith.js';\nexport { default as mergeDeepWithKey } from './mergeDeepWithKey.js';\nexport { default as mergeLeft } from './mergeLeft.js';\nexport { default as mergeRight } from './mergeRight.js';\nexport { default as mergeWith } from './mergeWith.js';\nexport { default as mergeWithKey } from './mergeWithKey.js';\nexport { default as min } from './min.js';\nexport { default as minBy } from './minBy.js';\nexport { default as modulo } from './modulo.js';\nexport { default as move } from './move.js';\nexport { default as multiply } from './multiply.js';\nexport { default as nAry } from './nAry.js';\nexport { default as negate } from './negate.js';\nexport { default as none } from './none.js';\nexport { default as not } from './not.js';\nexport { default as nth } from './nth.js';\nexport { default as nthArg } from './nthArg.js';\nexport { default as o } from './o.js';\nexport { default as objOf } from './objOf.js';\nexport { default as of } from './of.js';\nexport { default as omit } from './omit.js';\nexport { default as once } from './once.js';\nexport { default as or } from './or.js';\nexport { default as otherwise } from './otherwise.js';\nexport { default as over } from './over.js';\nexport { default as pair } from './pair.js';\nexport { default as partial } from './partial.js';\nexport { default as partialRight } from './partialRight.js';\nexport { default as partition } from './partition.js';\nexport { default as path } from './path.js';\nexport { default as pathEq } from './pathEq.js';\nexport { default as pathOr } from './pathOr.js';\nexport { default as pathSatisfies } from './pathSatisfies.js';\nexport { default as pick } from './pick.js';\nexport { default as pickAll } from './pickAll.js';\nexport { default as pickBy } from './pickBy.js';\nexport { default as pipe } from './pipe.js';\nexport { default as pipeK } from './pipeK.js';\nexport { default as pipeP } from './pipeP.js';\nexport { default as pipeWith } from './pipeWith.js';\nexport { default as pluck } from './pluck.js';\nexport { default as prepend } from './prepend.js';\nexport { default as product } from './product.js';\nexport { default as project } from './project.js';\nexport { default as prop } from './prop.js';\nexport { default as propEq } from './propEq.js';\nexport { default as propIs } from './propIs.js';\nexport { default as propOr } from './propOr.js';\nexport { default as propSatisfies } from './propSatisfies.js';\nexport { default as props } from './props.js';\nexport { default as range } from './range.js';\nexport { default as reduce } from './reduce.js';\nexport { default as reduceBy } from './reduceBy.js';\nexport { default as reduceRight } from './reduceRight.js';\nexport { default as reduceWhile } from './reduceWhile.js';\nexport { default as reduced } from './reduced.js';\nexport { default as reject } from './reject.js';\nexport { default as remove } from './remove.js';\nexport { default as repeat } from './repeat.js';\nexport { default as replace } from './replace.js';\nexport { default as reverse } from './reverse.js';\nexport { default as scan } from './scan.js';\nexport { default as sequence } from './sequence.js';\nexport { default as set } from './set.js';\nexport { default as slice } from './slice.js';\nexport { default as sort } from './sort.js';\nexport { default as sortBy } from './sortBy.js';\nexport { default as sortWith } from './sortWith.js';\nexport { default as split } from './split.js';\nexport { default as splitAt } from './splitAt.js';\nexport { default as splitEvery } from './splitEvery.js';\nexport { default as splitWhen } from './splitWhen.js';\nexport { default as startsWith } from './startsWith.js';\nexport { default as subtract } from './subtract.js';\nexport { default as sum } from './sum.js';\nexport { default as symmetricDifference } from './symmetricDifference.js';\nexport { default as symmetricDifferenceWith } from './symmetricDifferenceWith.js';\nexport { default as tail } from './tail.js';\nexport { default as take } from './take.js';\nexport { default as takeLast } from './takeLast.js';\nexport { default as takeLastWhile } from './takeLastWhile.js';\nexport { default as takeWhile } from './takeWhile.js';\nexport { default as tap } from './tap.js';\nexport { default as test } from './test.js';\nexport { default as then } from './then.js';\nexport { default as times } from './times.js';\nexport { default as toLower } from './toLower.js';\nexport { default as toPairs } from './toPairs.js';\nexport { default as toPairsIn } from './toPairsIn.js';\nexport { default as toString } from './toString.js';\nexport { default as toUpper } from './toUpper.js';\nexport { default as transduce } from './transduce.js';\nexport { default as transpose } from './transpose.js';\nexport { default as traverse } from './traverse.js';\nexport { default as trim } from './trim.js';\nexport { default as tryCatch } from './tryCatch.js';\nexport { default as type } from './type.js';\nexport { default as unapply } from './unapply.js';\nexport { default as unary } from './unary.js';\nexport { default as uncurryN } from './uncurryN.js';\nexport { default as unfold } from './unfold.js';\nexport { default as union } from './union.js';\nexport { default as unionWith } from './unionWith.js';\nexport { default as uniq } from './uniq.js';\nexport { default as uniqBy } from './uniqBy.js';\nexport { default as uniqWith } from './uniqWith.js';\nexport { default as unless } from './unless.js';\nexport { default as unnest } from './unnest.js';\nexport { default as until } from './until.js';\nexport { default as update } from './update.js';\nexport { default as useWith } from './useWith.js';\nexport { default as values } from './values.js';\nexport { default as valuesIn } from './valuesIn.js';\nexport { default as view } from './view.js';\nexport { default as when } from './when.js';\nexport { default as where } from './where.js';\nexport { default as whereEq } from './whereEq.js';\nexport { default as without } from './without.js';\nexport { default as xprod } from './xprod.js';\nexport { default as zip } from './zip.js';\nexport { default as zipObj } from './zipObj.js';\nexport { default as zipWith } from './zipWith.js';\nexport { default as thunkify } from './thunkify.js';","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}","import _curry1 from './_curry1.js';\nimport _isArray from './_isArray.js';\nimport _isString from './_isString.js';\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\nvar _isArrayLike =\n/*#__PURE__*/\n_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n\n  if (!x) {\n    return false;\n  }\n\n  if (typeof x !== 'object') {\n    return false;\n  }\n\n  if (_isString(x)) {\n    return false;\n  }\n\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n\n  if (x.length === 0) {\n    return true;\n  }\n\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n\n  return false;\n});\n\nexport default _isArrayLike;","export default function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}","import _arity from './internal/_arity.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\nvar bind =\n/*#__PURE__*/\n_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\n\nexport default bind;","export default function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n\n    idx += 1;\n  }\n\n  return result;\n}","var XWrap =\n/*#__PURE__*/\nfunction () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nexport default function _xwrap(fn) {\n  return new XWrap(fn);\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _has from './_has.js';\nvar toString = Object.prototype.toString;\n\nvar _isArguments =\n/*#__PURE__*/\nfunction () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nexport default _isArguments;","import \"core-js/modules/es6.regexp.split\";\nimport _curry1 from './internal/_curry1.js';\nimport _isString from './internal/_isString.js';\n/**\n * Returns a new list or string with the elements or characters in reverse\n * order.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {Array|String} list\n * @return {Array|String}\n * @example\n *\n *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n *      R.reverse([1, 2]);     //=> [2, 1]\n *      R.reverse([1]);        //=> [1]\n *      R.reverse([]);         //=> []\n *\n *      R.reverse('abc');      //=> 'cba'\n *      R.reverse('ab');       //=> 'ba'\n *      R.reverse('a');        //=> 'a'\n *      R.reverse('');         //=> ''\n */\n\nvar reverse =\n/*#__PURE__*/\n_curry1(function reverse(list) {\n  return _isString(list) ? list.split('').reverse().join('') : Array.prototype.slice.call(list, 0).reverse();\n});\n\nexport default reverse;","import _indexOf from './_indexOf.js';\nexport default function _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}","import _curry2 from './internal/_curry2.js';\nimport _isFunction from './internal/_isFunction.js';\nimport curryN from './curryN.js';\nimport toString from './toString.js';\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\nvar invoker =\n/*#__PURE__*/\n_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\n\nexport default invoker;","import _curry2 from './_curry2.js';\nimport _xfBase from './_xfBase.js';\n\nvar XFilter =\n/*#__PURE__*/\nfunction () {\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter =\n/*#__PURE__*/\n_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\n\nexport default _xfilter;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _filter from './internal/_filter.js';\nimport _isObject from './internal/_isObject.js';\nimport _reduce from './internal/_reduce.js';\nimport _xfilter from './internal/_xfilter.js';\nimport keys from './keys.js';\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar filter =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n\n    return acc;\n  }, {}, keys(filterable)) : // else\n  _filter(pred, filterable);\n}));\n\nexport default filter;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}","import _curry1 from './internal/_curry1.js';\nimport _identity from './internal/_identity.js';\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\nvar identity =\n/*#__PURE__*/\n_curry1(_identity);\n\nexport default identity;","import _curry1 from './internal/_curry1.js';\nimport _toString from './internal/_toString.js';\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\nvar toString =\n/*#__PURE__*/\n_curry1(function toString(val) {\n  return _toString(val, []);\n});\n\nexport default toString;","import _complement from './internal/_complement.js';\nimport _curry2 from './internal/_curry2.js';\nimport filter from './filter.js';\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\nvar reject =\n/*#__PURE__*/\n_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\n\nexport default reject;","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","import _arity from './_arity.js';\nimport _isPlaceholder from './_isPlaceholder.js';\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n\n      combined[combinedIdx] = result;\n\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n\n      combinedIdx += 1;\n    }\n\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}","export default function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n\n  return result;\n}","import _curry3 from './internal/_curry3.js';\n/**\n * Makes an ascending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) < fn(b), `1` if fn(b) < fn(a), otherwise `0`\n * @see R.descend\n * @example\n *\n *      const byAge = R.ascend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByYoungestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Mikhail', age: 62 },{ name: 'Emma', age: 70 }, { name: 'Peter', age: 78 }]\n */\n\nvar ascend =\n/*#__PURE__*/\n_curry3(function ascend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa < bb ? -1 : aa > bb ? 1 : 0;\n});\n\nexport default ascend;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport _curry1 from './internal/_curry1.js';\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\nvar type =\n/*#__PURE__*/\n_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\n\nexport default type;","export default function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n\n    idx += 1;\n  }\n\n  return false;\n}","import _curry3 from './internal/_curry3.js';\n/**\n * Makes a descending comparator function out of a function that returns a value\n * that can be compared with `<` and `>`.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Function\n * @sig Ord b => (a -> b) -> a -> a -> Number\n * @param {Function} fn A function of arity one that returns a value that can be compared\n * @param {*} a The first item to be compared.\n * @param {*} b The second item to be compared.\n * @return {Number} `-1` if fn(a) > fn(b), `1` if fn(b) > fn(a), otherwise `0`\n * @see R.ascend\n * @example\n *\n *      const byAge = R.descend(R.prop('age'));\n *      const people = [\n *        { name: 'Emma', age: 70 },\n *        { name: 'Peter', age: 78 },\n *        { name: 'Mikhail', age: 62 },\n *      ];\n *      const peopleByOldestFirst = R.sort(byAge, people);\n *        //=> [{ name: 'Peter', age: 78 }, { name: 'Emma', age: 70 }, { name: 'Mikhail', age: 62 }]\n */\n\nvar descend =\n/*#__PURE__*/\n_curry3(function descend(fn, a, b) {\n  var aa = fn(a);\n  var bb = fn(b);\n  return aa > bb ? -1 : aa < bb ? 1 : 0;\n});\n\nexport default descend;","import identity from './identity.js';\nimport uniqBy from './uniqBy.js';\n/**\n * Returns a new list containing only one copy of each element in the original\n * list. [`R.equals`](#equals) is used to determine equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n *      R.uniq([1, '1']);     //=> [1, '1']\n *      R.uniq([[42], [42]]); //=> [[42]]\n */\n\nvar uniq =\n/*#__PURE__*/\nuniqBy(identity);\nexport default uniq;","import \"core-js/modules/es6.array.sort\";\nimport _curry2 from './internal/_curry2.js';\n/**\n * Sorts a list according to a list of comparators.\n *\n * @func\n * @memberOf R\n * @since v0.23.0\n * @category Relation\n * @sig [(a, a) -> Number] -> [a] -> [a]\n * @param {Array} functions A list of comparator functions.\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted according to the comarator functions.\n * @example\n *\n *      const alice = {\n *        name: 'alice',\n *        age: 40\n *      };\n *      const bob = {\n *        name: 'bob',\n *        age: 30\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 40\n *      };\n *      const people = [clara, bob, alice];\n *      const ageNameSort = R.sortWith([\n *        R.descend(R.prop('age')),\n *        R.ascend(R.prop('name'))\n *      ]);\n *      ageNameSort(people); //=> [alice, clara, bob]\n */\n\nvar sortWith =\n/*#__PURE__*/\n_curry2(function sortWith(fns, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var result = 0;\n    var i = 0;\n\n    while (result === 0 && i < fns.length) {\n      result = fns[i](a, b);\n      i += 1;\n    }\n\n    return result;\n  });\n});\n\nexport default sortWith;","import _forceReduced from './_forceReduced.js';\nimport _isArrayLike from './_isArrayLike.js';\nimport _reduce from './_reduce.js';\nimport _xfBase from './_xfBase.js';\n\nvar preservingReduced = function preservingReduced(xf) {\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function transducerResult(result) {\n      return xf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function transducerStep(result, input) {\n      var ret = xf['@@transducer/step'](result, input);\n      return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n    }\n  };\n};\n\nvar _flatCat = function _xcat(xf) {\n  var rxf = preservingReduced(xf);\n  return {\n    '@@transducer/init': _xfBase.init,\n    '@@transducer/result': function transducerResult(result) {\n      return rxf['@@transducer/result'](result);\n    },\n    '@@transducer/step': function transducerStep(result, input) {\n      return !_isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n    }\n  };\n};\n\nexport default _flatCat;","export default function _forceReduced(x) {\n  return {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}","import _curry2 from './_curry2.js';\nimport _flatCat from './_flatCat.js';\nimport map from '../map.js';\n\nvar _xchain =\n/*#__PURE__*/\n_curry2(function _xchain(f, xf) {\n  return map(f, _flatCat(xf));\n});\n\nexport default _xchain;","import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _makeFlat from './internal/_makeFlat.js';\nimport _xchain from './internal/_xchain.js';\nimport map from './map.js';\n/**\n * `chain` maps a function over a list and concatenates the results. `chain`\n * is also known as `flatMap` in some libraries.\n *\n * Dispatches to the `chain` method of the second argument, if present,\n * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n *\n * If second argument is a function, `chain(f, g)(x)` is equivalent to `f(g(x), x)`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig Chain m => (a -> m b) -> m a -> m b\n * @param {Function} fn The function to map with\n * @param {Array} list The list to map over\n * @return {Array} The result of flat-mapping `list` with `fn`\n * @example\n *\n *      const duplicate = n => [n, n];\n *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n *\n *      R.chain(R.append, R.head)([1, 2, 3]); //=> [1, 2, 3, 1]\n */\n\nvar chain =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['fantasy-land/chain', 'chain'], _xchain, function chain(fn, monad) {\n  if (typeof monad === 'function') {\n    return function (x) {\n      return fn(monad(x))(x);\n    };\n  }\n\n  return _makeFlat(false)(map(fn, monad));\n}));\n\nexport default chain;","export default function _identity(x) {\n  return x;\n}","import _Set from './internal/_Set.js';\nimport _curry2 from './internal/_curry2.js';\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied function to\n * each list element. Prefers the first item if the supplied function produces\n * the same value on two items. [`R.equals`](#equals) is used for comparison.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig (a -> b) -> [a] -> [a]\n * @param {Function} fn A function used to produce a value to use during comparisons.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n */\n\nvar uniqBy =\n/*#__PURE__*/\n_curry2(function uniqBy(fn, list) {\n  var set = new _Set();\n  var result = [];\n  var idx = 0;\n  var appliedItem, item;\n\n  while (idx < list.length) {\n    item = list[idx];\n    appliedItem = fn(item);\n\n    if (set.add(appliedItem)) {\n      result.push(item);\n    }\n\n    idx += 1;\n  }\n\n  return result;\n});\n\nexport default uniqBy;","import \"core-js/modules/es6.array.sort\";\nimport _curry2 from './internal/_curry2.js';\n/**\n * Sorts the list according to the supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord b => (a -> b) -> [a] -> [a]\n * @param {Function} fn\n * @param {Array} list The list to sort.\n * @return {Array} A new list sorted by the keys generated by `fn`.\n * @example\n *\n *      const sortByFirstItem = R.sortBy(R.prop(0));\n *      const pairs = [[-1, 1], [-2, 2], [-3, 3]];\n *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n *\n *      const sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n *      const alice = {\n *        name: 'ALICE',\n *        age: 101\n *      };\n *      const bob = {\n *        name: 'Bob',\n *        age: -10\n *      };\n *      const clara = {\n *        name: 'clara',\n *        age: 314.159\n *      };\n *      const people = [clara, bob, alice];\n *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n */\n\nvar sortBy =\n/*#__PURE__*/\n_curry2(function sortBy(fn, list) {\n  return Array.prototype.slice.call(list, 0).sort(function (a, b) {\n    var aa = fn(a);\n    var bb = fn(b);\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  });\n});\n\nexport default sortBy;","import _isArrayLike from './_isArrayLike.js';\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\nexport default function _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n\n      idx += 1;\n    }\n\n    return result;\n  };\n}","import equals from '../equals.js';\nexport default function _indexOf(list, a, idx) {\n  var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n\n            idx += 1;\n          }\n\n          return -1;\n        } // non-zero numbers can utilise Set\n\n\n        return list.indexOf(a, idx);\n      // all these types can utilise Set\n\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n\n    }\n  } // anything else not covered above, defer to R.equals\n\n\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n\n    idx += 1;\n  }\n\n  return -1;\n}","import \"core-js/modules/es6.object.is\";\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nexport default typeof Object.is === 'function' ? Object.is : _objectIs;","export default function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport _includes from './_includes.js';\n\nvar _Set =\n/*#__PURE__*/\nfunction () {\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  } // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n\n\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  }; //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n\n\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  }; //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n\n\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n\n          return false;\n        }\n      } // these types can all utilise the native Set\n\n\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n\n          set._nativeSet.add(item);\n\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n\n          return false;\n        }\n\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n    /* falls through */\n\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n\n        return false;\n      } // scan through all previously applied items\n\n\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n\n        return false;\n      }\n\n      return true;\n  }\n} // A simple Set type that honours R.equals semantics\n\n\nexport default _Set;","import invoker from './invoker.js';\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\nvar join =\n/*#__PURE__*/\ninvoker(1, 'join');\nexport default join;","import \"core-js/modules/es6.regexp.replace\";\nexport default function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nexport default _toISOString;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.sort\";\nimport _includes from './_includes.js';\nimport _map from './_map.js';\nimport _quote from './_quote.js';\nimport _toISOString from './_toISOString.js';\nimport keys from '../keys.js';\nimport reject from '../reject.js';\nexport default function _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n  var mapPairs = function mapPairs(obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return /^\\d+$/.test(k);\n      }, keys(x)))).join(', ') + ']';\n\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n    case '[object Null]':\n      return 'null';\n\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n    case '[object Undefined]':\n      return 'undefined';\n\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","// 20.1.2.3 Number.isInteger(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', { isInteger: require('./_is-integer') });\n","// 20.1.2.3 Number.isInteger(number)\nvar isObject = require('./_is-object');\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n","// 19.1.3.10 Object.is(value1, value2)\nvar $export = require('./_export');\n$export($export.S, 'Object', { is: require('./_same-value') });\n"],"sourceRoot":""}