{"version":3,"sources":["webpack:///./src/templates/speaker-page.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["_ref","data","speaker","talks","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","frontmatter","name","pic","style","maxWidth","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","alt","fluid","childImageSharp","twitter_name","href","className","dangerouslySetInnerHTML","__html","html","Fragment","edges","length","map","_ref2","node","key","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","title","query","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"6MAOoB,SAAAA,GAAc,IAAXC,EAAWD,EAAXC,KACbC,EAAmBD,EAAnBC,QAASC,EAAUF,EAAVE,MAEjB,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,KACED,EAAAC,EAAAC,cAAA,UAAKJ,EAAQM,YAAYC,MAExBP,EAAQM,YAAYE,KACnBN,EAAAC,EAAAC,cAAA,OAAKK,OAASC,SAAU,UACtBR,EAAAC,EAAAC,cAACO,EAAAR,GAAIS,IAAI,UAAUC,MAAOb,EAAQM,YAAYE,IAAIM,gBAAgBD,SAIrEb,EAAQM,YAAYS,cACnBb,EAAAC,EAAAC,cAAA,oBACW,IACTF,EAAAC,EAAAC,cAAA,KAAGY,KAAA,uBAA6BhB,EAAQM,YAAYS,cAApD,IACEf,EAAQM,YAAYS,eAK1Bb,EAAAC,EAAAC,cAAA,OAAKa,UAAU,cAAcC,yBAA2BC,OAAQnB,EAAQoB,QAExElB,EAAAC,EAAAC,cAAA,WACCH,GACCC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkB,SAAA,KACGpB,EAAMqB,MAAMC,OADf,UAEErB,EAAAC,EAAAC,cAAA,UACGH,EAAMqB,MAAME,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACfxB,EAAAC,EAAAC,cAAA,MAAIuB,IAAKD,EAAKE,OAAOC,MACnB3B,EAAAC,EAAAC,cAAC0B,EAAAC,MAAKC,GAAIN,EAAKE,OAAOC,MAAOH,EAAKpB,YAAY2B,cAYvD,IAAMC,oCClDb,IAAAC,EAAAC,EAAA,IAAAC,EACAC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAAF,EAAA,KAAAD,EAAAG,EAHA,QAIAI,gBACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAK,GACL","file":"component---src-templates-speaker-page-js-e850a39005c1c4e63786.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nconst SpeakerPage = ({ data }) => {\r\n  const { speaker, talks } = data\r\n\r\n  return (\r\n    <Layout>\r\n      <h2>{speaker.frontmatter.name}</h2>\r\n\r\n      {speaker.frontmatter.pic && (\r\n        <div style={{ maxWidth: \"400px\"}}>\r\n          <Img alt=\"speaker\" fluid={speaker.frontmatter.pic.childImageSharp.fluid} />\r\n        </div>\r\n      )}\r\n\r\n      {speaker.frontmatter.twitter_name && (\r\n        <p>\r\n          Twitter:{\" \"}\r\n          <a href={`https://twitter.com/${speaker.frontmatter.twitter_name}`}>{`@${\r\n            speaker.frontmatter.twitter_name\r\n          }`}</a>\r\n        </p>\r\n      )}\r\n\r\n      <div className=\"description\" dangerouslySetInnerHTML={{ __html: speaker.html }} />\r\n\r\n      <hr />\r\n      {talks && (\r\n        <>\r\n          {talks.edges.length} Talks:\r\n          <ul>\r\n            {talks.edges.map(({ node }) => (\r\n              <li key={node.fields.slug}>\r\n                <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SpeakerPage\r\n\r\nexport const query = graphql`\r\n  query($speakerSlug: String!, $speakerId: String!) {\r\n    speaker: markdownRemark(fields: { slug: { eq: $speakerSlug } }) {\r\n      html\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        name\r\n        twitter_name\r\n        pic {\r\n          childImageSharp {\r\n            fluid(maxWidth: 400) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    talks: allMarkdownRemark(\r\n      filter: { fields: { sourceName: { eq: \"talks\" } }, frontmatter: { speaker: { eq: $speakerId } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}