{"data":{"talk":{"html":"<p>Damit Testgetriebene Entwicklung in der Praxis funktionieren kann, müssen sich Tests möglichst einfach und trotzdem\nausdrucksstark schreiben lassen und gut lesbar sein. Auch die (Neben-)Aufgabe von Unittests, eine lebendige\nEntwicklerdokumentation zu bilden, kann nur erfüllt werden, wenn die Tests gut lesbar sind.</p>\n<p>Die klassischen Assertions von JUnit lassen hier teilweise zu wünschen übrig. Neben <code>assertTrue</code> und <code>assertNotNull</code>\nbestehen viele Unittests nur aus unzähligen <code>assertEquals</code>-Anweisungen, was in der Regel sehr weit weg von natürlicher\nSprache ist. Diese Lücke versucht das <strong>Hamcrest</strong>-Projekt zu schließen, welches mittlerweile teilweise in JUnit\neingeflossen ist. Hamcrest ist jedoch ebenfalls nicht unproblematisch und bietet durch seinen Aufbau aus statischen\nMethoden in der Praxis zahlreiche Schwächen und Nachteile.</p>\n<p>Einen moderneren Ansatz verfolgt das Framework <strong>AssertJ</strong> bzw. <strong>FEST-Assert</strong>. Auf den ersten Blick sehen die\nAssertions denen von Hamcrest zwar sehr ähnlich, jedoch wurde für die Implementierung statt statischer Methoden der\nmodernere Ansatz einer Fluent-API gewählt, wodurch sich einige Vorteile ergeben, wie z.B. bessere IDE-Integration.</p>\n<p>Im Vortrag wird das eigentliche Problem und die bisherige Lösung mit Hamcrest gezeigt. Dem wird anschließend das\nFramework <strong>AssertJ</strong> gegenüber gestellt. Anhand von zahlreichen Core-Beispielen soll gezeigt werden, wie einfach sich\nlesbare Unittests formulieren lassen, wenn man die richtigen Werkzeuge zur Hand hat. Anschließend wird ebenfalls darauf\neingegangen, wie mit AssertJ eigene, domänenspezifische Assertions erstellt werden können. Damit kann sich der Anwender\nseine eigenen Werkzeuge erstellen, um in seiner Domäne gut lesbare und ausdrucksstarke Unittests schreiben zu können.</p>","fields":{"slug":"/talks/2014-04-02-assertj/"},"frontmatter":{"title":"Besser lesbare Unittests mit AssertJ","date":"2014-04-02T00:00:00.000Z","tags":["junit","testen"],"poster":null}},"speakers":{"edges":[{"node":{"id":"1bc17afa-9379-5441-9245-72eb6b23c092","html":"<p>Manuel arbeitet als Softwareentwickler bei der Saxonia-Systems AG in Görlitz.\nEr beschäftigt sich mit allen Aspekten der Anwendungsentwicklung, wobei der Fokus auf dem Frontend liegt,\nbeispielsweise mit JavaFX und modernen JavaScript-Frameworks.\nDaneben interessieren ihn Themen wie funktionale Programmierung und Softwarearchitektur.\nManuel ist Gründungsmitglied und Leiter der Java User Group Görlitz und steuert hierfür und\nauch für andere Usergroups und Konferenzen regelmäßig Vorträge bei.</p>","frontmatter":{"name":"Manuel Mauky","pic":"https://lestard.eu/files/pics/me.png","twitter_name":"manuel_mauky"},"fields":{"slug":"/speakers/manuel_mauky/"}}}]},"location":{"fields":{"slug":"/locations/saxsys/"},"frontmatter":{"name":"Saxonia Systems AG","info":null,"zip":"02826","city":"Görlitz","street":"Berliner Straße"}}},"pageContext":{"slug":"/talks/2014-04-02-assertj/","speakerSlugs":["/speakers/manuel_mauky/"],"locationSlug":"/locations/saxsys/"}}