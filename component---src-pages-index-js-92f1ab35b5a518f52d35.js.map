{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/page-header.js","webpack:///./src/components/page-footer.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js","webpack:///./src/utils/format-date.js","webpack:///./src/utils/find-speakers-for-talk.js","webpack:///./src/utils/get-upcoming-event.js","webpack:///./src/components/speaker-profile.js","webpack:///./src/components/talk-content.js"],"names":["PostPage","_ref","post","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","fields","slug","frontmatter","title","date","Object","_utils_format_date__WEBPACK_IMPORTED_MODULE_5__","dangerouslySetInnerHTML","__html","html","t","default","_ref2","data","talks","edges","map","edge","node","posts","length","sortedPosts","ramda__WEBPACK_IMPORTED_MODULE_1__","j","c","_components_layout__WEBPACK_IMPORTED_MODULE_3__","key","today","Date","upcomingEvent","_utils_get_upcoming_event__WEBPACK_IMPORTED_MODULE_4__","allEvents","speakers","locations","allSpeakers","allLocations","location","d","locationId","speakersOfTalk","_utils_find_speakers_for_talk__WEBPACK_IMPORTED_MODULE_7__","talk","_components_talk_content__WEBPACK_IMPORTED_MODULE_6__","speakerList","linkToDetailsPage","query","page_header_LinkItem","children","react_default","reactstrap_es","f","g","className","tag","props","gatsby_link_default","assign","activeClassName","page_header","PageHeader","_this","_React$Component","call","this","toggle","setState","prevState","collapsed","state","render","h","color","light","expand","i","onClick","isOpen","navbar","e","Component","page_footer","gatsby_browser_entry","b","n","k","v","A","sidebar","logo","sm","xs","md","gatsby_image_default","alt","fluid","childImageSharp","href","index_es","icon","free_brands_svg_icons_index_es","rel","free_solid_svg_icons_index_es","src","__webpack_exports__","StaticQuery","Fragment","Helmet_default","site","siteMetadata","meta","name","content","description","style","marginTop","_3517534738","moment__WEBPACK_IMPORTED_MODULE_0___default","locale","format","248","ramda__WEBPACK_IMPORTED_MODULE_0__","speaker","extractDate","extractor","sortedEvents","todayMoment","moment_moment__WEBPACK_IMPORTED_MODULE_0___default","datesAfter","event","isBefore","253","r","l","m","o","s","speaker_profile","pic","textAlign","twitter_name","talk_content_SpeakerHeadline","es","talk_content_LocationInfo","info","street","number","zip","city","talk_content_TagsLine","_ref3","tags","talk_content_Headline","_ref4","_ref5","format_date","poster","sizes","id"],"mappings":"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","file":"component---src-pages-index-js-92f1ab35b5a518f52d35.js","sourcesContent":["import React from \"react\"\n\nimport * as R from \"ramda\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport getUpcomingEvent from \"../utils/get-upcoming-event\"\nimport formatDate from \"../utils/format-date\"\nimport TalkContent from \"../components/talk-content\"\nimport findSpeakersForTalk from \"../utils/find-speakers-for-talk\"\n\nconst PostPage = ({ post }) => (\n  <div>\n    <h2>\n      <Link to={post.fields.slug}>{post.frontmatter.title}</Link>\n    </h2>\n\n    {post.frontmatter.date && <p>{formatDate(post.frontmatter.date)}</p>}\n\n    <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    <hr />\n  </div>\n)\n\nconst IndexPage = ({ data }) => {\n  const talks = data.talks.edges.map(edge => edge.node)\n  const posts = data.posts ? data.posts.edges.map(edge => edge.node) : []\n\n  if (posts.length > 0) {\n    const sortedPosts = R.sortWith([R.descend(post => post.frontmatter.date)])(posts)\n\n    return (\n      <Layout>\n        {sortedPosts.map(post => (\n          <PostPage key={post.fields.slug} post={post} />\n        ))}\n      </Layout>\n    )\n  } else {\n    const today = new Date()\n\n    const upcomingEvent = getUpcomingEvent({ allEvents: talks, today })\n\n    const { speakers, locations } = data\n\n    const allSpeakers = speakers.edges.map(edge => edge.node)\n    const allLocations = locations.edges.map(edge => edge.node)\n\n    const location = R.filter(location => location.fields.locationId === upcomingEvent.frontmatter.location)(\n      allLocations\n    )[0]\n    const speakersOfTalk = findSpeakersForTalk({ allSpeakers, talk: upcomingEvent })\n\n    return (\n      <Layout>\n        <TalkContent talk={upcomingEvent} speakerList={speakersOfTalk} location={location} linkToDetailsPage={true} />\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    talks: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"talks\" } } }) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            date\n            speaker\n            location\n            poster {\n              childImageSharp {\n                sizes {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n          fields {\n            slug\n            sourceName\n          }\n        }\n      }\n    }\n\n    posts: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"posts\" } }, frontmatter: { show_on_frontpage: { eq: true } } }\n    ) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            date\n            show_on_frontpage\n          }\n          fields {\n            slug\n            sourceName\n          }\n        }\n      }\n    }\n\n    speakers: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"speakers\" } } }) {\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            name\n            pic\n            twitter_name\n          }\n          fields {\n            slug\n            speakerId\n          }\n        }\n      }\n    }\n\n    locations: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"locations\" } } }) {\n      edges {\n        node {\n          fields {\n            slug\n            locationId\n          }\n          frontmatter {\n            name\n            info\n            zip\n            city\n            street\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Link from \"gatsby-link\"\n\nimport { Container, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Collapse } from \"reactstrap\"\n\nconst LinkItem = ({ to, children }) => {\n  return (\n    <NavItem>\n      <NavLink\n        className=\"link-item\"\n        tag={props => {\n          return (\n            <Link {...props} to={to} activeClassName=\"active\">\n              {children}\n            </Link>\n          )\n        }}\n      />\n    </NavItem>\n  )\n}\n\nclass PageHeader extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      collapsed: false,\n    }\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapsed: !prevState.collapsed }))\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light expand=\"sm\">\n        <Container>\n          <NavbarBrand to=\"/\" tag={props => <Link {...props} />}>\n            Java User Group Görlitz\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n\n          <Collapse isOpen={this.state.collapsed} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <LinkItem to=\"/\">Aktuell</LinkItem>\n              <LinkItem to=\"/talks\">Vorträge</LinkItem>\n              <LinkItem to=\"/unterstuetzer\">Unterstützer</LinkItem>\n              <LinkItem to=\"/about\">About</LinkItem>\n              <LinkItem to=\"/mitmachen\">Mitmachen</LinkItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default PageHeader\n","import React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst PageFooter = () => (\n  <footer className=\"container footer\">\n    <p>\n      &copy; Manuel Mauky 2018 | <Link to=\"/impressum\">Impressum</Link> |{\" \"}\n      <Link to=\"/datenschutz\">Datenschutz</Link>\n    </p>\n  </footer>\n)\n\nexport default PageFooter\n","import React from \"react\"\nimport Img from \"gatsby-image\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport { faTwitter, faFacebook, faGooglePlus, faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { faEnvelope, faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { Container, Col, Row } from \"reactstrap\"\n\nconst Sidebar = ({ logo }) => (\n  <div className=\"sidebar\">\n    <Container>\n      <Row>\n        <Col sm=\"6\" xs=\"12\" md=\"12\">\n          <Img alt=\"Logo der JUG Görlitz\" fluid={logo.childImageSharp.fluid} />\n        </Col>\n        <Col sm=\"6\" xs=\"12\" md=\"12\">\n          <h3>\n            Wir sind Mitglied im\n            <br />\n            <a href=\"http://www.ijug.eu/\">iJUG Verband</a>\n          </h3>\n\n          <h3>Andere Medien</h3>\n          <ul className=\"list-unstyled\">\n            <li>\n              <a href=\"https://twitter.com/jug_gr\">\n                <FontAwesomeIcon icon={faTwitter} /> Twitter\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.facebook.com/juggr\">\n                <FontAwesomeIcon icon={faFacebook} /> Facebook\n              </a>\n            </li>\n            <li>\n              <a href=\"https://plus.google.com/+Jug-grDe\" rel=\"publisher\">\n                <FontAwesomeIcon icon={faGooglePlus} /> Google+\n              </a>\n            </li>\n            <li>\n              <a href=\"https://groups.google.com/d/forum/juggr\">\n                <FontAwesomeIcon icon={faEnvelope} /> Mailing-List\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/juggr\">\n                <FontAwesomeIcon icon={faGithub} /> Github\n              </a>\n            </li>\n            <li>\n              <a href=\"https://calendar.google.com/calendar/embed?src=gtgjid1tkrv0pl7o1hsqr3d8d8%40group.calendar.google.com&ctz=Europe/Berlin\">\n                <FontAwesomeIcon icon={faCalendarAlt} /> Kalender\n              </a>\n              <a href=\"https://www.google.com/calendar/ical/gtgjid1tkrv0pl7o1hsqr3d8d8%40group.calendar.google.com/public/basic.ics\">\n                (ICAL)\n              </a>\n            </li>\n          </ul>\n        </Col>\n      </Row>\n    </Container>\n\n    <br />\n\n    <a href=\"https://jax.de/\">\n      <img alt=\"Banner für die WJAX 2018\" className=\"img-responsive\" src=\"/images/jax_banner.png\" />\n    </a>\n\n    <br />\n\n    <p>Unterstützt durch:</p>\n    <a href=\"https://www.sogehtsoftware.de\">\n      <img alt=\"Logo von Saxonia Systems AG\" className=\"img-responsive\" src=\"/images/saxonia_logo.png\" />\n    </a>\n\n    <br />\n    <br />\n\n    <a href=\"https://mitp.de/\">\n      <img alt=\"Logo des mitp Verlags\" className=\"img-responsive\" src=\"/images/mitp_logo.jpeg\" />\n    </a>\n  </div>\n)\n\nexport default Sidebar\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport {Container, Row, Col} from \"reactstrap\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport \"../styles/style.css\"\n\nimport PageHeader from \"./page-header\"\nimport PageFooter from \"./page-footer\"\nimport Sidebar from \"./sidebar\"\n\nconst Layout = ({ children, data }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n\n          logo: file(relativePath:{eq: \"logo.png\"}) {\n            id\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              { name: \"description\", content: data.site.siteMetadata.description },\n              {\n                name: \"keywords\",\n                content: \"java, usergroup, görlitz, programmierung\",\n              },\n            ]}\n          />\n\n          <PageHeader />\n          <Container style={{\n            marginTop: \"1em\"\n          }}>\n            <Row>\n              <Col md=\"9\">\n                {children}\n              </Col>\n\n              <Col md=\"3\">\n                  <Sidebar logo={data.logo}/>\n              </Col>\n            </Row>\n          </Container>\n\n          <PageFooter />\n        </>\n      )}\n    />\n  )\n}\n\n\nexport default Layout\n","import moment from \"moment\"\n\nimport \"moment/locale/de\"\n\nmoment.locale(\"de\")\n\nconst formatDate = date => moment(date).format(\"LL\")\n\nexport default formatDate","import * as R from \"ramda\"\n\n/**\n * For each talk we cannot directly query the speaker info (especially the name) but only the speakerSlugs (not the full slug but the important\n * speaker-identifier with which we can create the slug)\n * we have to query all speakers in a separate query. Then we need to extract from this allSpeakers-list\n * only those speaker info objects that belong to a given talk. This is what this method is doing.\n *\n * @param allSpeakers an array of all speaker objects\n * @param talk a talk object\n */\nconst findSpeakersForTalk = ({ allSpeakers, talk }) => {\n  return R.innerJoin(\n    (speaker, slug) => speaker.fields.slug === `/speakers/${slug}/`,\n    allSpeakers,\n    talk.frontmatter.speaker\n  )\n}\n\nexport default findSpeakersForTalk","import moment from \"moment/moment\"\nimport * as R from \"ramda\"\n\n/**\n * This function is used to determine the next upcoming event based on a list of events and the current date.\n * This is used to mark the next event in the list of all events and to determine which talk to show on the front page.\n *\n * If there is no event in the list the is in the future of today, then the last event is used.\n *\n *\n * @param allEvents a list of events\n * @param extractDate an optional function to extract the date from the event objects.\n * If no function is provided then a property \"frontmatter.date\" is used based on the markdown standard\n * @param today a date object of today. Usualy created by \"new Date()\" or a string representing today.\n * Basically anything that can parsed by moment.js\n */\nconst getUpcomingEvent = ({ allEvents, extractDate, today }) => {\n  if(!allEvents) {\n    return undefined\n  }\n\n  const extractor = extractDate ? extractDate : edge => edge.frontmatter.date\n\n  const sortedEvents = R.sortBy(extractor)(allEvents)\n\n  if(sortedEvents.length === 1) {\n    return sortedEvents[0]\n  }\n\n  const todayMoment = moment(today)\n\n  const datesAfter = R.filter(event => {\n    const date = moment(extractor(event))\n\n    return todayMoment.isBefore(date)\n  })(sortedEvents)\n\n  if(datesAfter && datesAfter.length > 0) {\n    return datesAfter[0]\n  } else {\n    return R.reverse(sortedEvents)[0]\n  }\n}\n\nexport default getUpcomingEvent","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { Container, Col, Row } from \"reactstrap\"\n\nconst SpeakerProfile = ({ speaker }) => {\n  return (\n    <Container>\n      <Row>\n        {speaker.frontmatter.pic && (\n          <Col sm=\"6\" xs=\"12\" style={{textAlign: \"center\"}}>\n            <Link to={speaker.fields.slug}>\n              <img alt=\"speaker\" className=\"img-responsive\" src={speaker.frontmatter.pic} />\n            </Link>\n          </Col>\n        )}\n\n        <Col sm=\"6\" xs=\"12\">\n          <div>\n            <p>\n              <Link to={speaker.fields.slug}>\n                <strong>{speaker.frontmatter.name}</strong>\n              </Link>\n            </p>\n\n            {speaker.frontmatter.twitter_name && (\n              <p>\n                Twitter:{\" \"}\n                <a href={`https://twitter.com/${speaker.frontmatter.twitter_name}`}>{`@${\n                  speaker.frontmatter.twitter_name\n                }`}</a>\n              </p>\n            )}\n          </div>\n\n          <div className=\"description\" dangerouslySetInnerHTML={{ __html: speaker.html }} />\n        </Col>\n      </Row>\n    </Container>\n    // <div className=\"speaker-info\">\n    //   <div className=\"short-info\">\n    //     {speaker.frontmatter.pic && (\n    //       <Link to={speaker.fields.slug}>\n    //         <img className=\"event-poster\" alt=\"speaker\" src={`${speaker.frontmatter.pic}`} />\n    //       </Link>\n    //     )}\n    //     <p>\n    //       <Link to={speaker.fields.slug}>\n    //         <strong>{speaker.frontmatter.name}</strong>\n    //       </Link>\n    //     </p>\n    //     {speaker.frontmatter.twitter_name && (\n    //       <p>\n    //         Twitter:{\" \"}\n    //         <a href={`https://twitter.com/${speaker.frontmatter.twitter_name}`}>{`@${\n    //           speaker.frontmatter.twitter_name\n    //           }`}</a>\n    //       </p>\n    //     )}\n    //   </div>\n    //   <div className=\"description\" dangerouslySetInnerHTML={{ __html: speaker.html }} />\n    // </div>\n  )\n}\n\nexport default SpeakerProfile\n","import React from \"react\"\nimport formatDate from \"../utils/format-date\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { Link } from \"gatsby\"\n\nimport * as R from \"ramda\"\nimport SpeakerProfile from \"./speaker-profile\"\n\nimport Img from \"gatsby-image\"\n\nconst SpeakerHeadline = ({ speakerList }) => (\n  <span className=\"lead\">\n    von{\" \"}\n    {R.intersperse(\", \")(\n      speakerList.map(speaker => (\n        <Link key={speaker.fields.slug} to={speaker.fields.slug}>\n          {speaker.frontmatter.name}\n        </Link>\n      ))\n    )}\n  </span>\n)\n\nconst LocationInfo = ({ location }) => {\n  const { frontmatter } = location\n\n  return (\n    <Link to={location.fields.slug}>\n      <address>\n        {frontmatter.name}\n        <br />\n        {frontmatter.info && (\n          <>\n            {frontmatter.info}\n            <br />\n          </>\n        )}\n        {`${frontmatter.street} ${frontmatter.number}`}\n        <br />\n        {`${frontmatter.zip} ${frontmatter.city}`}\n        <br />\n      </address>\n    </Link>\n  )\n}\n\nconst TagsLine = ({ tags }) => {\n  if (tags) {\n    return (\n      <>\n        {R.intersperse(\", \")(\n          tags.map(tag => (\n            <Link key={tag} to={`/tags/#${tag}`}>\n              <FontAwesomeIcon icon={faTag} /> {tag}\n            </Link>\n          ))\n        )}\n      </>\n    )\n  } else {\n    return null\n  }\n}\n\nconst Headline = ({ talk, linkToDetailsPage }) => {\n  if (linkToDetailsPage) {\n    return (\n      <h2>\n        <Link to={talk.fields.slug}>{talk.frontmatter.title}</Link>\n      </h2>\n    )\n  } else {\n    return <h2>{talk.frontmatter.title}</h2>\n  }\n}\n\nconst TalkContent = ({ talk, speakerList, location, linkToDetailsPage }) => (\n  <>\n    <Headline talk={talk} linkToDetailsPage={linkToDetailsPage} />\n    <SpeakerHeadline speakerList={speakerList} /> | {formatDate(talk.frontmatter.date)}\n    <p>\n      <TagsLine tags={talk.frontmatter.tags} />\n    </p>\n    <article>\n      <div dangerouslySetInnerHTML={{ __html: talk.html }} />\n\n      {talk.frontmatter.poster && <Img sizes={talk.frontmatter.poster.childImageSharp.sizes} />}\n\n      <hr />\n\n      {speakerList.map(speaker => (\n        <SpeakerProfile key={speaker.id} speaker={speaker} />\n      ))}\n\n      <hr />\n\n      <div>\n        <p>Datum: {formatDate(talk.frontmatter.date)}, 19:00 Uhr</p>\n        Ort: {location ? <LocationInfo location={location} /> : <span>wird noch bekannt gegeben</span>}\n      </div>\n\n      <br />\n      <p>\n        Die Veranstaltung wird durch die <i>Java User Group Görlitz</i> (im{\" \"}\n        <a href=\"http://www.ijug.eu/\">iJUG Verband</a>) organisiert.\n      </p>\n    </article>\n  </>\n)\n\nexport default TalkContent\n"],"sourceRoot":""}