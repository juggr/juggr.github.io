{"version":3,"sources":["webpack:///./src/templates/speaker-page.js"],"names":["SpeakerPage","data","speaker","talks","frontmatter","name","pic","style","maxWidth","alt","fluid","childImageSharp","twitter_name","href","className","dangerouslySetInnerHTML","__html","html","edges","length","map","node","key","fields","slug","to","title"],"mappings":"4FAAA,6EAgDeA,UAzCK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAmBD,EAAnBC,QAASC,EAAUF,EAAVE,MAEjB,OACE,kBAAC,IAAD,KACE,4BAAKD,EAAQE,YAAYC,MAExBH,EAAQE,YAAYE,KACnB,yBAAKC,MAAO,CAAEC,SAAU,UACtB,kBAAC,IAAD,CAAKC,IAAI,UAAUC,MAAOR,EAAQE,YAAYE,IAAIK,gBAAgBD,SAIrER,EAAQE,YAAYQ,cACnB,sCACW,IACT,uBAAGC,KAAI,uBAAyBX,EAAQE,YAAYQ,cAApD,IACEV,EAAQE,YAAYQ,eAK1B,yBAAKE,UAAU,cAAcC,wBAAyB,CAAEC,OAAQd,EAAQe,QAExE,6BACCd,GACC,oCACGA,EAAMe,MAAMC,OADf,UAEE,4BACGhB,EAAMe,MAAME,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACf,wBAAIC,IAAKD,EAAKE,OAAOC,MACnB,kBAAC,OAAD,CAAMC,GAAIJ,EAAKE,OAAOC,MAAOH,EAAKjB,YAAYsB","file":"component---src-templates-speaker-page-js-0bdba605e079336cc7bd.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { graphql, Link } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nconst SpeakerPage = ({ data }) => {\r\n  const { speaker, talks } = data\r\n\r\n  return (\r\n    <Layout>\r\n      <h2>{speaker.frontmatter.name}</h2>\r\n\r\n      {speaker.frontmatter.pic && (\r\n        <div style={{ maxWidth: \"400px\"}}>\r\n          <Img alt=\"speaker\" fluid={speaker.frontmatter.pic.childImageSharp.fluid} />\r\n        </div>\r\n      )}\r\n\r\n      {speaker.frontmatter.twitter_name && (\r\n        <p>\r\n          Twitter:{\" \"}\r\n          <a href={`https://twitter.com/${speaker.frontmatter.twitter_name}`}>{`@${\r\n            speaker.frontmatter.twitter_name\r\n          }`}</a>\r\n        </p>\r\n      )}\r\n\r\n      <div className=\"description\" dangerouslySetInnerHTML={{ __html: speaker.html }} />\r\n\r\n      <hr />\r\n      {talks && (\r\n        <>\r\n          {talks.edges.length} Talks:\r\n          <ul>\r\n            {talks.edges.map(({ node }) => (\r\n              <li key={node.fields.slug}>\r\n                <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SpeakerPage\r\n\r\nexport const query = graphql`\r\n  query($speakerSlug: String!, $speakerId: String!) {\r\n    speaker: markdownRemark(fields: { slug: { eq: $speakerSlug } }) {\r\n      html\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        name\r\n        twitter_name\r\n        pic {\r\n          childImageSharp {\r\n            fluid(maxWidth: 400) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    talks: allMarkdownRemark(\r\n      filter: { fields: { sourceName: { eq: \"talks\" } }, frontmatter: { speaker: { eq: $speakerId } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}