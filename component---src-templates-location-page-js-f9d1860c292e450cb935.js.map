{"version":3,"sources":["webpack:///./src/components/talk-overview.js","webpack:///./src/templates/location-page.js"],"names":["TalkOverview","talks","length","map","talk","key","fields","slug","to","frontmatter","title","query","LocationPage","data","location","name","info","street","number","zip","city","edges","edge","node"],"mappings":"sMAiBeA,EAbM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,oCACGA,EAAMC,OADT,UAEE,4BACGD,EAAME,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,OAAOC,MACnB,kBAAC,OAAD,CAAMC,GAAIJ,EAAKE,OAAOC,MAAOH,EAAKK,YAAYC,cC0B3CC,GAFEC,UA3BM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdC,EAAoBD,EAApBC,SAAUb,EAAUY,EAAVZ,MAElB,OACE,kBAAC,IAAD,KACE,4BAAKa,EAASL,YAAYM,MAE1B,iCACGD,EAASL,YAAYM,KACtB,6BACCD,EAASL,YAAYO,MACpB,oCACGF,EAASL,YAAYO,KACtB,8BAGAF,EAASL,YAAYQ,OAT3B,IASqCH,EAASL,YAAYS,OACxD,6BACIJ,EAASL,YAAYU,IAX3B,IAWkCL,EAASL,YAAYW,KACrD,8BAEF,6BAECnB,GAAS,kBAAC,EAAD,CAAcA,MAAOA,EAAMoB,MAAMlB,KAAI,SAAAmB,GAAI,OAAIA,EAAKC,YAMhD","file":"component---src-templates-location-page-js-f9d1860c292e450cb935.js","sourcesContent":["import React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst TalkOverview = ({ talks }) => (\n  <>\n    {talks.length} Talks:\n    <ul>\n      {talks.map(talk => (\n        <li key={talk.fields.slug}>\n          <Link to={talk.fields.slug}>{talk.frontmatter.title}</Link>\n        </li>\n      ))}\n    </ul>\n  </>\n)\n\nexport default TalkOverview\n","import React from \"react\"\n\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport TalkOverview from \"../components/talk-overview\"\n\nconst LocationPage = ({ data }) => {\n  const { location, talks } = data\n\n  return (\n    <Layout>\n      <h2>{location.frontmatter.name}</h2>\n\n      <address>\n        {location.frontmatter.name}\n        <br />\n        {location.frontmatter.info && (\n          <>\n            {location.frontmatter.info}\n            <br />\n          </>\n        )}\n        {`${location.frontmatter.street} ${location.frontmatter.number}`}\n        <br />\n        {`${location.frontmatter.zip} ${location.frontmatter.city}`}\n        <br />\n      </address>\n      <hr />\n\n      {talks && <TalkOverview talks={talks.edges.map(edge => edge.node)} />}\n    </Layout>\n  )\n}\nexport default LocationPage\n\nexport const query = graphql`\n  query($locationSlug: String!, $locationId: String!) {\n    location: markdownRemark(fields: { slug: { eq: $locationSlug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        name\n        info\n        street\n        number\n        zip\n        city\n      }\n    }\n\n    talks: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"talks\" } }, frontmatter: { location: { eq: $locationId } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}