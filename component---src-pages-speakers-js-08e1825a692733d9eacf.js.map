{"version":3,"sources":["webpack:///./src/pages/speakers.js"],"names":["SpeakersPage","data","speakers","edges","map","edge","node","allTalks","talks","speakersWithTalks","speaker","talksOfSpeaker","R","talk","frontmatter","includes","fields","speakerId","speakersSorted","length","name","key","slug","to"],"mappings":"8FAAA,wGAsCeA,UA9BM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAWD,EAAKC,SAASC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAChDC,EAAWN,EAAKO,MAAML,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAE7CG,EAAoBP,EAASE,KAAI,SAAAM,GACrC,IAAMC,EAAiBC,KAAS,SAAAC,GAAI,OAAIA,EAAKC,YAAYJ,QAAQK,SAASL,EAAQM,OAAOC,aAAlEL,CAA8EL,GAErG,OAAO,OAAP,UAAYG,EAAZ,CAAqBF,MAAOG,OAGxBO,EAAiBN,IAAW,CAChCA,KAAU,SAAAF,GAAO,OAAIA,EAAQF,MAAMW,UACnCP,KAAS,SAAAF,GAAO,OAAIA,EAAQI,YAAYM,SAFnBR,CAGpBH,GAEH,OACE,kBAAC,IAAD,KACE,4CAEA,4BACGS,EAAed,KAAI,SAAAM,GAAO,OACzB,wBAAIW,IAAKX,EAAQM,OAAOM,MACtB,kBAAC,OAAD,CAAMC,GAAIb,EAAQM,OAAOM,MAAOZ,EAAQI,YAAYM,MADtD,KACqEV,EAAQF,MAAMW,OADnF","file":"component---src-pages-speakers-js-08e1825a692733d9eacf.js","sourcesContent":["import React from \"react\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport * as R from \"ramda\"\n\nconst SpeakersPage = ({ data }) => {\n  const speakers = data.speakers.edges.map(edge => edge.node)\n  const allTalks = data.talks.edges.map(edge => edge.node)\n\n  const speakersWithTalks = speakers.map(speaker => {\n    const talksOfSpeaker = R.filter(talk => talk.frontmatter.speaker.includes(speaker.fields.speakerId))(allTalks)\n\n    return { ...speaker, talks: talksOfSpeaker }\n  })\n\n  const speakersSorted = R.sortWith([\n    R.descend(speaker => speaker.talks.length),\n    R.ascend(speaker => speaker.frontmatter.name),\n  ])(speakersWithTalks)\n\n  return (\n    <Layout>\n      <h2>Alle Speaker</h2>\n\n      <ul>\n        {speakersSorted.map(speaker => (\n          <li key={speaker.fields.slug}>\n            <Link to={speaker.fields.slug}>{speaker.frontmatter.name}</Link> ({speaker.talks.length} Talks)\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default SpeakersPage\n\nexport const query = graphql`\n  query {\n    speakers: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"speakers\" } } }) {\n      edges {\n        node {\n          fields {\n            slug\n            speakerId\n          }\n\n          frontmatter {\n            name\n          }\n        }\n      }\n    }\n\n    talks: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"talks\" } } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            speaker\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}