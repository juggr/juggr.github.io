{"version":3,"sources":["webpack:///./src/pages/speakers.js"],"names":["SpeakersPage","data","speakers","edges","map","edge","node","allTalks","talks","speakersWithTalks","speaker","talksOfSpeaker","R","talk","frontmatter","includes","fields","speakerId","speakersSorted","length","name","key","slug","to"],"mappings":"8FAAA,wGAsCeA,UA9BM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChBC,EAAWD,EAAKC,SAASC,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAChDC,EAAWN,EAAKO,MAAML,MAAMC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,QAE7CG,EAAoBP,EAASE,KAAI,SAAAM,GACrC,IAAMC,EAAiBC,KAAS,SAAAC,GAAI,OAAIA,EAAKC,YAAYJ,QAAQK,SAASL,EAAQM,OAAOC,aAAlEL,CAA8EL,GAErG,OAAO,OAAP,UAAYG,EAAZ,CAAqBF,MAAOG,OAGxBO,EAAiBN,IAAW,CAChCA,KAAU,SAAAF,GAAO,OAAIA,EAAQF,MAAMW,UACnCP,KAAS,SAAAF,GAAO,OAAIA,EAAQI,YAAYM,SAFnBR,CAGpBH,GAEH,OACE,kBAAC,IAAD,KACE,4CAEA,4BACGS,EAAed,KAAI,SAAAM,GAAO,OACzB,wBAAIW,IAAKX,EAAQM,OAAOM,MACtB,kBAAC,OAAD,CAAMC,GAAIb,EAAQM,OAAOM,MAAOZ,EAAQI,YAAYM,MADtD,KACqEV,EAAQF,MAAMW,OADnF","file":"component---src-pages-speakers-js-08e1825a692733d9eacf.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { graphql, Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nimport * as R from \"ramda\"\r\n\r\nconst SpeakersPage = ({ data }) => {\r\n  const speakers = data.speakers.edges.map(edge => edge.node)\r\n  const allTalks = data.talks.edges.map(edge => edge.node)\r\n\r\n  const speakersWithTalks = speakers.map(speaker => {\r\n    const talksOfSpeaker = R.filter(talk => talk.frontmatter.speaker.includes(speaker.fields.speakerId))(allTalks)\r\n\r\n    return { ...speaker, talks: talksOfSpeaker }\r\n  })\r\n\r\n  const speakersSorted = R.sortWith([\r\n    R.descend(speaker => speaker.talks.length),\r\n    R.ascend(speaker => speaker.frontmatter.name),\r\n  ])(speakersWithTalks)\r\n\r\n  return (\r\n    <Layout>\r\n      <h2>Alle Speaker</h2>\r\n\r\n      <ul>\r\n        {speakersSorted.map(speaker => (\r\n          <li key={speaker.fields.slug}>\r\n            <Link to={speaker.fields.slug}>{speaker.frontmatter.name}</Link> ({speaker.talks.length} Talks)\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default SpeakersPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    speakers: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"speakers\" } } }) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            speakerId\r\n          }\r\n\r\n          frontmatter {\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    talks: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"talks\" } } }) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            speaker\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}