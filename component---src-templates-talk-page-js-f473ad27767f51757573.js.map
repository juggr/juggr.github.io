{"version":3,"sources":["webpack:///./src/templates/talk-page.js","webpack:///./src/utils/format-date.js","webpack:///./src/components/speaker-profile.js","webpack:///./src/components/talk-content.js"],"names":["_ref","data","talk","speakers","location","speakerList","edges","map","edge","node","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_talk_content__WEBPACK_IMPORTED_MODULE_2__","linkToDetailsPage","query","moment__WEBPACK_IMPORTED_MODULE_0___default","locale","__webpack_exports__","date","format","259","e","t","n","r","l","c","m","i","u","o","s","E","speaker_profile","speaker","react_default","reactstrap_es","d","k","frontmatter","pic","b","sm","xs","style","textAlign","maxWidth","gatsby_browser_entry","Link","to","fields","slug","gatsby_image_default","alt","fluid","childImageSharp","name","twitter_name","href","className","dangerouslySetInnerHTML","__html","html","talk_content_SpeakerHeadline","es","intersperse","key","talk_content_LocationInfo","_ref2","info","Fragment","street","number","zip","city","talk_content_TagsLine","_ref3","tags","tag","index_es","icon","free_solid_svg_icons_index_es","talk_content_Headline","_ref4","title","_ref5","Object","format_date","poster","id"],"mappings":"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","file":"component---src-templates-talk-page-js-f473ad27767f51757573.js","sourcesContent":["import React from \"react\"\r\n\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\n\r\nimport TalkContent from \"../components/talk-content\"\r\n\r\nconst TalkPage = ({ data }) => {\r\n  const { talk, speakers, location } = data\r\n\r\n  const speakerList = speakers.edges.map(edge => edge.node)\r\n\r\n  return (\r\n    <Layout>\r\n      <TalkContent talk={talk} speakerList={speakerList} location={location} linkToDetailsPage={false} />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default TalkPage\r\n\r\nexport const query = graphql`\r\n  query($slug: String!, $speakerSlugs: [String]!, $locationSlug: String!) {\r\n    talk: markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        title\r\n        date\r\n        tags\r\n        poster {\r\n          childImageSharp {\r\n            fluid {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    speakers: allMarkdownRemark(\r\n      filter: { fields: { slug: { in: $speakerSlugs } } }\r\n      sort: { fields: frontmatter___name, order: ASC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          html\r\n          frontmatter {\r\n            name\r\n            pic {\r\n              childImageSharp {\r\n                fluid(maxWidth: 400) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            twitter_name\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    location: markdownRemark(fields: { slug: { eq: $locationSlug } }) {\r\n      fields {\r\n        slug\r\n      }\r\n      frontmatter {\r\n        name\r\n        number\r\n        info\r\n        zip\r\n        city\r\n        street\r\n      }\r\n    }\r\n  }\r\n`\r\n","import moment from \"moment\"\r\n\r\nimport \"moment/locale/de\"\r\n\r\nmoment.locale(\"de\")\r\n\r\nconst formatDate = date => moment(date).format(\"LL\")\r\n\r\nexport default formatDate","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Img from \"gatsby-image\"\r\n\r\nimport { Container, Col, Row } from \"reactstrap\"\r\n\r\nconst SpeakerProfile = ({ speaker }) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {speaker.frontmatter.pic && (\r\n          <Col sm=\"6\" xs=\"12\" style={{textAlign: \"center\", maxWidth: \"400px\"}}>\r\n            <Link to={speaker.fields.slug}>\r\n              <Img alt=\"speaker\" fluid={speaker.frontmatter.pic.childImageSharp.fluid} />\r\n            </Link>\r\n          </Col>\r\n        )}\r\n\r\n        <Col sm=\"6\" xs=\"12\">\r\n          <div>\r\n            <p>\r\n              <Link to={speaker.fields.slug}>\r\n                <strong>{speaker.frontmatter.name}</strong>\r\n              </Link>\r\n            </p>\r\n\r\n            {speaker.frontmatter.twitter_name && (\r\n              <p>\r\n                Twitter:{\" \"}\r\n                <a href={`https://twitter.com/${speaker.frontmatter.twitter_name}`}>{`@${\r\n                  speaker.frontmatter.twitter_name\r\n                }`}</a>\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"description\" dangerouslySetInnerHTML={{ __html: speaker.html }} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SpeakerProfile\r\n","import React from \"react\"\r\nimport formatDate from \"../utils/format-date\"\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport { Link } from \"gatsby\"\r\n\r\nimport * as R from \"ramda\"\r\nimport SpeakerProfile from \"./speaker-profile\"\r\n\r\nimport Img from \"gatsby-image\"\r\n\r\nconst SpeakerHeadline = ({ speakerList }) => (\r\n  <span className=\"lead\">\r\n    von{\" \"}\r\n    {R.intersperse(\", \")(\r\n      speakerList.map(speaker => (\r\n        <Link key={speaker.fields.slug} to={speaker.fields.slug}>\r\n          {speaker.frontmatter.name}\r\n        </Link>\r\n      ))\r\n    )}\r\n  </span>\r\n)\r\n\r\nconst LocationInfo = ({ location }) => {\r\n  const { frontmatter } = location\r\n\r\n  return (\r\n    <Link to={location.fields.slug}>\r\n      <address>\r\n        {frontmatter.name}\r\n        <br />\r\n        {frontmatter.info && (\r\n          <>\r\n            {frontmatter.info}\r\n            <br />\r\n          </>\r\n        )}\r\n        {`${frontmatter.street} ${frontmatter.number}`}\r\n        <br />\r\n        {`${frontmatter.zip} ${frontmatter.city}`}\r\n        <br />\r\n      </address>\r\n    </Link>\r\n  )\r\n}\r\n\r\nconst TagsLine = ({ tags }) => {\r\n  if (tags) {\r\n    return (\r\n      <>\r\n        {R.intersperse(\", \")(\r\n          tags.map(tag => (\r\n            <Link key={tag} to={`/tags/#${tag}`}>\r\n              <FontAwesomeIcon icon={faTag} /> {tag}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nconst Headline = ({ talk, linkToDetailsPage }) => {\r\n  if (linkToDetailsPage) {\r\n    return (\r\n      <h2>\r\n        <Link to={talk.fields.slug}>{talk.frontmatter.title}</Link>\r\n      </h2>\r\n    )\r\n  } else {\r\n    return <h2>{talk.frontmatter.title}</h2>\r\n  }\r\n}\r\n\r\nconst TalkContent = ({ talk, speakerList, location, linkToDetailsPage }) => (\r\n  <>\r\n    <Headline talk={talk} linkToDetailsPage={linkToDetailsPage} />\r\n    <SpeakerHeadline speakerList={speakerList} /> | {formatDate(talk.frontmatter.date)}\r\n    <p>\r\n      <TagsLine tags={talk.frontmatter.tags} />\r\n    </p>\r\n    <article className=\"talk-content\">\r\n      <div dangerouslySetInnerHTML={{ __html: talk.html }} />\r\n\r\n      {talk.frontmatter.poster && <Img fluid={talk.frontmatter.poster.childImageSharp.fluid} />}\r\n\r\n      <hr />\r\n\r\n      {speakerList.map(speaker => (\r\n        <SpeakerProfile key={speaker.id} speaker={speaker} />\r\n      ))}\r\n\r\n      <hr />\r\n\r\n      <div>\r\n        <p>Datum: {formatDate(talk.frontmatter.date)}, 19:00 Uhr</p>\r\n        Ort: {location ? <LocationInfo location={location} /> : <span>wird noch bekannt gegeben</span>}\r\n      </div>\r\n\r\n      <br />\r\n      <p>\r\n        Die Veranstaltung wird durch die <i>Java User Group Görlitz</i> (im{\" \"}\r\n        <a href=\"http://www.ijug.eu/\">iJUG Verband</a>) organisiert.\r\n      </p>\r\n    </article>\r\n  </>\r\n)\r\n\r\nexport default TalkContent\r\n"],"sourceRoot":""}