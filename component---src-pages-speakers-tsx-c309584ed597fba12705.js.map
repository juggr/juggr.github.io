{"version":3,"file":"component---src-pages-speakers-tsx-c309584ed597fba12705.js","mappings":"mNAsCA,UA9BqBA,IAAc,IAAb,KAAEC,GAAM,EAC5B,MAAMC,EAAWD,EAAKC,SAASC,MAAMC,KAAKC,GAASA,EAAKC,OAClDC,EAAWN,EAAKO,MAAML,MAAMC,KAAKC,GAASA,EAAKC,OAE/CG,EAAoBP,EAASE,KAAKM,IACtC,MAAMC,EAAiBC,EAAAA,KAAUC,GAASA,EAAKC,YAAYJ,QAAQK,SAASL,EAAQM,OAAOC,YAApEL,CAAgFL,GAEvG,MAAO,IAAKG,EAASF,MAAOG,EAAgB,IAGxCO,EAAiBN,EAAAA,IAAW,CAChCA,EAAAA,KAAWF,GAAYA,EAAQF,MAAMW,SACrCP,EAAAA,KAAUF,GAAYA,EAAQI,YAAYM,QAFrBR,CAGpBH,GAEH,OACEY,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAAA,KAAAA,KAAAA,gBAEAA,EAAAA,cAAAA,KAAAA,KACGH,EAAed,KAAKM,GACnBW,EAAAA,cAAAA,KAAAA,CAAIE,IAAKb,EAAQM,OAAOQ,MACtBH,EAAAA,cAACI,EAAAA,KAAI,CAACC,GAAIhB,EAAQM,OAAOQ,MAAOd,EAAQI,YAAYM,MAAY,KAAGV,EAAQF,MAAMW,OAAM,cAItF,C","sources":["webpack://jug-goerlitz/./src/pages/speakers.tsx"],"sourcesContent":["import React from \"react\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport * as R from \"ramda\"\n\nconst SpeakersPage = ({ data }) => {\n  const speakers = data.speakers.edges.map((edge) => edge.node)\n  const allTalks = data.talks.edges.map((edge) => edge.node)\n\n  const speakersWithTalks = speakers.map((speaker) => {\n    const talksOfSpeaker = R.filter((talk) => talk.frontmatter.speaker.includes(speaker.fields.speakerId))(allTalks)\n\n    return { ...speaker, talks: talksOfSpeaker }\n  })\n\n  const speakersSorted = R.sortWith([\n    R.descend((speaker) => speaker.talks.length),\n    R.ascend((speaker) => speaker.frontmatter.name),\n  ])(speakersWithTalks)\n\n  return (\n    <Layout>\n      <h2>Alle Speaker</h2>\n\n      <ul>\n        {speakersSorted.map((speaker) => (\n          <li key={speaker.fields.slug}>\n            <Link to={speaker.fields.slug}>{speaker.frontmatter.name}</Link> ({speaker.talks.length} Talks)\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  )\n}\n\nexport default SpeakersPage\n\nexport const query = graphql`\n  query {\n    speakers: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"speakers\" } } }) {\n      edges {\n        node {\n          fields {\n            slug\n            speakerId\n          }\n\n          frontmatter {\n            name\n          }\n        }\n      }\n    }\n\n    talks: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"talks\" } } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            speaker\n          }\n        }\n      }\n    }\n  }\n`\n\nexport { Head } from \"../components/head\"\n"],"names":["_ref","data","speakers","edges","map","edge","node","allTalks","talks","speakersWithTalks","speaker","talksOfSpeaker","R","talk","frontmatter","includes","fields","speakerId","speakersSorted","length","name","React","Layout","key","slug","Link","to"],"sourceRoot":""}