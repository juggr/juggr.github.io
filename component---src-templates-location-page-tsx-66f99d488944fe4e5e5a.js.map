{"version":3,"file":"component---src-templates-location-page-tsx-66f99d488944fe4e5e5a.js","mappings":"yKAIO,MAAMA,EAAe,IAExBC,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAAA,2BACAA,EAAAA,cAAAA,OAAAA,CACEC,KAAK,cACLC,QAAQ,yHAEVF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,WAAWC,QAAQ,6CAC9BF,EAAAA,cAAAA,QAAAA,KAAQG,EAAAA,GAAAA,IAAAA,O,8CCId,IAbqBC,IAAAA,IAAC,MAAEC,GAAO,SAC7BL,EAAAA,cAAAA,EAAAA,SAAAA,KACGK,EAAMC,OAAM,UACbN,EAAAA,cAAAA,KAAAA,KACGK,EAAME,KAAKC,GACVR,EAAAA,cAAAA,KAAAA,CAAIS,IAAKD,EAAKE,OAAOC,MACnBX,EAAAA,cAACY,EAAAA,KAAI,CAACC,GAAIL,EAAKE,OAAOC,MAAOH,EAAKM,YAAYC,WAInD,C,8GCoBL,UA3BqBX,IAAc,IAAb,KAAEY,GAAM,EAC5B,MAAM,SAAEC,EAAQ,MAAEZ,GAAUW,EAE5B,OACEhB,EAAAA,cAACkB,EAAAA,EAAM,KACLlB,EAAAA,cAAAA,KAAAA,KAAKiB,EAASH,YAAYb,MAE1BD,EAAAA,cAAAA,UAAAA,KACGiB,EAASH,YAAYb,KACtBD,EAAAA,cAAAA,KAAAA,MACCiB,EAASH,YAAYK,MACpBnB,EAAAA,cAAAA,EAAAA,SAAAA,KACGiB,EAASH,YAAYK,KACtBnB,EAAAA,cAAAA,KAAAA,OAGF,GAAEiB,EAASH,YAAYM,UAAUH,EAASH,YAAYO,SACxDrB,EAAAA,cAAAA,KAAAA,MACE,GAAEiB,EAASH,YAAYQ,OAAOL,EAASH,YAAYS,OACrDvB,EAAAA,cAAAA,KAAAA,OAEFA,EAAAA,cAAAA,KAAAA,MAECK,GAASL,EAAAA,cAACwB,EAAAA,EAAY,CAACnB,MAAOA,EAAMoB,MAAMlB,KAAKmB,GAASA,EAAKC,SACvD,C","sources":["webpack://jug-goerlitz/./src/components/head.tsx","webpack://jug-goerlitz/./src/components/talk-overview.tsx","webpack://jug-goerlitz/./src/templates/location-page.tsx"],"sourcesContent":["import React from \"react\"\nimport fontawesome from \"@fortawesome/fontawesome\"\nimport { HeadFC } from \"gatsby\"\n\nexport const Head: HeadFC = () => {\n  return (\n    <>\n      <title>Java User Group Görlitz</title>\n      <meta\n        name=\"description\"\n        content=\"Website der JUG Görlitz. Wir organisieren regelmäßige kostenfreie Vorträge rund um das Thema Programmierung und Java\"\n      />\n      <meta name=\"keywords\" content=\"java, usergroup, görlitz, programmierung\" />\n      <style>{fontawesome.dom.css()}</style>\n    </>\n  )\n}\n","import React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst TalkOverview = ({ talks }) => (\n  <>\n    {talks.length} Talks:\n    <ul>\n      {talks.map((talk) => (\n        <li key={talk.fields.slug}>\n          <Link to={talk.fields.slug}>{talk.frontmatter.title}</Link>\n        </li>\n      ))}\n    </ul>\n  </>\n)\n\nexport default TalkOverview\n","import React from \"react\"\n\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport TalkOverview from \"../components/talk-overview\"\n\nconst LocationPage = ({ data }) => {\n  const { location, talks } = data\n\n  return (\n    <Layout>\n      <h2>{location.frontmatter.name}</h2>\n\n      <address>\n        {location.frontmatter.name}\n        <br />\n        {location.frontmatter.info && (\n          <>\n            {location.frontmatter.info}\n            <br />\n          </>\n        )}\n        {`${location.frontmatter.street} ${location.frontmatter.number}`}\n        <br />\n        {`${location.frontmatter.zip} ${location.frontmatter.city}`}\n        <br />\n      </address>\n      <hr />\n\n      {talks && <TalkOverview talks={talks.edges.map((edge) => edge.node)} />}\n    </Layout>\n  )\n}\nexport default LocationPage\n\nexport const query = graphql`\n  query ($locationSlug: String!, $locationId: String!) {\n    location: markdownRemark(fields: { slug: { eq: $locationSlug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        name\n        info\n        street\n        number\n        zip\n        city\n      }\n    }\n    talks: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"talks\" } }, frontmatter: { location: { eq: $locationId } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport { Head } from \"../components/head\"\n"],"names":["Head","React","name","content","fontawesome","_ref","talks","length","map","talk","key","fields","slug","Link","to","frontmatter","title","data","location","Layout","info","street","number","zip","city","TalkOverview","edges","edge","node"],"sourceRoot":""}