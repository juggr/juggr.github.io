{"componentChunkName":"component---src-templates-talk-page-tsx","path":"/talks/2018-01-31-system_of_systems/","result":{"data":{"talk":{"html":"<p>Beim Bauen monolithischer Systeme nutzen Entwicklerteams eine Reihe typischer Muster um die Interaktion verschiedener\nSystemteile zu implementieren. Behält man diese Interaktionsmuster bei, während man ein System in verschiedene aufteilt,\nergeben sich oft große Komplexität und architektonische Nachteile, die oft die ursprüngliche Idee, die hinter der\nAufteilung stand, konterkarieren.</p>\n<p>Der Vortrag betrachtet ein konkretes Beispiel von Modulinteraktion in einem monolithischen System und identifiziert die\nProblemstellungen die sich ergeben, wenn man dieses System in exakt dem gleichen Interaktionsstil aufteilt. Danach wird\neine alternative Implementierungsstrategie für das monolithische System diskutiert, die die Modularität des\nUrsprungssystems stark verbessert und im Falle einer Aufteilung in unabhängige Teilsysteme zu einer besseren Architektur\nführt.</p>\n<p><strong>Materialien:</strong></p>\n<ul>\n<li><a href=\"https://speakerdeck.com/olivergierke/refactoring-to-a-system-of-systems\">Folien zum Vortrag</a></li>\n</ul>","fields":{"slug":"/talks/2018-01-31-system_of_systems/"},"frontmatter":{"title":"Refactoring to a System of Systems","date":"2018-01-31T00:00:00.000Z","time":null,"virtual":null,"tags":["architektur"],"poster":{"childImageSharp":{"id":"9685adbf-d27b-5f98-934a-54d7dc3fcdb8","gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#383898","images":{"fallback":{"src":"/static/88afeee4b9b4d069f5896633d252a8d6/242cd/plakat_2018_01.png","srcSet":"/static/88afeee4b9b4d069f5896633d252a8d6/0e3b9/plakat_2018_01.png 750w,\n/static/88afeee4b9b4d069f5896633d252a8d6/e5839/plakat_2018_01.png 1080w,\n/static/88afeee4b9b4d069f5896633d252a8d6/242cd/plakat_2018_01.png 1241w","sizes":"100vw"},"sources":[{"srcSet":"/static/88afeee4b9b4d069f5896633d252a8d6/ebc34/plakat_2018_01.webp 750w,\n/static/88afeee4b9b4d069f5896633d252a8d6/0671f/plakat_2018_01.webp 1080w,\n/static/88afeee4b9b4d069f5896633d252a8d6/cbc2f/plakat_2018_01.webp 1241w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.4141821112006447}}},"poster_alt":"Poster: Wir sehen Jürgen über die Schulter, wie er einen Bauplan in der Hand hält und mit einer Schere in kleinere Stücke zerschneidet."}},"speakers":{"edges":[{"node":{"id":"8402dc7e-d767-5b77-8ca3-ff9c967248fb","html":"<p><strong>Oliver Drotbohm</strong> ist Teil des Spring Engineering Teams bei VMware. Seine Arbeitsschwerpunkte liegen im Bereich Softwarearchitektur, Domain-Driven Design, REST, Spring und Persistenztechnologien. Sein neues Buch \"Modulithic Applications with Spring\" erscheint 2023.</p>","frontmatter":{"name":"Oliver Drotbohm","pic":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/bc32a8e1242b1987951435e5d8008305/d6138/oliver_drotbohm.png","srcSet":"/static/bc32a8e1242b1987951435e5d8008305/15e42/oliver_drotbohm.png 100w,\n/static/bc32a8e1242b1987951435e5d8008305/5aead/oliver_drotbohm.png 200w,\n/static/bc32a8e1242b1987951435e5d8008305/d6138/oliver_drotbohm.png 400w","sizes":"(min-width: 400px) 400px, 100vw"},"sources":[{"srcSet":"/static/bc32a8e1242b1987951435e5d8008305/d8057/oliver_drotbohm.webp 100w,\n/static/bc32a8e1242b1987951435e5d8008305/2e34e/oliver_drotbohm.webp 200w,\n/static/bc32a8e1242b1987951435e5d8008305/416c3/oliver_drotbohm.webp 400w","type":"image/webp","sizes":"(min-width: 400px) 400px, 100vw"}]},"width":400,"height":400}}},"twitter_name":"odrotbohm"},"fields":{"slug":"/speakers/oliver_drotbohm/"}}}]},"location":{"fields":{"slug":"/locations/saxsys/"},"frontmatter":{"name":"Saxonia Systems AG","number":"63","info":null,"zip":"02826","city":"Görlitz","street":"Berliner Straße"}}},"pageContext":{"slug":"/talks/2018-01-31-system_of_systems/","speakerSlugs":["/speakers/oliver_drotbohm/"],"locationSlug":"/locations/saxsys/"}},"staticQueryHashes":[],"slicesMap":{}}