{"version":3,"sources":["webpack:///./src/pages/posters.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_6__","PostersPage","_ref","talkNodes","data","talks","edges","map","edge","node","filter","frontmatter","poster","a","createElement","md","sm","style","margin","id","childImageSharp","key","to","fields","slug","border","fluid"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,IAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAAO,EAAAG,GAAAE,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAsCee,UA5BK,SAAAC,GAAc,IAG1BC,EAH0BD,EAAXE,KACbC,MAEgBC,MAAMC,IAAI,SAAAC,GAAI,OAAIA,EAAKC,OAAMC,OAAO,SAAAD,GAAI,OAAIA,EAAKE,YAAYC,SAErF,OACEpB,EAAAqB,EAAAC,cAACnB,EAAA,EAAD,KACEH,EAAAqB,EAAAC,cAAA,8BACAtB,EAAAqB,EAAAC,cAAChB,EAAA,EAAD,KACEN,EAAAqB,EAAAC,cAACf,EAAA,EAAD,KAEAI,EAAUI,IAAI,SAAAE,GAAI,OAChBjB,EAAAqB,EAAAC,cAACd,EAAA,EAAD,CAAKe,GAAI,EAAGC,GAAI,IACdxB,EAAAqB,EAAAC,cAAA,OAAKG,MAAO,CAACC,OAAQ,WAAYC,GAAIV,EAAKE,YAAYC,OAAOQ,gBAAgBD,GAAIE,IAAKZ,EAAKU,IACzF3B,EAAAqB,EAAAC,cAACpB,EAAA,KAAD,CAAM4B,GAAIb,EAAKc,OAAOC,MACpBhC,EAAAqB,EAAAC,cAACjB,EAAAgB,EAAD,CAAKI,MAAO,CAAEQ,OAAQ,kBAAmBC,MAAOjB,EAAKE,YAAYC,OAAOQ,gBAAgBM,iBAejG,IAAMpC,EAAK","file":"component---src-pages-posters-js-7fe776d2b590d601344e.js","sourcesContent":["import React from \"react\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport Img from \"gatsby-image\"\n\nimport { Container, Col, RowÂ } from \"reactstrap\"\n\nconst PostersPage = ({ data }) => {\n  const { talks } = data\n\n  const talkNodes = talks.edges.map(edge => edge.node).filter(node => node.frontmatter.poster)\n\n  return (\n    <Layout>\n      <h2>Alle JUG-Plakate</h2>\n      <Container>\n        <Row>\n      {\n        talkNodes.map(node => (\n          <Col md={6} sm={12}>\n            <div style={{margin: \".5rem 0\"}} id={node.frontmatter.poster.childImageSharp.id} key={node.id}>\n              <Link to={node.fields.slug}>\n                <Img style={{ border: \"solid 1px #aaa\"}} fluid={node.frontmatter.poster.childImageSharp.fluid} />\n              </Link>\n            </div>\n          </Col>\n        ))\n      }\n        </Row>\n      </Container>\n\n    </Layout>\n  )\n}\n\nexport default PostersPage\n\nexport const query = graphql`\n  query {\n    talks: allMarkdownRemark(\n      sort: { fields: frontmatter___date,  order: DESC}\n      filter: { \n        fields: { sourceName: { in: [\"talks\", \"posts\"] } } \n      }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            speaker\n            poster {\n              childImageSharp {\n                id\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}