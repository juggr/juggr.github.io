{"version":3,"sources":["webpack:///./src/components/talk-overview.js","webpack:///./src/templates/location-page.js"],"names":["TalkOverview","_ref","talks","react_default","a","createElement","Fragment","length","map","talk","key","fields","slug","gatsby_browser_entry","to","frontmatter","title","LocationPage","data","location","layout","name","info","street","number","zip","city","talk_overview","edges","edge","node","query"],"mappings":"6IAiBeA,EAbM,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAH,OACnBC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGJ,EAAMK,OADT,UAEEJ,EAAAC,EAAAC,cAAA,UACGH,EAAMM,IAAI,SAAAC,GAAI,OACbN,EAAAC,EAAAC,cAAA,MAAIK,IAAKD,EAAKE,OAAOC,MACnBT,EAAAC,EAAAC,cAACQ,EAAA,KAAD,CAAMC,GAAIL,EAAKE,OAAOC,MAAOH,EAAKM,YAAYC,iDCwBzCC,UA3BM,SAAAhB,GAAc,IAAXiB,EAAWjB,EAAXiB,KACdC,EAAoBD,EAApBC,SAAUjB,EAAUgB,EAAVhB,MAElB,OACEC,EAAAC,EAAAC,cAACe,EAAA,EAAD,KACEjB,EAAAC,EAAAC,cAAA,UAAKc,EAASJ,YAAYM,MAE1BlB,EAAAC,EAAAC,cAAA,eACGc,EAASJ,YAAYM,KACtBlB,EAAAC,EAAAC,cAAA,WACCc,EAASJ,YAAYO,MACpBnB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACGa,EAASJ,YAAYO,KACtBnB,EAAAC,EAAAC,cAAA,YAGAc,EAASJ,YAAYQ,OAT3B,IASqCJ,EAASJ,YAAYS,OACxDrB,EAAAC,EAAAC,cAAA,WACIc,EAASJ,YAAYU,IAX3B,IAWkCN,EAASJ,YAAYW,KACrDvB,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,WAECH,GAASC,EAAAC,EAAAC,cAACsB,EAAD,CAAczB,MAAOA,EAAM0B,MAAMpB,IAAI,SAAAqB,GAAI,OAAIA,EAAKC,WAvBlE,IA6BaC,EAAK","file":"component---src-templates-location-page-js-41db38b5d59aa900d33b.js","sourcesContent":["import React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst TalkOverview = ({ talks }) => (\n  <>\n    {talks.length} Talks:\n    <ul>\n      {talks.map(talk => (\n        <li key={talk.fields.slug}>\n          <Link to={talk.fields.slug}>{talk.frontmatter.title}</Link>\n        </li>\n      ))}\n    </ul>\n  </>\n)\n\nexport default TalkOverview\n","import React from \"react\"\n\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport TalkOverview from \"../components/talk-overview\"\n\nconst LocationPage = ({ data }) => {\n  const { location, talks } = data\n\n  return (\n    <Layout>\n      <h2>{location.frontmatter.name}</h2>\n\n      <address>\n        {location.frontmatter.name}\n        <br />\n        {location.frontmatter.info && (\n          <>\n            {location.frontmatter.info}\n            <br />\n          </>\n        )}\n        {`${location.frontmatter.street} ${location.frontmatter.number}`}\n        <br />\n        {`${location.frontmatter.zip} ${location.frontmatter.city}`}\n        <br />\n      </address>\n      <hr />\n\n      {talks && <TalkOverview talks={talks.edges.map(edge => edge.node)} />}\n    </Layout>\n  )\n}\nexport default LocationPage\n\nexport const query = graphql`\n  query($locationSlug: String!, $locationId: String!) {\n    location: markdownRemark(fields: { slug: { eq: $locationSlug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        name\n        info\n        street\n        number\n        zip\n        city\n      }\n    }\n\n    talks: allMarkdownRemark(\n      filter: { fields: { sourceName: { eq: \"talks\" } }, frontmatter: { location: { eq: $locationId } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}