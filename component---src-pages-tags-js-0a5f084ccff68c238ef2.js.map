{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/pages/tags.js","webpack:///./src/components/page-header.js","webpack:///./src/components/page-footer.js","webpack:///./src/components/sidebar.js","webpack:///./src/components/layout.js","webpack:///./content/images/logo.png","webpack:///./content/images/jax20_banner.jpg","webpack:///./src/utils/format-date.js","webpack:///./src/utils/find-speakers-for-talk.js"],"names":["Badge_Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","Object","objectWithoutPropertiesLoose","classes","utils","classnames_default","href","react_default","a","createElement","esm_extends","ref","defaultProps","es_Badge","TagsPage","_ref","data","talks","edges","map","edge","node","allSpeakers","speakers","tags","R","s","talk","frontmatter","sort","talksWithSpeakers","speakersOfTalk","findSpeakersForTalk","assign","talksGroupedByTag","filteredTalk","filter","includes","layout","key","style","margin","index_es","icon","faTag","tagGroup","Fragment","id","speakersString","speaker","name","gatsby_browser_entry","to","fields","slug","title","dateTime","date","formatDate","query","LinkItem","children","NavItem","NavLink","gatsby_link_default","activeClassName","PageHeader","_this","_React$Component","call","this","toggle","setState","prevState","collapsed","state","render","Navbar","light","expand","Container","NavbarBrand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","page_header_LinkItem","React","Component","PageFooter","Sidebar","logo","Row","Col","sm","xs","md","alt","src","require","faTwitter","faFacebook","faEnvelope","faGithub","faCalendarAlt","faRss","fontawesome","config","autoAddCss","Layout","Helmet_default","site","siteMetadata","meta","content","description","dom","css","page_header","marginTop","sidebar","page_footer","_1238061294","module","exports","__webpack_require__","p","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","moment","locale","format","innerJoin"],"mappings":"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","file":"component---src-pages-tags-js-0a5f084ccff68c238ef2.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Tag, _extends({}, attributes, {\n      className: classes,\n      ref: innerRef\n    }))\n  );\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from \"react\"\n\nimport { graphql, Link } from \"gatsby\"\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTag } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { Badge } from \"reactstrap\"\n\nimport * as R from \"ramda\"\n\nimport Layout from \"../components/layout\"\nimport findSpeakersForTalk from \"../utils/find-speakers-for-talk\"\nimport formatDate from \"../utils/format-date\"\n\nconst TagsPage = ({ data }) => {\n  const talks = data.talks.edges.map(edge => edge.node)\n\n  const allSpeakers = data.speakers.edges.map(edge => edge.node)\n\n  const tags = R.filter(\n    s => s,\n    R.uniq(\n      // R.chain is equal to flatMap\n      R.chain(talk => talk.frontmatter.tags)(talks)\n    )\n  ).sort()\n\n  const talksWithSpeakers = talks.map(talk => {\n    const speakersOfTalk = findSpeakersForTalk({ allSpeakers, talk })\n\n    return { ...talk, speakersOfTalk }\n  })\n\n  const talksGroupedByTag = tags.map(tag => {\n    const filteredTalk = talksWithSpeakers\n      .filter(talk => talk.frontmatter.tags)\n      .filter(talk => talk.frontmatter.tags.includes(tag))\n\n    return {\n      tag,\n      talks: filteredTalk,\n    }\n  })\n\n  return (\n    <Layout>\n      <h2>Tags</h2>\n      <p>\n        {tags.map(tag => (\n          <Badge key={tag} style={{ margin: \"0.1rem\" }} href={`#${tag}`}>\n            <FontAwesomeIcon icon={faTag} /> {tag}\n          </Badge>\n        ))}\n      </p>\n\n      {talksGroupedByTag.map(tagGroup => {\n        const { tag, talks } = tagGroup\n\n        return (\n          <React.Fragment key={tag}>\n            <h3 id={tag}>{tag}</h3>\n            <ul>\n              {talks.map(talk => {\n                const speakersString = R.join(\", \")(talk.speakersOfTalk.map(speaker => speaker.frontmatter.name))\n\n                return (\n                  <li key={talk.id}>\n                    <span className=\"lead\">\n                      <Link to={talk.fields.slug}>{talk.frontmatter.title}</Link>\n                    </span>\n                    {\" | \"} <time dateTime={talk.frontmatter.date}>{formatDate(talk.frontmatter.date)}</time>\n                    <p>von {speakersString}</p>\n                  </li>\n                )\n              })}\n            </ul>\n          </React.Fragment>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default TagsPage\n\nexport const query = graphql`\n  query {\n    talks: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"talks\" } } }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date\n            tags\n            speaker\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    speakers: allMarkdownRemark(filter: { fields: { sourceName: { eq: \"speakers\" } } }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Link from \"gatsby-link\"\n\nimport { Container, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Collapse } from \"reactstrap\"\n\nconst LinkItem = ({ to, children }) => {\n  return (\n    <NavItem>\n      <NavLink\n        className=\"link-item\"\n        tag={props => {\n          return (\n            <Link {...props} to={to} activeClassName=\"active\">\n              {children}\n            </Link>\n          )\n        }}\n      />\n    </NavItem>\n  )\n}\n\nclass PageHeader extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      collapsed: false,\n    }\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({ collapsed: !prevState.collapsed }))\n  }\n\n  render() {\n    return (\n      <Navbar color=\"light\" light expand=\"sm\">\n        <Container>\n          <NavbarBrand to=\"/\" tag={props => <Link {...props} />}>\n            Java User Group Görlitz\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggle} />\n\n          <Collapse isOpen={this.state.collapsed} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <LinkItem to=\"/\">Aktuell</LinkItem>\n              <LinkItem to=\"/talks\">Vorträge</LinkItem>\n              <LinkItem to=\"/unterstuetzer\">Unterstützer</LinkItem>\n              <LinkItem to=\"/about\">About</LinkItem>\n              <LinkItem to=\"/mitmachen\">Mitmachen</LinkItem>\n            </Nav>\n          </Collapse>\n        </Container>\n      </Navbar>\n    )\n  }\n}\n\nexport default PageHeader\n","import React from \"react\"\n\nimport { Link } from \"gatsby\"\n\nconst PageFooter = () => (\n  <footer className=\"container footer\">\n    <p>\n      &copy; Manuel Mauky 2020 | <Link to=\"/impressum\">Impressum</Link> |{\" \"}\n      <Link to=\"/datenschutz\">Datenschutz</Link>\n    </p>\n  </footer>\n)\n\nexport default PageFooter\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nimport { faTwitter, faFacebook, faGooglePlus, faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { faEnvelope, faCalendarAlt, faRss, faAtom } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { Col, Row } from \"reactstrap\"\n\nconst Sidebar = ({ logo }) => (\n  <div className=\"sidebar\">\n    <div>\n      <Row>\n        <Col sm=\"6\" xs=\"12\" md=\"12\">\n          <img alt=\"Logo der JUG Görlitz\" src={require(\"../../content/images/logo.png\")}/>\n        </Col>\n        <Col sm=\"6\" xs=\"12\" md=\"12\">\n          <h3>\n            Wir sind Mitglied im\n            <br />\n            <a href=\"http://www.ijug.eu/\">iJUG Verband</a>\n          </h3>\n\n          <h3>Andere Medien</h3>\n          <ul className=\"list-unstyled\">\n            <li>\n              <a href=\"https://twitter.com/jug_gr\">\n                <FontAwesomeIcon icon={faTwitter} /> Twitter\n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.facebook.com/juggr\">\n                <FontAwesomeIcon icon={faFacebook} /> Facebook\n              </a>\n            </li>\n            <li>\n              <a href=\"https://groups.google.com/d/forum/juggr\">\n                <FontAwesomeIcon icon={faEnvelope} /> Mailing-List\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/juggr\">\n                <FontAwesomeIcon icon={faGithub} /> Github\n              </a>\n            </li>\n            <li>\n              <a href=\"https://calendar.google.com/calendar/embed?src=gtgjid1tkrv0pl7o1hsqr3d8d8%40group.calendar.google.com&ctz=Europe/Berlin\">\n                <FontAwesomeIcon icon={faCalendarAlt} /> Kalender\n              </a>\n              <a href=\"https://www.google.com/calendar/ical/gtgjid1tkrv0pl7o1hsqr3d8d8%40group.calendar.google.com/public/basic.ics\">\n                (ICAL)\n              </a>\n            </li>\n            <li>\n              <FontAwesomeIcon icon={faRss}/> Feeds:\n              <ul>\n                <li>\n                  <a href=\"/atom.xml\">Atom</a>\n                </li>\n                <li>\n                  <a href=\"/rss.xml\">RSS</a>\n                </li>\n                <li>\n                  <a href=\"/feed.json\">JSON</a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </Col>\n      </Row>\n    </div>\n\n    <br />\n\n    <br/>\n    <a href=\"https://jax.de/\">\n      <img alt=\"Banner für die JAX 2020\" src={require(\"../../content/images/jax20_banner.jpg\")} />\n    </a>\n\n    <br />\n\n  </div>\n)\n\nexport default Sidebar\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport {Container, Row, Col} from \"reactstrap\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport \"../styles/style.css\"\n\nimport PageHeader from \"./page-header\"\nimport PageFooter from \"./page-footer\"\nimport Sidebar from \"./sidebar\"\n\nimport fontawesome from '@fortawesome/fontawesome'\n\nfontawesome.config = {\n  autoAddCss: false\n}\n\nconst Layout = ({ children, data }) => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n              description\n            }\n          }\n\n          logo: file(relativePath:{eq: \"logo.png\"}) {\n            id\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      `}\n      render={data => (\n        <>\n          <Helmet\n            title={data.site.siteMetadata.title}\n            meta={[\n              { name: \"description\", content: data.site.siteMetadata.description },\n              {\n                name: \"keywords\",\n                content: \"java, usergroup, görlitz, programmierung\",\n              },\n            ]}\n          >\n            <style>{fontawesome.dom.css()}</style>\n          </Helmet>\n\n          <PageHeader />\n          <Container style={{\n            marginTop: \"1em\"\n          }}>\n            <Row>\n              <Col md=\"9\">\n                {children}\n              </Col>\n\n              <Col md=\"3\">\n                  <Sidebar logo={data.logo}/>\n              </Col>\n            </Row>\n          </Container>\n\n          <PageFooter />\n        </>\n      )}\n    />\n  )\n}\n\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/logo-e9c103f16829b2a6e46db56f7af9a0e2.png\";","module.exports = __webpack_public_path__ + \"static/jax20_banner-5284a335ab3a386545d6afab684793cd.jpg\";","import moment from \"moment\"\n\nimport \"moment/locale/de\"\n\nmoment.locale(\"de\")\n\nconst formatDate = date => moment(date).format(\"LL\")\n\nexport default formatDate","const R = require(\"ramda\")\n\n/**\n * For each talk we cannot directly query the speaker info (especially the name) but only the speakerSlugs (not the full slug but the important\n * speaker-identifier with which we can create the slug)\n * we have to query all speakers in a separate query. Then we need to extract from this allSpeakers-list\n * only those speaker info objects that belong to a given talk. This is what this method is doing.\n *\n * @param allSpeakers an array of all speaker objects\n * @param talk a talk object\n */\nconst findSpeakersForTalk = ({ allSpeakers, talk }) => {\n  return R.innerJoin(\n    (speaker, slug) => speaker.fields.slug === `/speakers/${slug}/`,\n    allSpeakers,\n    talk.frontmatter.speaker\n  )\n}\n\nmodule.exports = findSpeakersForTalk"],"sourceRoot":""}